{"version":3,"sources":["config.js","Assets/images/icons lazy /^/.*$/ groupOptions: {} namespace object","Components/icons/appstore.js","Components/icons/bookmark.js","Components/icons/codepen.js","Components/icons/external.js","Components/icons/folder.js","Components/icons/fork.js","Components/icons/icon.js","Components/icons/github.js","Components/icons/instagram.js","Components/icons/linkedin.js","Components/icons/loader.js","Components/icons/logo.js","Components/icons/playstore.js","Components/icons/star.js","Components/icons/twitter.js","Components/icons/medium.js","Components/icons/stackoverflow.js","Components/icons/leetcode.js","Components/icons/apple.js","Components/icons/microsoft.js","Components/icons/adobe.js","Components/icons/capital.js","Components/icons/amazon.js","Components/icons/facebook.js","Components/icons/goldman.js","Components/icons/google.js","Components/icons/asana.js","Components/icons/lyft.js","Components/icons/uber.js","Components/icons/oracle.js","Components/icons/bloomberg.js","Components/icons/quora.js","Components/icons/intuit.js","Components/icons/snapchat.js","Components/icons/pinterest.js","Components/icons/qualtrics.js","Components/icons/airbnb.js","Components/icons/jpmorgan.js","Components/icons/blackrock.js","Components/icons/akuna.js","Components/icons/salesforce.js","Components/icons/citadel.js","Components/icons/palantir.js","Components/icons/atlassian.js","Components/icons/walmart.js","Components/icons/sap.js","Components/icons/idea.js","Components/icons/home.js","Components/Loader/index.js","styles/mixins.js","styles/theme.js","styles/fonts.js","Assets/fonts/Calibre/Calibre-Regular.woff","Assets/fonts/Calibre/Calibre-Regular.woff2","Assets/fonts/Calibre/Calibre-Medium.woff","Assets/fonts/Calibre/Calibre-Medium.woff2","Assets/fonts/Calibre/Calibre-Semibold.woff","Assets/fonts/Calibre/Calibre-Semibold.woff2","Assets/fonts/Calibre/Calibre-RegularItalic.woff","Assets/fonts/Calibre/Calibre-RegularItalic.woff2","Assets/fonts/Calibre/Calibre-MediumItalic.woff","Assets/fonts/Calibre/Calibre-MediumItalic.woff2","Assets/fonts/Calibre/Calibre-SemiboldItalic.woff","Assets/fonts/Calibre/Calibre-SemiboldItalic.woff2","Assets/fonts/SFMono/SFMono-Regular.woff","Assets/fonts/SFMono/SFMono-Regular.woff2","Assets/fonts/SFMono/SFMono-Semibold.woff","Assets/fonts/SFMono/SFMono-Semibold.woff2","Assets/fonts/SFMono/SFMono-RegularItalic.woff","Assets/fonts/SFMono/SFMono-RegularItalic.woff2","Assets/fonts/SFMono/SFMono-SemiboldItalic.woff","Assets/fonts/SFMono/SFMono-SemiboldItalic.woff2","styles/variables.js","styles/TransitionStyles.js","styles/PrismStyles.js","styles/GlobalStyle.js","core/constants.js","hooks/useScrollDirection.js","hooks/usePrefersReducedMotion.js","hooks/useOnClickOutside.js","Components/Menu.js","Components/Nav.js","Components/Layout.js","util/sr.js","Components/Checkbox.js","Components/Table/Table.js","Components/shared/progressProvider.js","Components/Card/Card.js","Assets/data/data.js","Pages/Dashboard.js","Assets/data/tips.js","Pages/Tips.js","Pages/Credits.js","core/router.js","util/util.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["module","exports","email","socialMedia","name","url","navLinks","colors","green","navy","darkNavy","srConfig","delay","viewFactor","origin","distance","duration","rotate","x","y","z","opacity","scale","easing","mobile","reset","useDelay","viewOffset","top","right","bottom","left","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","IconAppStore","version","xmlns","viewBox","xmlSpace","d","IconBookmark","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","IconCodepen","role","points","x1","y1","x2","y2","IconExternal","IconFolder","IconFork","cx","cy","r","Icon","useState","imageIcons","setImageIcons","useEffect","includes","image","newImages","default","src","alt","height","width","data-tip","IconGitHub","IconInstagram","rx","ry","IconLinkedIn","IconLoader","dy","textAnchor","IconLogo","transform","fontSize","fontWeight","IconPlayStore","IconStar","IconTwitter","IconMedium","IconStackOverflow","fillRule","IconLeetCode","IconApple","data-name","IconMicrosoft","IconAdobe","IconCapital","IconAmazon","IconFacebook","gradientUnits","offset","stopColor","IconGoldman","clipRule","IconGoogle","IconAsana","gradientTransform","IconLyft","IconUber","IconOracle","IconBloomberg","IconQuora","IconIntuit","IconSnapchat","IconPinterest","IconQualtrics","preserveAspectRatio","IconAirbnb","IconJPMorgan","IconBlackRock","IconAkuna","IconSalesforce","IconCitadel","IconPalantir","IconAtlassian","IconWalmart","IconSAP","IconIdea","IconHome","StyledLoader","styled","div","theme","mixins","flexCenter","props","isMounted","Loader","finishLoading","setIsMounted","timeout","setTimeout","anime","timeline","complete","add","targets","strokeDashoffset","setDashoffset","zIndex","clearTimeout","Helmet","bodyAttributes","class","button","css","bp","mobileS","mobileM","mobileL","tabletS","tabletL","desktopXS","desktopS","desktopM","desktopL","flexBetween","link","inlineLink","smallButton","bigButton","boxShadow","fancyList","resetList","calibre","normal","400","500","600","italic","sfMono","createFontFaces","family","style","styles","entries","weight","formats","woff","woff2","calibreNormal","calibreItalic","sfMonoNormal","sfMonoItalic","Fonts","variables","TransitionStyles","prismColors","bg","lineHighlight","blue","purple","yellow","orange","red","grey","comment","PrismStyles","variable","GlobalStyle","createGlobalStyle","fonts","icon","KEY_CODES","SCROLL_DOWN","useScrollDirection","initialDirection","thresholdPixels","off","scrollDir","setScrollDir","threshold","lastScrollY","window","pageYOffset","ticking","updateScrollDir","scrollY","Math","abs","onScroll","requestAnimationFrame","addEventListener","removeEventListener","QUERY","isRenderingOnServer","getInitialState","matchMedia","matches","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","StyledMenu","StyledHamburgerButton","menuOpen","StyledSidebar","aside","Menu","menuFocusables","firstFocusableEl","lastFocusableEl","setMenuOpen","buttonRef","useRef","navRef","onKeyDown","key","length","preventDefault","shiftKey","activeElement","focus","handleBackwardTab","handleForwardTab","onResize","currentTarget","innerWidth","Array","from","querySelectorAll","wrapperRef","onClick","aria-label","aria-hidden","tabIndex","i","to","StyledHeader","header","scrollDirection","scrolledToTop","StyledNav","nav","StyledLinks","Nav","isHome","setScrolledToTop","prefersReducedMotion","setPrefersReducedMotion","mediaQueryList","addListener","removeListener","usePrefersReducedMotion","handleScroll","fadeClass","fadeDownClass","Logo","href","ResumeLink","TransitionGroup","component","CSSTransition","classNames","transitionDelay","StyledContent","Layout","children","location","useLocation","pathname","isLoading","setIsLoading","substring","el","getElementById","scrollIntoView","allLinks","forEach","host","setAttribute","handleExternalLinks","sr","ScrollReveal","StyledCheck","checkbox","type","checked","value","onChange","onCheck","htmlFor","StyledTableContainer","Table","projects","questions","revealTitle","revealTable","revealProjects","reveal","node","premium","companies","difficulty","pattern","Checkbox","toggleCheck","data-for","data-iscapture","item","place","effect","multiline","ChangingProgressProvider","state","valuesIndex","setInterval","setState","values","this","interval","React","Component","defaultProps","StyledProject","section","Card","showQuestions","setShowQuestions","questionList","meta","questionInfo","setQuestionInfo","solveCount","setSolveCount","questionsList","setQuestionsList","hideSolved","setHideSolved","viewAbleQuestions","setViewAbleQuestions","hideAnswered","localStorage","getItem","category","console","log","setItem","questionCheckedList","decidedCheckList","JSON","parse","tempList","tempQuestionInfo","tempSolveCount","element","project","push","stringify","lineWidth","rounded","animate","data","title","Easy","color","Medium","Hard","alignSelf","round","text","buildStyles","textColor","pathColor","display","justifyContent","alignItems","marginRight","marginTop","tempQues","filter","q","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","activeBoxShadow","checkedRowIndex","findIndex","tempCount","newArr","index","sortBy","sort","a","b","StyledDashboard","Dashboard","groupedQuestions","groupBy","cat","metaInfo","patterns","modelConnectionNodes","groupedEntities","keyId","tips","techniques","examples","StyledDiv","Tips","tip","join","StyledSection","Credits","router","path","tourSteps","selector","content","size","backgroundColor","showOnMobile","defaultChecked","marginLeft","steps","step","App","isTourOpen","setIsTourOpen","undefined","nextStep","isTourDone","isOpen","onRequestClose","lastStepNextButton","accentColor","showNumber","closeWithMask","startAt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","app","StrictMode","ReactDOM","render","URL","process","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"wGAAAA,EAAOC,QAAU,CACbC,MAAO,uBAEPC,YAAa,CACX,CACEC,KAAM,SACNC,IAAK,oCAEP,CACED,KAAM,gBACNC,IAAK,iDAEP,CACED,KAAM,SACNC,IAAK,qCAEP,CACED,KAAM,WACNC,IAAK,yCAEP,CACED,KAAM,UACNC,IAAK,0CAITC,SAAU,CACR,CACEF,KAAM,QACNC,IAAK,WAEP,CACED,KAAM,aACNC,IAAK,UAEP,CACED,KAAM,OACNC,IAAK,cAEP,CACED,KAAM,UACNC,IAAK,cAITE,OAAQ,CACNC,MAAO,UACPC,KAAM,UACNC,SAAU,WAGZC,SAAU,eAACC,EAAD,uDAAS,IAAKC,EAAd,uDAA2B,IAA3B,MAAqC,CAC7CC,OAAQ,SACRC,SAAU,OACVC,SAAU,IACVJ,QACAK,OAAQ,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACzBC,QAAS,EACTC,MAAO,EACPC,OAAQ,uCACRC,QAAQ,EACRC,OAAO,EACPC,SAAU,SACVb,aACAc,WAAY,CAAEC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,O,6DChEvD,IAAIC,EAAM,CACT,cAAe,CACd,GACA,IAED,cAAe,CACd,GACA,GAED,eAAgB,CACf,GACA,IAED,eAAgB,CACf,GACA,GAED,sBAAuB,CACtB,GACA,IAED,sBAAuB,CACtB,GACA,GAED,eAAgB,CACf,GACA,IAED,eAAgB,CACf,GACA,GAED,cAAe,CACd,GACA,IAED,cAAe,CACd,GACA,GAED,cAAe,CACd,GACA,IAED,cAAe,CACd,GACA,GAED,kBAAmB,CAClB,GACA,IAED,kBAAmB,CAClB,GACA,GAED,kBAAmB,CAClB,GACA,IAED,kBAAmB,CAClB,GACA,IAED,kBAAmB,CAClB,GACA,IAED,kBAAmB,CAClB,GACA,IAED,oBAAqB,CACpB,GACA,IAED,oBAAqB,CACpB,GACA,IAED,gBAAiB,CAChB,GACA,IAED,gBAAiB,CAChB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,cAAe,CACd,IACA,IAED,cAAe,CACd,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,YAAa,CACZ,IACA,IAED,iBAAkB,CACjB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,cAAe,CACd,IACA,IAED,eAAgB,CACf,IACA,IAED,gBAAiB,CAChB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,aAAc,CACb,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,GACzB5C,EAAOC,QAAUgC,G,+KClOFc,EAhDM,kBACnB,sBACE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AY,UAEd,CACE,GAAM,EACN,KAAQ,2CACR,IAAO,0EACP,QAAW,CACT,UAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,UAEF,SAAY,UAEd,CACE,GAAM,EACN,KAAQ,gBACR,IAAO,+CACP,QAAW,CACT,SACA,oBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,SACA,YAEF,SAAY,UAEd,CACE,GAAM,EACN,KAAQ,+BACR,IAAO,8DACP,QAAW,CACT,UAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,QACA,YACA,QACA,OACA,QACA,OACA,UAEF,SAAY,UAEd,CACE,GAAM,EACN,KAAQ,4BACR,IAAO,2DACP,QAAW,CACT,SACA,gBACA,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,SACA,QACA,SACA,aAEF,SAAY,gBAEd,CACE,GAAM,EACN,KAAQ,kCACR,IAAO,iEACP,QAAW,CACT,UAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,YAEF,SAAY,UAEd,CACE,GAAM,EACN,KAAQ,oBACR,IAAO,mDACP,QAAW,CACT,UAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,YACA,SACA,SACA,gBACA,SAEF,SAAY,UAEd,CACE,GAAM,EACN,KAAQ,gBACR,IAAO,+CACP,QAAW,CACT,UAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,QACA,WACA,SACA,SACA,SAEF,SAAY,UAEd,CACE,GAAM,EACN,KAAQ,eACR,IAAO,8CACP,QAAW,CACT,UAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,QACA,OACA,QACA,SACA,YACA,WACA,SAEF,SAAY,UAEd,CACE,GAAM,GACN,KAAQ,cACR,IAAO,6CACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,YACA,SACA,WACA,WACA,QACA,SACA,YACA,SACA,WAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,yBACR,IAAO,wDACP,QAAW,CACT,UAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,YACA,WACA,SACA,SACA,SACA,QACA,QACA,QAEF,SAAY,UAEd,CACE,GAAM,GACN,KAAQ,+BACR,IAAO,8DACP,QAAW,CACT,UAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,YACA,SACA,WACA,UACA,aAEF,SAAY,UAEd,CACE,GAAM,GACN,KAAQ,0BACR,IAAO,yDACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,UAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,UACR,IAAO,yCACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,YACA,OACA,aAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,aACR,IAAO,4CACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,UAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,eACR,IAAO,8CACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,YACA,WACA,QACA,UAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,kBACR,IAAO,iDACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,aAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,eACR,IAAO,8CACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,SAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,kBACR,IAAO,iDACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,YACA,YACA,SACA,QACA,SACA,OACA,SAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,qBACR,IAAO,oDACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,UAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,sBACR,IAAO,qDACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,SACA,aAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,uBACR,IAAO,sDACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,SACA,WACA,SACA,YACA,QACA,SAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,aACR,IAAO,4CACP,QAAW,CACT,MACA,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,0BACR,IAAO,yDACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,QACA,SACA,YAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,wCACR,IAAO,uEACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,WACA,QACA,SACA,SACA,OACA,YAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,2BACR,IAAO,0DACP,QAAW,CACT,gBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,UAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,gBACR,IAAO,+CACP,QAAW,CACT,gBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,YACA,SACA,WACA,SACA,YACA,UAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,WACR,IAAO,0CACP,QAAW,CACT,gBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,SACA,YACA,SAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,kBACR,IAAO,iDACP,QAAW,CACT,uBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,QACA,SACA,QACA,gBACA,OACA,SACA,UAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,eACR,IAAO,8CACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,SACA,YACA,UAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,kCACR,IAAO,iEACP,QAAW,CACT,uBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,YACA,WACA,QACA,SACA,QACA,YACA,gBACA,OACA,WACA,UAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,mBACR,IAAO,kDACP,QAAW,CACT,uBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,YACA,SACA,WACA,QACA,SACA,QACA,YACA,WACA,UAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,8BACR,IAAO,2DACP,QAAW,CACT,uBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,YAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,kBACR,IAAO,iDACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,aAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,cACR,IAAO,6CACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,SACA,gBACA,YACA,QACA,OACA,SACA,WACA,SACA,aAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,2BACR,IAAO,0DACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,SACA,WACA,QACA,iBAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,iCACR,IAAO,gEACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,QACA,SACA,WACA,SACA,YACA,YACA,WAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,gCACR,IAAO,+DACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,WACA,QACA,SACA,gBACA,SACA,SAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,aACR,IAAO,4CACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,YACA,YACA,YACA,SACA,UAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,qBACR,IAAO,oDACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,SAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,cACR,IAAO,6CACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,WACA,OACA,gBACA,YACA,QACA,QAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,eACR,IAAO,8CACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,SACA,WACA,SACA,cAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,YACR,IAAO,2CACP,QAAW,CACT,sBACA,UAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,QACA,aAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,yBACR,IAAO,wDACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,gBACA,WACA,UACA,SACA,YACA,SACA,aAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,2CACR,IAAO,0EACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,YAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,6BACR,IAAO,4DACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,WACA,aAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,mCACR,IAAO,kEACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,SACA,WACA,SAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,gDACR,IAAO,+EACP,QAAW,CACT,uBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,WACA,QACA,iBAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,gBACR,IAAO,+CACP,QAAW,CACT,sBACA,oBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,SAEF,SAAY,uBAEd,CACE,GAAM,GACN,KAAQ,oBACR,IAAO,mDACP,QAAW,CACT,wBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,YACA,SACA,QACA,gBACA,SACA,aAEF,SAAY,wBAEd,CACE,GAAM,GACN,KAAQ,4BACR,IAAO,2DACP,QAAW,CACT,wBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,aAEF,SAAY,wBAEd,CACE,GAAM,GACN,KAAQ,yBACR,IAAO,wDACP,QAAW,CACT,wBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,YACA,WACA,SACA,cACA,QACA,YACA,SACA,UAEF,SAAY,wBAEd,CACE,GAAM,GACN,KAAQ,8BACR,IAAO,6DACP,QAAW,CACT,wBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,SACA,SACA,YACA,SAEF,SAAY,wBAEd,CACE,GAAM,GACN,KAAQ,qCACR,IAAO,oEACP,QAAW,CACT,wBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,gBACA,QACA,UAEF,SAAY,wBAEd,CACE,GAAM,GACN,KAAQ,uBACR,IAAO,sDACP,QAAW,CACT,wBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,aAEF,SAAY,wBAEd,CACE,GAAM,GACN,KAAQ,kBACR,IAAO,iDACP,QAAW,CACT,wBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,YACA,SACA,WACA,QACA,QACA,SACA,QAEF,SAAY,wBAEd,CACE,GAAM,GACN,KAAQ,mCACR,IAAO,kEACP,QAAW,CACT,wBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,QACA,aAEF,SAAY,wBAEd,CACE,GAAM,GACN,KAAQ,YACR,IAAO,2CACP,QAAW,CACT,wBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,YACA,SAEF,SAAY,wBAEd,CACE,GAAM,GACN,KAAQ,eACR,IAAO,8CACP,QAAW,CACT,wBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,WACA,QAEF,SAAY,wBAEd,CACE,GAAM,GACN,KAAQ,cACR,IAAO,6CACP,QAAW,CACT,MACA,MACA,SAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,YACA,YACA,UACA,OACA,QACA,SAEF,SAAY,SAEd,CACE,GAAM,GACN,KAAQ,8BACR,IAAO,6DACP,QAAW,CACT,MACA,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,UAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,oBACR,IAAO,mDACP,QAAW,CACT,MACA,MACA,cAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,YACA,WACA,SACA,QACA,SACA,OACA,UACA,YACA,gBACA,WACA,YAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,mBACR,IAAO,kDACP,QAAW,CACT,MACA,MACA,QACA,cAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,aAEF,SAAY,SAEd,CACE,GAAM,GACN,KAAQ,wDACR,IAAO,uFACP,QAAW,CACT,MACA,MACA,QACA,cAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,WACA,WACA,YACA,SAEF,SAAY,SAEd,CACE,GAAM,GACN,KAAQ,sBACR,IAAO,qDACP,QAAW,CACT,sCAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,QACA,QACA,WACA,YACA,OACA,SACA,SACA,YACA,iBAEF,SAAY,cAEd,CACE,GAAM,GACN,KAAQ,yBACR,IAAO,wDACP,QAAW,CACT,sCAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,WACA,YACA,UAEF,SAAY,cAEd,CACE,GAAM,GACN,KAAQ,cACR,IAAO,6CACP,QAAW,CACT,sCAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,YACA,SAEF,SAAY,cAEd,CACE,GAAM,GACN,KAAQ,sBACR,IAAO,qDACP,QAAW,CACT,sCAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,UAEF,SAAY,cAEd,CACE,GAAM,GACN,KAAQ,uBACR,IAAO,sDACP,QAAW,CACT,sCAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,YACA,YACA,SACA,UAEF,SAAY,cAEd,CACE,GAAM,GACN,KAAQ,2BACR,IAAO,0DACP,QAAW,CACT,sCAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,YACA,QACA,YAEF,SAAY,cAEd,CACE,GAAM,GACN,KAAQ,yBACR,IAAO,wDACP,QAAW,CACT,gBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,QACA,YACA,YACA,WACA,SACA,WACA,QAEF,SAAY,gBAEd,CACE,GAAM,GACN,KAAQ,0CACR,IAAO,yEACP,QAAW,CACT,gBACA,QAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,UAEF,SAAY,QAEd,CACE,GAAM,GACN,KAAQ,kCACR,IAAO,iEACP,QAAW,CACT,QAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,UAEF,SAAY,QAEd,CACE,GAAM,GACN,KAAQ,uBACR,IAAO,sDACP,QAAW,CACT,QAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,WACA,YACA,YACA,QACA,SACA,SACA,UACA,gBACA,QAEF,SAAY,QAEd,CACE,GAAM,GACN,KAAQ,gDACR,IAAO,+EACP,QAAW,CACT,QAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,aAEF,SAAY,QAEd,CACE,GAAM,GACN,KAAQ,gBACR,IAAO,8CACP,QAAW,CACT,aAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,YACA,YACA,SACA,SAEF,SAAY,aAEd,CACE,GAAM,GACN,KAAQ,kBACR,IAAO,iDACP,QAAW,CACT,aAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,WACA,SACA,YACA,QACA,SACA,QACA,YACA,OACA,UACA,YACA,SACA,aACA,WAEF,SAAY,aAEd,CACE,GAAM,GACN,KAAQ,8BACR,IAAO,6DACP,QAAW,CACT,aAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,OACA,QACA,SACA,SACA,aAEF,SAAY,aAEd,CACE,GAAM,GACN,KAAQ,4BACR,IAAO,2DACP,QAAW,CACT,aAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,YACA,UAEF,SAAY,aAEd,CACE,GAAM,GACN,KAAQ,mBACR,IAAO,kDACP,QAAW,CACT,OACA,aAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,SACA,WACA,YACA,OACA,SACA,UACA,SAEF,SAAY,aAEd,CACE,GAAM,GACN,KAAQ,iBACR,IAAO,gDACP,QAAW,CACT,SACA,QAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA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W,EACX,UAAa,CACX,SACA,UAEF,SAAY,kBAEd,CACE,GAAM,IACN,KAAQ,8DACR,IAAO,6FACP,QAAW,CACT,kBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,aAEF,SAAY,kBAEd,CACE,GAAM,IACN,KAAQ,2BACR,IAAO,0DACP,QAAW,CACT,kBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,SACA,YACA,SACA,QACA,WACA,OACA,OACA,SAEF,SAAY,kBAEd,CACE,GAAM,IACN,KAAQ,4CACR,IAAO,2EACP,QAAW,CACT,kBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,SAEF,SAAY,kBAEd,CACE,GAAM,IACN,KAAQ,gCACR,IAAO,+DACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,WACA,YACA,QACA,UAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,6BACR,IAAO,4DACP,QAAW,CACT,QAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,WACA,SACA,OACA,SAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,0BACR,IAAO,yDACP,QAAW,CACT,QAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,QACA,cACA,SACA,SACA,YACA,aAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,+BACR,IAAO,8DACP,QAAW,CACT,QAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,SACA,YAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,kCACR,IAAO,iEACP,QAAW,CACT,QAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,QACA,YACA,YACA,SACA,gBACA,WACA,SAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,oBACR,IAAO,mDACP,QAAW,CACT,SACA,QAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,SACA,WACA,OACA,iBAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,oCACR,IAAO,kEACP,QAAW,CACT,SACA,QAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,YACA,YAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,sBACR,IAAO,qDACP,QAAW,CACT,SACA,QAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,UAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,0BACR,IAAO,yDACP,QAAW,CACT,cACA,QAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,YACA,YACA,SAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,kBACR,IAAO,iDACP,QAAW,CACT,MACA,MACA,QACA,oBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,WACA,SACA,YACA,YACA,SACA,QAEF,SAAY,SAEd,CACE,GAAM,IACN,KAAQ,qBACR,IAAO,oDACP,QAAW,CACT,MACA,MACA,QACA,oBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,WACA,WACA,SACA,SACA,YACA,SACA,aAEF,SAAY,SAEd,CACE,GAAM,IACN,KAAQ,uBACR,IAAO,sDACP,QAAW,CACT,MACA,QACA,oBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YAEF,SAAY,SAEd,CACE,GAAM,IACN,KAAQ,mBACR,IAAO,iDACP,QAAW,CACT,QACA,oBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,SACA,SACA,YACA,SACA,YACA,SAEF,SAAY,SAEd,CACE,GAAM,IACN,KAAQ,0BACR,IAAO,wDACP,QAAW,CACT,QACA,oBAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,UAEF,SAAY,SAEd,CACE,GAAM,IACN,KAAQ,uCACR,IAAO,sEACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,SAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,mCACR,IAAO,kEACP,QAAW,CACT,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,YAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,+BACR,IAAO,8DACP,QAAW,CACT,MACA,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,WACA,SAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,oCACR,IAAO,mEACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,WACA,YACA,SACA,WACA,QACA,SACA,QAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,2CACR,IAAO,0EACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,YACA,QACA,WACA,YACA,SACA,gBACA,SACA,SAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,8CACR,IAAO,6EACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,YACA,WACA,SACA,UAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,iDACR,IAAO,gFACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,SACA,YACA,YAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,8BACR,IAAO,6DACP,QAAW,CACT,MACA,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,YACA,YACA,UAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,sCACR,IAAO,qEACP,QAAW,CACT,MACA,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,SACA,SACA,aAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,YACR,IAAO,2CACP,QAAW,CACT,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,SACA,aAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,WACR,IAAO,0CACP,QAAW,CACT,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,SACA,YACA,QACA,UAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,0BACR,IAAO,yDACP,QAAW,CACT,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,YACA,SACA,YACA,SACA,UAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,yBACR,IAAO,wDACP,QAAW,CACT,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,WACA,SACA,SAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,+BACR,IAAO,8DACP,QAAW,CACT,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,SACA,aAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,iDACR,IAAO,gFACP,QAAW,CACT,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,WACA,WACA,SACA,aAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,0BACR,IAAO,yDACP,QAAW,CACT,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,YAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,qBACR,IAAO,oDACP,QAAW,CACT,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,YACA,SACA,SACA,WACA,YACA,SAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,cACR,IAAO,6CACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,aAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,eACR,IAAO,8CACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,aAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,0CACR,IAAO,yEACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,WACA,YACA,SACA,WACA,QACA,SACA,QACA,SACA,OACA,YACA,SACA,WACA,aAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,sBACR,IAAO,qDACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,SAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,+BACR,IAAO,8DACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,aAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,4DACR,IAAO,2FACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,WACA,YACA,WAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,8BACR,IAAO,6DACP,QAAW,CACT,OAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,YACA,SACA,WACA,YACA,QACA,QACA,SACA,QAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,+BACR,IAAO,4DACP,QAAW,CACT,SACA,QAEF,WAAc,SACd,SAAW,EACX,UAAa,CACX,SACA,YACA,SACA,YACA,WACA,QACA,UACA,iBAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,+BACR,IAAO,8DACP,QAAW,CACT,OAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,SACA,SACA,YACA,QACA,YACA,SAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,wCACR,IAAO,uEACP,QAAW,CACT,UAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,YACA,SACA,WACA,OACA,SACA,YACA,QACA,YACA,UAEF,SAAY,iBAEd,CACE,GAAM,IACN,KAAQ,iBACR,IAAO,gDACP,QAAW,CACT,MACA,QAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,YACA,QACA,OACA,SACA,UACA,YAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,+BACR,IAAO,8DACP,QAAW,CACT,QAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,WACA,YACA,QACA,SACA,YACA,gBACA,UACA,QACA,aACA,QAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,wBACR,IAAO,uDACP,QAAW,CACT,QAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,SACA,WACA,SAEF,SAAY,QAEd,CACE,GAAM,IACN,KAAQ,UACR,IAAO,yCACP,QAAW,CACT,gBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,SACA,QACA,SACA,QACA,YACA,YACA,WACA,OACA,SACA,UACA,iBAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,4BACR,IAAO,2DACP,QAAW,CACT,gBAEF,WAAc,OACd,SAAW,EACX,UAAa,CACX,WACA,SACA,QACA,OACA,YACA,SACA,aAEF,SAAY,gBAEd,CACE,GAAM,IACN,KAAQ,2BACR,IAAO,yDACP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","file":"static/js/main.3f5c1de5.chunk.js","sourcesContent":["module.exports = {\r\n    email: 'adilasanis@gmail.com',\r\n  \r\n    socialMedia: [\r\n      {\r\n        name: 'GitHub',\r\n        url: 'https://github.com/programoholic',\r\n      },\r\n      {\r\n        name: 'Stackoverflow',\r\n        url: 'https://stackoverflow.com/story/programoholic',\r\n      },\r\n      {\r\n        name: 'Medium',\r\n        url: 'https://programoholic.medium.com/',\r\n      },\r\n      {\r\n        name: 'Linkedin',\r\n        url: 'https://www.linkedin.com/in/anis-alam',\r\n      },\r\n      {\r\n        name: 'Codepen',\r\n        url: 'https://stackblitz.com/@programoholic',\r\n      },\r\n    ],\r\n  \r\n    navLinks: [\r\n      {\r\n        name: 'About',\r\n        url: '/#about',\r\n      },\r\n      {\r\n        name: 'Experience',\r\n        url: '/#jobs',\r\n      },\r\n      {\r\n        name: 'Work',\r\n        url: '/#projects',\r\n      },\r\n      {\r\n        name: 'Contact',\r\n        url: '/#contact',\r\n      },\r\n    ],\r\n  \r\n    colors: {\r\n      green: '#64ffda',\r\n      navy: '#0a192f',\r\n      darkNavy: '#020c1b',\r\n    },\r\n  \r\n    srConfig: (delay = 200, viewFactor = 0.25) => ({\r\n      origin: 'bottom',\r\n      distance: '20px',\r\n      duration: 500,\r\n      delay,\r\n      rotate: { x: 0, y: 0, z: 0 },\r\n      opacity: 0,\r\n      scale: 1,\r\n      easing: 'cubic-bezier(0.645, 0.045, 0.355, 1)',\r\n      mobile: true,\r\n      reset: false,\r\n      useDelay: 'always',\r\n      viewFactor,\r\n      viewOffset: { top: 0, right: 0, bottom: 0, left: 0 },\r\n    }),\r\n  };\r\n  ","var map = {\n\t\"./Adobe.png\": [\n\t\t77,\n\t\t34\n\t],\n\t\"./Adobe.svg\": [\n\t\t78,\n\t\t3\n\t],\n\t\"./Airbnb.png\": [\n\t\t79,\n\t\t35\n\t],\n\t\"./Airbnb.svg\": [\n\t\t80,\n\t\t4\n\t],\n\t\"./Akuna Capital.png\": [\n\t\t81,\n\t\t36\n\t],\n\t\"./Akuna Capital.svg\": [\n\t\t82,\n\t\t5\n\t],\n\t\"./Amazon.png\": [\n\t\t83,\n\t\t37\n\t],\n\t\"./Amazon.svg\": [\n\t\t84,\n\t\t6\n\t],\n\t\"./Apple.png\": [\n\t\t85,\n\t\t38\n\t],\n\t\"./Apple.svg\": [\n\t\t86,\n\t\t7\n\t],\n\t\"./Asana.png\": [\n\t\t87,\n\t\t39\n\t],\n\t\"./Asana.svg\": [\n\t\t88,\n\t\t8\n\t],\n\t\"./Atlassian.png\": [\n\t\t89,\n\t\t40\n\t],\n\t\"./Atlassian.svg\": [\n\t\t90,\n\t\t9\n\t],\n\t\"./BlackRock.png\": [\n\t\t91,\n\t\t41\n\t],\n\t\"./BlackRock.svg\": [\n\t\t92,\n\t\t10\n\t],\n\t\"./Bloomberg.png\": [\n\t\t93,\n\t\t42\n\t],\n\t\"./Bloomberg.svg\": [\n\t\t94,\n\t\t11\n\t],\n\t\"./Capital One.png\": [\n\t\t95,\n\t\t43\n\t],\n\t\"./Capital One.svg\": [\n\t\t96,\n\t\t12\n\t],\n\t\"./Citadel.png\": [\n\t\t97,\n\t\t44\n\t],\n\t\"./Citadel.svg\": [\n\t\t98,\n\t\t13\n\t],\n\t\"./Facebook.png\": [\n\t\t99,\n\t\t45\n\t],\n\t\"./Facebook.svg\": [\n\t\t100,\n\t\t14\n\t],\n\t\"./Goldman Sachs.png\": [\n\t\t101,\n\t\t46\n\t],\n\t\"./Goldman Sachs.svg\": [\n\t\t102,\n\t\t15\n\t],\n\t\"./Google.png\": [\n\t\t103,\n\t\t47\n\t],\n\t\"./Google.svg\": [\n\t\t104,\n\t\t16\n\t],\n\t\"./Intuit.png\": [\n\t\t105,\n\t\t48\n\t],\n\t\"./Intuit.svg\": [\n\t\t106,\n\t\t17\n\t],\n\t\"./JPMorgan.png\": [\n\t\t107,\n\t\t49\n\t],\n\t\"./JPMorgan.svg\": [\n\t\t108,\n\t\t18\n\t],\n\t\"./LinkedIn.png\": [\n\t\t109,\n\t\t50\n\t],\n\t\"./LinkedIn.svg\": [\n\t\t110,\n\t\t19\n\t],\n\t\"./Lyft.png\": [\n\t\t111,\n\t\t51\n\t],\n\t\"./Lyft.svg\": [\n\t\t112,\n\t\t20\n\t],\n\t\"./Microsoft.png\": [\n\t\t113,\n\t\t52\n\t],\n\t\"./Microsoft.svg\": [\n\t\t114,\n\t\t21\n\t],\n\t\"./Morgan Stanley.png\": [\n\t\t115,\n\t\t53\n\t],\n\t\"./Oracle.png\": [\n\t\t116,\n\t\t54\n\t],\n\t\"./Oracle.svg\": [\n\t\t117,\n\t\t22\n\t],\n\t\"./Palantir.png\": [\n\t\t118,\n\t\t55\n\t],\n\t\"./Palantir.svg\": [\n\t\t119,\n\t\t23\n\t],\n\t\"./Pinterest.png\": [\n\t\t120,\n\t\t56\n\t],\n\t\"./Pinterest.svg\": [\n\t\t121,\n\t\t24\n\t],\n\t\"./Qualtrics.png\": [\n\t\t122,\n\t\t57\n\t],\n\t\"./Qualtrics.svg\": [\n\t\t123,\n\t\t25\n\t],\n\t\"./Quora.png\": [\n\t\t124,\n\t\t58\n\t],\n\t\"./Quora.svg\": [\n\t\t125,\n\t\t26\n\t],\n\t\"./Salesforce.png\": [\n\t\t126,\n\t\t59\n\t],\n\t\"./Salesforce.svg\": [\n\t\t127,\n\t\t27\n\t],\n\t\"./Sap.svg\": [\n\t\t128,\n\t\t28\n\t],\n\t\"./Snapchat.png\": [\n\t\t129,\n\t\t60\n\t],\n\t\"./Snapchat.svg\": [\n\t\t130,\n\t\t29\n\t],\n\t\"./Square.png\": [\n\t\t131,\n\t\t61\n\t],\n\t\"./Tesla.png\": [\n\t\t132,\n\t\t62\n\t],\n\t\"./Twitch.png\": [\n\t\t133,\n\t\t63\n\t],\n\t\"./Twitter.png\": [\n\t\t134,\n\t\t64\n\t],\n\t\"./Twitter.svg\": [\n\t\t135,\n\t\t30\n\t],\n\t\"./Two Sigma.png\": [\n\t\t136,\n\t\t65\n\t],\n\t\"./Uber.png\": [\n\t\t137,\n\t\t66\n\t],\n\t\"./Uber.svg\": [\n\t\t138,\n\t\t31\n\t],\n\t\"./Walmart.svg\": [\n\t\t139,\n\t\t32\n\t],\n\t\"./Yelp.png\": [\n\t\t140,\n\t\t67\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 66;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\n\r\nconst IconAppStore = () => (\r\n  <svg\r\n    version=\"1.1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    viewBox=\"0 0 512 512\"\r\n    xmlSpace=\"preserve\">\r\n    <title>Apple App Store</title>\r\n    <g>\r\n      <g>\r\n        <path\r\n          d=\"M407,0H105C47.103,0,0,47.103,0,105v302c0,57.897,47.103,105,105,105h302c57.897,0,105-47.103,105-105V105\r\n      C512,47.103,464.897,0,407,0z M482,407c0,41.355-33.645,75-75,75H105c-41.355,0-75-33.645-75-75V105c0-41.355,33.645-75,75-75h302\r\n      c41.355,0,75,33.645,75,75V407z\"\r\n        />\r\n      </g>\r\n    </g>\r\n    <g>\r\n      <g>\r\n        <path\r\n          d=\"M305.646,123.531c-1.729-6.45-5.865-11.842-11.648-15.18c-11.936-6.892-27.256-2.789-34.15,9.151L256,124.166\r\n      l-3.848-6.665c-6.893-11.937-22.212-16.042-34.15-9.151h-0.001c-11.938,6.893-16.042,22.212-9.15,34.151l18.281,31.664\r\n      L159.678,291H110.5c-13.785,0-25,11.215-25,25c0,13.785,11.215,25,25,25h189.86l-28.868-50h-54.079l85.735-148.498\r\n      C306.487,136.719,307.375,129.981,305.646,123.531z\"\r\n        />\r\n      </g>\r\n    </g>\r\n    <g>\r\n      <g>\r\n        <path\r\n          d=\"M401.5,291h-49.178l-55.907-96.834l-28.867,50l86.804,150.348c3.339,5.784,8.729,9.921,15.181,11.65\r\n      c2.154,0.577,4.339,0.863,6.511,0.863c4.332,0,8.608-1.136,12.461-3.361c11.938-6.893,16.042-22.213,9.149-34.15L381.189,341\r\n      H401.5c13.785,0,25-11.215,25-25C426.5,302.215,415.285,291,401.5,291z\"\r\n        />\r\n      </g>\r\n    </g>\r\n    <g>\r\n      <g>\r\n        <path\r\n          d=\"M119.264,361l-4.917,8.516c-6.892,11.938-2.787,27.258,9.151,34.15c3.927,2.267,8.219,3.345,12.458,3.344\r\n      c8.646,0,17.067-4.484,21.693-12.495L176.999,361H119.264z\"\r\n        />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default IconAppStore;\r\n","import React from 'react';\r\n\r\nconst IconBookmark = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"1\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className=\"feather feather-bookmark\">\r\n    <title>Bookmark</title>\r\n    <path d=\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"></path>\r\n  </svg>\r\n);\r\n\r\nexport default IconBookmark;\r\n","import React from 'react';\r\n\r\nconst IconCodepen = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    role=\"img\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className=\"feather feather-codepen\">\r\n    <title>CodePen</title>\r\n    <polygon points=\"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\"></polygon>\r\n    <line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"15.5\"></line>\r\n    <polyline points=\"22 8.5 12 15.5 2 8.5\"></polyline>\r\n    <polyline points=\"2 15.5 12 8.5 22 15.5\"></polyline>\r\n    <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"8.5\"></line>\r\n  </svg>\r\n);\r\n\r\nexport default IconCodepen;\r\n","import React from 'react';\r\n\r\nconst IconExternal = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    role=\"img\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className=\"feather feather-external-link\">\r\n    <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\r\n    <polyline points=\"15 3 21 3 21 9\"></polyline>\r\n    <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\r\n  </svg>\r\n);\r\n\r\nexport default IconExternal;\r\n","import React from 'react';\r\n\r\nconst IconFolder = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    role=\"img\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"1\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className=\"feather feather-folder\">\r\n    <title>Folder</title>\r\n    <path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path>\r\n  </svg>\r\n);\r\n\r\nexport default IconFolder;\r\n","import React from 'react';\r\n\r\nconst IconFork = () => (\r\n  <svg\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className=\"feather feather-git-branch\">\r\n    <title>Git Fork</title>\r\n    <line x1=\"6\" y1=\"3\" x2=\"6\" y2=\"15\"></line>\r\n    <circle cx=\"18\" cy=\"6\" r=\"3\"></circle>\r\n    <circle cx=\"6\" cy=\"18\" r=\"3\"></circle>\r\n    <path d=\"M18 9a9 9 0 0 1-9 9\"></path>\r\n  </svg>\r\n);\r\n\r\nexport default IconFork;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  IconAppStore,\r\n  IconBookmark,\r\n  IconCodepen,\r\n  IconExternal,\r\n  IconFolder,\r\n  IconFork,\r\n  IconGitHub,\r\n  IconInstagram,\r\n  IconLinkedin,\r\n  IconLoader,\r\n  IconLogo,\r\n  IconPlayStore,\r\n  IconStar,\r\n  IconStackOverflow,\r\n  IconMedium,\r\n  IconLeetCode,\r\n  IconApple,\r\n  IconMicrosoft,\r\n  IconAdobe,\r\n  IconCapital,\r\n  IconAmazon,\r\n  IconFacebook,\r\n  IconGoldman,\r\n  IconGoogle,\r\n  IconAsana,\r\n  IconLyft,\r\n  IconUber,\r\n  IconOracle,\r\n  IconBloomberg,\r\n  IconQuora,\r\n  IconIntuit,\r\n  IconSnapchat,\r\n  IconPinterest,\r\n  IconTwitter,\r\n  IconQualtrics,\r\n  IconLinkedIn,\r\n  IconAirbnb,\r\n  IconJPMorgan,\r\n  IconBlackRock,\r\n  IconAkuna,\r\n  IconSalesforce,\r\n  IconCitadel,\r\n  IconPalantir,\r\n  IconAtlassian,\r\n  IconWalmart,\r\n  IconSAP,\r\n  IconIdea,\r\n  IconHome\r\n} from \"../icons\";\r\n\r\nconst Icon = ({ name }) => {\r\n  const [imageIcons, setImageIcons] = useState({});\r\n  useEffect(() => {\r\n    if (name.includes(\"svg\")) {\r\n      import(`../../Assets/images/icons/${name}`).then((image) => {\r\n        // console.log(image); // this may be object with image inside...\r\n        const newImages = { ...imageIcons };\r\n        newImages[name] = image.default;\r\n        setImageIcons(newImages);\r\n      });\r\n    }\r\n    return () => {\r\n      setImageIcons({});\r\n    };\r\n  }, [name]);\r\n  switch (name) {\r\n    case \"AppStore\":\r\n      return <IconAppStore />;\r\n    case \"Bookmark\":\r\n      return <IconBookmark />;\r\n    case \"Codepen\":\r\n      return <IconCodepen />;\r\n    case \"External\":\r\n      return <IconExternal />;\r\n    case \"Folder\":\r\n      return <IconFolder />;\r\n    case \"Fork\":\r\n      return <IconFork />;\r\n    case \"GitHub\":\r\n      return <IconGitHub />;\r\n    case \"Instagram\":\r\n      return <IconInstagram />;\r\n    case \"Linkedin\":\r\n      return <IconLinkedin />;\r\n    case \"Loader\":\r\n      return <IconLoader />;\r\n    case \"Logo\":\r\n      return <IconLogo />;\r\n    case \"PlayStore\":\r\n      return <IconPlayStore />;\r\n    case \"Star\":\r\n      return <IconStar />;\r\n    case \"Twitter\":\r\n      return <IconTwitter />;\r\n    case \"Stackoverflow\":\r\n      return <IconStackOverflow />;\r\n    case \"Medium\":\r\n      return <IconMedium />;\r\n    case \"LeetCode\":\r\n      return <IconLeetCode />;\r\n    case \"Apple\":\r\n      return <IconApple />;\r\n    case \"Apple\":\r\n      return <IconApple />;\r\n    case \"Microsoft\":\r\n      return <IconMicrosoft />;\r\n    case \"Adobe\":\r\n      return <IconAdobe />;\r\n    case \"Capital One\":\r\n      return <IconCapital />;\r\n    case \"Amazon\":\r\n      return <IconAmazon />;\r\n    case \"Facebook\":\r\n      return <IconFacebook />;\r\n    case \"Goldman Sachs\":\r\n      return <IconGoldman />;\r\n    case \"Google\":\r\n      return <IconGoogle />;\r\n    case \"Asana\":\r\n      return <IconAsana />;\r\n    case \"Lyft\":\r\n      return <IconLyft />;\r\n    case \"Uber\":\r\n      return <IconUber />;\r\n    case \"Oracle\":\r\n      return <IconOracle />;\r\n    case \"Bloomberg\":\r\n      return <IconBloomberg />;\r\n    case \"Quora\":\r\n      return <IconQuora />;\r\n    case \"Intuit\":\r\n      return <IconIntuit />;\r\n    case \"Snapchat\":\r\n      return <IconSnapchat />;\r\n    case \"Pinterest\":\r\n      return <IconPinterest />;\r\n    case \"Twitter\":\r\n      return <IconTwitter />;\r\n    case \"Qualtrics\":\r\n      return <IconQualtrics />;\r\n    case \"LinkedIn\":\r\n      return <IconLinkedIn />;\r\n    case \"Airbnb\":\r\n      return <IconAirbnb />;\r\n    case \"JPMorgan\":\r\n      return <IconJPMorgan />;\r\n    case \"BlackRock\":\r\n      return <IconBlackRock />;\r\n    case \"Akuna Capital\":\r\n      return <IconAkuna />;\r\n    case \"Salesforce\":\r\n      return <IconSalesforce />;\r\n    case \"Citadel\":\r\n      return <IconCitadel />;\r\n    case \"Palantir\":\r\n      return <IconPalantir />;\r\n    case \"Atlassian\":\r\n      return <IconAtlassian />;\r\n    case \"Walmart\":\r\n      return <IconWalmart />;\r\n    case \"SAP\":\r\n      return <IconSAP />;\r\n    case \"IDEA\":\r\n      return <IconIdea />;\r\n    case \"HOME\":\r\n        return <IconHome />\r\n    default:\r\n      // return <IconExternal />;\r\n      return imageIcons[name] ? (\r\n        <img\r\n          src={imageIcons[name]}\r\n          alt={name}\r\n          height=\"20px\"\r\n          width=\"20px\"\r\n          data-tip={name}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      );\r\n    // return { imageIcons[name]? <img src={imageIcons[name]} alt={name} data-tip={name} /> };\r\n  }\r\n};\r\n\r\nIcon.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nconst IconGitHub = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    role=\"img\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className=\"feather feather-github\">\r\n    <title>GitHub</title>\r\n    <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>\r\n  </svg>\r\n);\r\n\r\nexport default IconGitHub;\r\n","import React from 'react';\r\n\r\nconst IconInstagram = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    role=\"img\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className=\"feather feather-instagram\">\r\n    <title>Instagram</title>\r\n    <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect>\r\n    <path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path>\r\n    <line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line>\r\n  </svg>\r\n);\r\n\r\nexport default IconInstagram;\r\n","\nimport React from \"react\";\nconst IconLinkedIn = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"480px\" height=\"480px\"><path fill=\"#0288D1\" d=\"M42,37c0,2.762-2.238,5-5,5H11c-2.761,0-5-2.238-5-5V11c0-2.762,2.239-5,5-5h26c2.762,0,5,2.238,5,5V37z\"/><path fill=\"#FFF\" d=\"M12 19H17V36H12zM14.485 17h-.028C12.965 17 12 15.888 12 14.499 12 13.08 12.995 12 14.514 12c1.521 0 2.458 1.08 2.486 2.499C17 15.887 16.035 17 14.485 17zM36 36h-5v-9.099c0-2.198-1.225-3.698-3.192-3.698-1.501 0-2.313 1.012-2.707 1.99C24.957 25.543 25 26.511 25 27v9h-5V19h5v2.616C25.721 20.5 26.85 19 29.738 19c3.578 0 6.261 2.25 6.261 7.274L36 36 36 36z\"/></svg>\n);\n\nexport default IconLinkedIn;\n","import React from \"react\";\r\n\r\nconst IconLoader = () => (\r\n  <svg\r\n    width=\"600\"\r\n    height=\"200\"\r\n    id=\"logo\"\r\n  >\r\n    <text x=\"50%\" y=\"50%\" dy=\".35em\" textAnchor=\"middle\">\r\n      Nail DSA\r\n    </text>\r\n  </svg>\r\n\r\n  // <svg\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   version=\"1.1\"\r\n  //   width=\"100%\"\r\n  //   height=\"100%\"\r\n  // >\r\n  //   <rect x=\"0\" y=\"0\" fill=\"#222\" width=\"100%\" height=\"100%\" />\r\n\r\n  //   <text\r\n  //     x=\"50%\"\r\n  //     textAnchor=\"middle\"\r\n  //     y=\"50%\"\r\n  //     dy=\"0.4em\"\r\n  //     fill=\"url(#pattern)\"\r\n  //   >\r\n  //     NAIL DSA\r\n  //   </text>\r\n\r\n  //   <defs>\r\n  //     <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0\">\r\n  //       <stop offset=\"0%\" style={{ stopColor:\"#33235b\"}} />\r\n  //       <stop offset=\"25%\" style={{ stopColor: \"#D62229\" }} />\r\n  //       <stop offset=\"50%\" style={{ stopColor:\"#E97639\"}} />\r\n  //       <stop offset=\"75%\" style={{ stopColor:\"#792042\"}} />\r\n  //       <stop offset=\"100%\" style={{ stopColor:\"#33235b\"}} />\r\n  //     </linearGradient>\r\n\r\n  //     <pattern\r\n  //       id=\"pattern\"\r\n  //       x=\"0\"\r\n  //       y=\"0\"\r\n  //       width=\"300%\"\r\n  //       height=\"100%\"\r\n  //       patternUnits=\"userSpaceOnUse\"\r\n  //     >\r\n  //       <rect x=\"0\" y=\"0\" width=\"150%\" height=\"100%\" fill=\"url(#gradient)\">\r\n  //         <animate\r\n  //           attributeType=\"XML\"\r\n  //           attributeName=\"x\"\r\n  //           from=\"0\"\r\n  //           to=\"150%\"\r\n  //           dur=\"7s\"\r\n  //           repeatCount=\"indefinite\"\r\n  //         />\r\n  //       </rect>\r\n  //       <rect x=\"-150%\" y=\"0\" width=\"150%\" height=\"100%\" fill=\"url(#gradient)\">\r\n  //         <animate\r\n  //           attributeType=\"XML\"\r\n  //           attributeName=\"x\"\r\n  //           from=\"-150%\"\r\n  //           to=\"0\"\r\n  //           dur=\"7s\"\r\n  //           repeatCount=\"indefinite\"\r\n  //         />\r\n  //       </rect>\r\n  //     </pattern>\r\n  //     <font horizAdvX=\"1024\">\r\n  //       <font-face\r\n  //         fontFamily=\"sonos-logoregular\"\r\n  //         unitsPerEm=\"2048\"\r\n  //         ascent=\"1920\"\r\n  //         descent=\"-128\"\r\n  //       />\r\n  //       <missing-glyph horizAdvX=\"500\" />\r\n  //       <glyph unicode=\"&#xd;\" horizAdvX=\"682\" />\r\n  //       <glyph unicode=\" \" />\r\n  //       <glyph\r\n  //         unicode=\"N\"\r\n  //         horizAdvX=\"812\"\r\n  //         d=\"M0 412h150v636l662 -664v1000h-148v-640l-664 664v-996z\"\r\n  //       />\r\n  //       <glyph\r\n  //         unicode=\"O\"\r\n  //         horizAdvX=\"1946\"\r\n  //         d=\"M470 896q0 210 150 364q148 148 362 148t362 -148q150 -154 150 -364q0 -212 -150 -362t-362 -150t-362 150t-150 362zM620 896q0 -152 106 -258q104 -108 256 -108q154 0 256 108q108 108 108 258q0 148 -108 260q-104 108 -256 108q-148 0 -256 -108 q-106 -110 -106 -260z\"\r\n  //       />\r\n  //       <glyph\r\n  //         unicode=\"S\"\r\n  //         horizAdvX=\"674\"\r\n  //         d=\"M0 1124q0 -58 26 -110q28 -52 80 -90q32 -26 86 -52q68 -30 124 -46q124 -40 174 -84q34 -30 34 -74q0 -52 -48 -92q-56 -42 -138 -42q-62 0 -122 26q-38 16 -72 40l-118 -80q0 -4 24 -24q24 -24 60 -46q108 -66 228 -66q70 0 132 22q66 24 108 62q44 38 72 92 q24 54 24 110q0 54 -26 110q-28 52 -78 90q-34 28 -88 52q-38 18 -122 46q-122 36 -174 82q-36 32 -36 74q0 54 50 92q54 44 138 44q60 0 120 -26q32 -12 72 -40l120 80q-2 0 -24 24q-18 18 -62 46q-104 64 -226 64q-74 0 -132 -20t-110 -62q-48 -44 -70 -92 q-26 -56 -26 -110z\"\r\n  //       />\r\n  //       <glyph unicode=\"&#xa0;\" />\r\n  //       <glyph unicode=\"&#x2000;\" horizAdvX=\"704\" />\r\n  //       <glyph unicode=\"&#x2001;\" horizAdvX=\"1408\" />\r\n  //       <glyph unicode=\"&#x2002;\" horizAdvX=\"704\" />\r\n  //       <glyph unicode=\"&#x2003;\" horizAdvX=\"1408\" />\r\n  //       <glyph unicode=\"&#x2004;\" horizAdvX=\"469\" />\r\n  //       <glyph unicode=\"&#x2005;\" horizAdvX=\"352\" />\r\n  //       <glyph unicode=\"&#x2006;\" horizAdvX=\"234\" />\r\n  //       <glyph unicode=\"&#x2007;\" horizAdvX=\"234\" />\r\n  //       <glyph unicode=\"&#x2008;\" horizAdvX=\"176\" />\r\n  //       <glyph unicode=\"&#x2009;\" horizAdvX=\"281\" />\r\n  //       <glyph unicode=\"&#x200a;\" horizAdvX=\"78\" />\r\n  //       <glyph unicode=\"&#x202f;\" horizAdvX=\"281\" />\r\n  //       <glyph unicode=\"&#x205f;\" horizAdvX=\"352\" />\r\n  //       <glyph unicode=\"&#x25fc;\" horizAdvX=\"1000\" d=\"M0 0z\" />\r\n  //     </font>\r\n  //   </defs>\r\n  // </svg>\r\n\r\n  // <svg\r\n  //   width=\"362.8\"\r\n  //   height=\"72.8\"\r\n  //   viewBox=\"0 0 362.8 72.8\"\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  // >\r\n  //   <g\r\n  //     id=\"logo\"\r\n  //   >\r\n  //     <path\r\n  //       d=\"M 1.1 2.4 L 50.65 69.85 A 2.624 2.624 0 0 1 50.601 69.41 A 2.962 2.962 0 0 1 50.6 69.325 L 50.6 68.8 L 50.6 2 L 51.6 2 L 51.6 72 L 51.3 72 A 0.535 0.535 0 0 1 50.991 71.898 Q 50.909 71.841 50.831 71.753 A 1.315 1.315 0 0 1 50.75 71.65 L 0.95 3.9 A 3.75 3.75 0 0 1 0.999 4.444 A 4.165 4.165 0 0 1 1 4.525 L 1 5.1 L 1 72 L 0 72 L 0 2 L 0.4 2 A 0.801 0.801 0 0 1 0.772 2.085 Q 0.932 2.167 1.052 2.329 A 1.09 1.09 0 0 1 1.1 2.4 Z\"\r\n  //       id=\"0\"\r\n  //       stroke=\"currentColor\"\r\n  //       strokeWidth=\"5\"\r\n  //       strokeLinecap=\"round\"\r\n  //       strokeLinejoin=\"round\"\r\n  //     />\r\n  //     <path\r\n  //       d=\"M 103 72 L 102.8 72 Q 102.1 72 102.1 71.2 L 101.8 63.25 A 56.53 56.53 0 0 1 98.781 66.193 A 48.595 48.595 0 0 1 97.6 67.225 Q 95.5 69 93.15 70.225 Q 90.8 71.45 88.1 72.125 A 22.132 22.132 0 0 1 84.873 72.671 A 28.667 28.667 0 0 1 82.1 72.8 A 15.134 15.134 0 0 1 77.814 72.167 A 16.855 16.855 0 0 1 77.675 72.125 Q 75.45 71.45 73.65 69.975 A 10.644 10.644 0 0 1 71.249 67.152 A 12.884 12.884 0 0 1 70.725 66.175 Q 69.706 64.068 69.61 61.12 A 19.111 19.111 0 0 1 69.6 60.5 Q 69.6 57.2 71.525 54.575 Q 73.45 51.95 77.425 50.1 Q 81.4 48.25 87.45 47.175 Q 92.516 46.275 99.16 45.988 A 138.905 138.905 0 0 1 101.8 45.9 L 101.8 39.6 A 29.896 29.896 0 0 0 101.589 35.963 A 22.233 22.233 0 0 0 100.95 32.7 Q 100.1 29.65 98.45 27.55 Q 96.8 25.45 94.3 24.325 A 12.502 12.502 0 0 0 91.072 23.389 A 16.764 16.764 0 0 0 88.5 23.2 Q 85.9 23.2 83.8 23.75 A 23.012 23.012 0 0 0 81.638 24.426 A 17.85 17.85 0 0 0 80.05 25.1 A 18.223 18.223 0 0 0 78.372 26.02 A 14.152 14.152 0 0 0 77.175 26.85 A 51.21 51.21 0 0 0 76.165 27.653 Q 75.709 28.026 75.31 28.372 A 29.645 29.645 0 0 0 75.05 28.6 Q 74.195 29.36 73.656 29.895 A 17.793 17.793 0 0 0 73.6 29.95 Q 73.126 30.424 72.875 30.49 A 0.298 0.298 0 0 1 72.8 30.5 A 0.36 0.36 0 0 1 72.665 30.471 Q 72.55 30.424 72.409 30.302 A 2.098 2.098 0 0 1 72.3 30.2 L 72.1 30 A 33.02 33.02 0 0 1 75.704 26.695 A 24.797 24.797 0 0 1 79.55 24.2 A 17.563 17.563 0 0 1 85.069 22.447 A 22.992 22.992 0 0 1 88.5 22.2 A 19.686 19.686 0 0 1 91.559 22.426 Q 93.432 22.72 94.975 23.4 Q 97.7 24.6 99.5 26.85 A 13.523 13.523 0 0 1 101.453 30.223 A 17.182 17.182 0 0 1 102.15 32.325 A 24.934 24.934 0 0 1 102.813 35.984 A 33.465 33.465 0 0 1 103 39.6 L 103 72 Z M 101.8 62 L 101.8 46.9 Q 88.482 47.323 80.974 49.837 A 27.655 27.655 0 0 0 78.425 50.825 Q 70.8 54.25 70.8 60.5 A 14.962 14.962 0 0 0 70.98 62.883 Q 71.219 64.363 71.775 65.575 A 11.01 11.01 0 0 0 73.143 67.832 A 9.36 9.36 0 0 0 74.325 69.075 Q 75.9 70.45 77.925 71.125 Q 79.95 71.8 82.1 71.8 A 25.684 25.684 0 0 0 85.582 71.574 A 19.883 19.883 0 0 0 88.35 71 A 23.41 23.41 0 0 0 92.603 69.337 A 21.229 21.229 0 0 0 93.5 68.85 Q 95.85 67.5 97.875 65.725 Q 99.9 63.95 101.8 62 Z\"\r\n  //       id=\"1\"\r\n  //       stroke=\"currentColor\"\r\n  //       strokeWidth=\"5\"\r\n  //       strokeLinecap=\"round\"\r\n  //       strokeLinejoin=\"round\"\r\n  //     />\r\n  //     <path\r\n  //       d=\"M 121 23 L 122.2 23 L 122.2 72 L 121 72 L 121 23 Z M 123.844 6.331 A 2.392 2.392 0 0 0 124.4 4.8 A 2.601 2.601 0 0 0 124.164 3.693 A 2.827 2.827 0 0 0 123.525 2.825 Q 122.65 2 121.6 2 A 2.804 2.804 0 0 0 120.735 2.131 A 2.755 2.755 0 0 0 119.625 2.825 Q 118.8 3.65 118.8 4.8 A 2.439 2.439 0 0 0 119.076 5.939 A 2.993 2.993 0 0 0 119.625 6.675 Q 120.45 7.5 121.6 7.5 A 2.543 2.543 0 0 0 122.785 7.209 A 3.283 3.283 0 0 0 123.525 6.675 A 3.368 3.368 0 0 0 123.844 6.331 Z\"\r\n  //       id=\"2\"\r\n  //       stroke=\"currentColor\"\r\n  //       strokeWidth=\"5\"\r\n  //       strokeLinecap=\"round\"\r\n  //       strokeLinejoin=\"round\"\r\n  //     />\r\n  //     <path\r\n  //       d=\"M 143.2 0 L 144.4 0 L 144.4 72 L 143.2 72 L 143.2 0 Z\"\r\n  //       id=\"3\"\r\n  //       stroke=\"currentColor\"\r\n  //       strokeWidth=\"5\"\r\n  //       strokeLinecap=\"round\"\r\n  //       strokeLinejoin=\"round\"\r\n  //     />\r\n  //     <path\r\n  //       d=\"M 211.2 72 L 186.2 72 L 186.2 2 L 211.2 2 A 38.324 38.324 0 0 1 219.309 2.828 A 32.22 32.22 0 0 1 224.35 4.35 Q 230.3 6.7 234.575 11.2 Q 238.85 15.7 241.225 22.2 Q 243.6 28.7 243.6 37 A 49.576 49.576 0 0 1 243.011 44.821 A 37.559 37.559 0 0 1 241.225 51.8 A 33.68 33.68 0 0 1 237.735 58.814 A 28.756 28.756 0 0 1 234.575 62.8 Q 230.3 67.3 224.35 69.65 A 33.736 33.736 0 0 1 215.151 71.814 A 41.121 41.121 0 0 1 211.2 72 Z M 211.2 3 L 187.4 3 L 187.4 71 L 211.2 71 A 36.874 36.874 0 0 0 218.98 70.207 A 31.16 31.16 0 0 0 223.825 68.75 Q 229.55 66.5 233.65 62.15 A 28.832 28.832 0 0 0 238.688 54.696 A 35.298 35.298 0 0 0 240.025 51.475 Q 242.3 45.15 242.3 37 A 49.815 49.815 0 0 0 241.766 29.533 A 37.102 37.102 0 0 0 240.025 22.525 Q 237.75 16.2 233.65 11.85 Q 229.55 7.5 223.825 5.25 A 32.658 32.658 0 0 0 214.783 3.159 A 39.645 39.645 0 0 0 211.2 3 Z\"\r\n  //       id=\"5\"\r\n  //       stroke=\"currentColor\"\r\n  //       strokeWidth=\"5\"\r\n  //       strokeLinecap=\"round\"\r\n  //       strokeLinejoin=\"round\"\r\n  //     />\r\n  //     <path\r\n  //       d=\"M 295.1 8.1 L 294.9 8.4 A 1.05 1.05 0 0 1 294.739 8.558 Q 294.556 8.7 294.35 8.7 A 0.631 0.631 0 0 1 294.095 8.636 Q 293.739 8.475 293.196 7.913 A 9.835 9.835 0 0 1 292.975 7.675 A 9.572 9.572 0 0 0 292.239 6.95 Q 291.44 6.237 290.275 5.45 Q 288.5 4.25 285.7 3.225 Q 282.9 2.2 278.7 2.2 A 23.805 23.805 0 0 0 274.763 2.511 A 17.956 17.956 0 0 0 271.075 3.525 Q 267.75 4.85 265.5 7.05 Q 263.25 9.25 262.075 12.15 Q 260.9 15.05 260.9 18.2 A 17.204 17.204 0 0 0 261.14 21.158 Q 261.515 23.305 262.475 24.95 Q 264.05 27.65 266.6 29.5 A 23.176 23.176 0 0 0 270.653 31.836 A 27.645 27.645 0 0 0 272.45 32.575 Q 275.75 33.8 279.15 34.925 Q 282.55 36.05 285.85 37.3 A 24.541 24.541 0 0 1 290.022 39.331 A 21.285 21.285 0 0 1 291.7 40.475 Q 294.25 42.4 295.825 45.225 Q 297.239 47.762 297.384 51.448 A 21.793 21.793 0 0 1 297.4 52.3 A 22.539 22.539 0 0 1 296.584 58.427 A 20.591 20.591 0 0 1 295.95 60.325 Q 294.5 64.05 291.75 66.825 A 19.003 19.003 0 0 1 286.573 70.502 A 22.721 22.721 0 0 1 285 71.2 A 21.967 21.967 0 0 1 279.862 72.536 A 28.636 28.636 0 0 1 275.9 72.8 Q 272.35 72.8 269.55 72.175 A 22.912 22.912 0 0 1 265.925 71.056 A 19.924 19.924 0 0 1 264.425 70.375 Q 262.1 69.2 260.15 67.525 A 31.746 31.746 0 0 1 257.195 64.618 A 36.301 36.301 0 0 1 256.4 63.7 L 256.6 63.5 A 4.156 4.156 0 0 1 256.689 63.414 Q 256.781 63.327 256.85 63.275 Q 256.934 63.212 257.126 63.202 A 1.445 1.445 0 0 1 257.2 63.2 Q 257.5 63.2 258.075 63.825 A 23.961 23.961 0 0 0 258.389 64.159 Q 258.828 64.619 259.444 65.223 A 79.509 79.509 0 0 0 259.65 65.425 A 24.692 24.692 0 0 0 260.675 66.367 Q 261.227 66.847 261.866 67.354 A 41.665 41.665 0 0 0 262.05 67.5 A 15.986 15.986 0 0 0 263.6 68.569 Q 264.45 69.088 265.45 69.575 Q 267.45 70.55 270.025 71.175 A 21.199 21.199 0 0 0 272.781 71.644 Q 274.25 71.8 275.9 71.8 A 25.89 25.89 0 0 0 280.481 71.412 A 19.867 19.867 0 0 0 284.525 70.25 A 20.301 20.301 0 0 0 288.973 67.761 A 17.814 17.814 0 0 0 290.925 66.075 Q 293.55 63.45 294.925 59.95 Q 296.3 56.45 296.3 52.5 A 17.845 17.845 0 0 0 296.107 49.807 Q 295.887 48.365 295.415 47.144 A 10.698 10.698 0 0 0 295.275 46.8 A 12.919 12.919 0 0 0 293.029 43.231 A 12.174 12.174 0 0 0 292.5 42.675 A 16.963 16.963 0 0 0 288.856 39.959 A 19.164 19.164 0 0 0 288.425 39.725 Q 286.1 38.5 283.45 37.525 Q 280.8 36.55 278.05 35.725 Q 275.3 34.9 272.65 33.9 A 39.357 39.357 0 0 1 268.261 31.939 A 35.776 35.776 0 0 1 267.675 31.625 Q 265.35 30.35 263.6 28.525 A 13.386 13.386 0 0 1 261.093 24.795 A 15.489 15.489 0 0 1 260.825 24.175 Q 259.864 21.808 259.804 18.628 A 22.648 22.648 0 0 1 259.8 18.2 Q 259.8 14.85 261.05 11.775 Q 262.3 8.7 264.7 6.35 A 16.758 16.758 0 0 1 268.731 3.463 A 20.579 20.579 0 0 1 270.625 2.6 A 19.389 19.389 0 0 1 275.043 1.449 A 25.754 25.754 0 0 1 278.7 1.2 A 26.847 26.847 0 0 1 283.365 1.587 A 20.325 20.325 0 0 1 287.725 2.85 A 20.288 20.288 0 0 1 292.446 5.674 A 26.144 26.144 0 0 1 295.1 8.1 Z\"\r\n  //       id=\"6\"\r\n  //       stroke=\"currentColor\"\r\n  //       strokeWidth=\"5\"\r\n  //       strokeLinecap=\"round\"\r\n  //       strokeLinejoin=\"round\"\r\n  //     />\r\n  //     <path\r\n  //       d=\"M 333.6 2 L 362.8 72 L 361.9 72 A 0.608 0.608 0 0 1 361.623 71.94 Q 361.482 71.869 361.391 71.715 A 0.966 0.966 0 0 1 361.3 71.5 L 351.55 48.1 L 314.65 48.1 L 304.9 71.5 Q 304.777 71.91 304.385 71.984 A 1.001 1.001 0 0 1 304.2 72 L 303.4 72 L 332.6 2 L 333.6 2 Z M 332.3 5.7 L 315.05 47.1 L 351.15 47.1 L 333.9 5.7 A 17.282 17.282 0 0 1 333.669 5.169 A 13.258 13.258 0 0 1 333.475 4.675 A 232.797 232.797 0 0 1 333.294 4.181 A 289.325 289.325 0 0 1 333.1 3.65 A 289.458 289.458 0 0 1 332.906 4.181 A 232.871 232.871 0 0 1 332.725 4.675 A 13.258 13.258 0 0 1 332.531 5.169 A 17.282 17.282 0 0 1 332.3 5.7 Z\"\r\n  //       id=\"7\"\r\n  //       stroke=\"currentColor\"\r\n  //       strokeWidth=\"5\"\r\n  //       strokeLinecap=\"round\"\r\n  //       strokeLinejoin=\"round\"\r\n  //     />\r\n  //   </g>\r\n  // </svg>\r\n\r\n  // o;ld\r\n  // <svg\r\n  //   xmlns=\"http://www.w3.org/2000/svg\"\r\n  //   width=\"261.021\"\r\n  //   height=\"298.536\"\r\n  //   id=\"logo\"\r\n  //   viewBox=\"0 0 261.021 298.536\"\r\n  // >\r\n  //   <g>\r\n  //     <text fill=\"#63ffda\" fontSize=\"200\">\r\n  //       <tspan x=\"0\" y=\"0\">\r\n  //         NAIL DSA\r\n  //       </tspan>\r\n  //     </text>\r\n  //   </g>\r\n  //   {/* <g transform=\"translate(-238.695 -107.379)\">\r\n  //     <text\r\n  //       id=\"B\"\r\n  //     transform=\"translate(293 324)\"\r\n  //     fill=\"#63ffda\"\r\n  //     fontSize=\"200\"\r\n  //     fontFamily=\"SegoeUI-Semibold, Segoe UI\"\r\n  //     fontWeight=\"600\">\r\n  //     <tspan x=\"0\" y=\"0\">\r\n  //       D\r\n  //     </tspan>\r\n  //   </text>\r\n  //   <path\r\n  //     d=\"M435.651,850.174l126.064-68.158V637.388L437.036,563.135,310.695,632.124V776.474Z\"\r\n  //     transform=\"translate(-67 -450)\"\r\n  //     fill=\"none\"\r\n  //     stroke=\"#63ffda\"\r\n  //     strokeWidth=\"10\"\r\n  //   />\r\n  // </g> */}\r\n  // </svg>\r\n  // <svg id=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\r\n  //   <title>Loader Logo</title>\r\n  //   <g>\r\n  //     <g id=\"B\" transform=\"translate(11.000000, 5.000000)\">\r\n  //       <path\r\n  //         d=\"M45.691667,45.15 C48.591667,46.1 50.691667,48.95 50.691667,52.2 C50.691667,57.95 46.691667,61 40.291667,61 L28.541667,61 L28.541667,30.3 L39.291667,30.3 C45.691667,30.3 49.691667,33.15 49.691667,38.65 C49.691667,41.95 47.941667,44.35 45.691667,45.15 Z M33.591667,43.2 L39.241667,43.2 C42.791667,43.2 44.691667,41.85 44.691667,38.95 C44.691667,36.05 42.791667,34.8 39.241667,34.8 L33.591667,34.8 L33.591667,43.2 Z M33.591667,47.5 L33.591667,56.5 L40.191667,56.5 C43.691667,56.5 45.591667,54.75 45.591667,52 C45.591667,49.2 43.691667,47.5 40.191667,47.5 L33.591667,47.5 Z\"\r\n  //         fill=\"currentColor\"\r\n  //       />\r\n  //     </g>\r\n  //     <path\r\n  //       stroke=\"currentColor\"\r\n  //       strokeWidth=\"5\"\r\n  //       strokeLinecap=\"round\"\r\n  //       strokeLinejoin=\"round\"\r\n  //       d=\"M 50, 5\r\n  //                 L 11, 27\r\n  //                 L 11, 72\r\n  //                 L 50, 95\r\n  //                 L 89, 73\r\n  //                 L 89, 28 z\"\r\n  //     />\r\n  //   </g>\r\n  // </svg>\r\n);\r\n\r\nexport default IconLoader;\r\n","import React from 'react';\r\n\r\nconst IconLogo = () => (\r\n  // <svg id=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 84 96\">\r\n  //   <title>Logo</title>\r\n  //   <g transform=\"translate(-8.000000, -2.000000)\">\r\n  //     <g transform=\"translate(11.000000, 5.000000)\">\r\n  //       <path\r\n  //         d=\"M 21.602 0 L 29.609 0 L 51.211 56.016 L 43.203 56.016 L 38.242 43.125 L 12.969 43.125 L 8.008 56.016 L 0 56.016 L 21.602 0 Z M 25.625 10.43 L 16.016 35.117 L 35.156 35.117 L 25.625 10.43 Z\"\r\n  //         fill=\"currentColor\"\r\n  //       />\r\n  //       <polygon\r\n  //         id=\"Shape\"\r\n  //         stroke=\"currentColor\"\r\n  //         strokeWidth=\"5\"\r\n  //         strokeLinecap=\"round\"\r\n  //         strokeLinejoin=\"round\"\r\n  //         points=\"39 0 0 22 0 67 39 90 78 68 78 23\"\r\n  //       />\r\n  //     </g>\r\n  //   </g>\r\n  // </svg>\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"261.021\"\r\n    height=\"298.536\"\r\n    viewBox=\"0 0 261.021 298.536\">\r\n    <g transform=\"translate(-238.695 -107.379)\">\r\n      <text\r\n        transform=\"translate(293 324)\"\r\n        fill=\"#63ffda\"\r\n        fontSize=\"200\"\r\n        // fontFamily=\"SegoeUI-Semibold, Segoe UI\"\r\n        fontWeight=\"600\">\r\n        <tspan x=\"0\" y=\"0\">\r\n          DSA\r\n        </tspan>\r\n      </text>\r\n      {/* <path\r\n        d=\"M435.651,850.174l126.064-68.158V637.388L437.036,563.135,310.695,632.124V776.474Z\"\r\n        transform=\"translate(-67 -450)\"\r\n        fill=\"none\"\r\n        stroke=\"#63ffda\"\r\n        strokeWidth=\"10\"\r\n      /> */}\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default IconLogo;\r\n","import React from 'react';\r\n\r\nconst IconPlayStore = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.001 512.001\">\r\n    <title>Google Play Store</title>\r\n    <path\r\n      d=\"M464.252,212.09L99.624,8.07C84.247-1.873,64.754-2.691,48.574,5.967C32.183,14.74,22,31.737,22,50.329v411.342\r\n      c0,18.592,10.183,35.59,26.573,44.361c16.097,8.617,35.593,7.891,51.052-2.101l364.628-204.022\r\n      c16.121-9.02,25.747-25.435,25.747-43.908C490,237.527,480.374,221.111,464.252,212.09z M341.677,181.943l-50.339,50.339\r\n      L113.108,54.051L341.677,181.943z M55.544,467.323V44.676L267.621,256L55.544,467.323z M113.108,457.949l178.232-178.231\r\n      l50.339,50.339L113.108,457.949z M447.874,270.637l-75.779,42.401l-57.038-57.037l57.037-57.037l75.778,42.4\r\n      c7.746,4.335,8.583,11.68,8.583,14.637C456.455,258.958,455.62,266.302,447.874,270.637z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default IconPlayStore;\r\n","import React from 'react';\r\n\r\nconst IconStar = () => (\r\n  <svg\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className=\"feather feather-star\">\r\n    <title>Star</title>\r\n    <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconStar;\r\n","import React from 'react';\r\n\r\nconst IconTwitter = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    role=\"img\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    className=\"feather feather-twitter\">\r\n    <title>Twitter</title>\r\n    <path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path>\r\n  </svg>\r\n);\r\n\r\nexport default IconTwitter;\r\n","import React from 'react';\r\n\r\nconst IconMedium = () => (\r\n  <svg\r\n    fill=\"#000000\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 50 50\"\r\n    width=\"50px\"\r\n    height=\"50px\">\r\n    {' '}\r\n    <path d=\"M45,4H5C4.448,4,4,4.448,4,5v40c0,0.552,0.448,1,1,1h40c0.552,0,1-0.448,1-1V5C46,4.448,45.552,4,45,4z M40,13.5 l-1.821,2.197C38.064,15.811,38,15.965,38,16.125V32.75c0,0.16,0.064,0.314,0.179,0.428L40,35.546V36H30v-0.454l2.821-2.368 C32.936,33.064,33,32.91,33,32.75V17.879L24.848,36h-0.001h-1.543l0,0L15,18.375v13.108c0,0.22,0.076,0.433,0.215,0.605L18,35.546 V36h-8v-0.454l2.783-3.438C12.923,31.936,13,31.721,13,31.5V16.388c0-0.142-0.05-0.279-0.142-0.388L11,13.5V13h7.097l7.624,16.183 L33.002,13H40V13.5z\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconMedium;\r\n","import React from 'react';\r\n\r\nconst IconStackOverflow = () => (\r\n  <svg\r\n    fill=\"#000000\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 50 50\"\r\n    width=\"50px\"\r\n    height=\"50px\">\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M 40.925781 1.890625 L 37.859375 2.417969 L 41.1875 20.625 L 44.03125 20.253906 Z M 29.96875 6.351563 L 27.101563 8.078125 L 37.300781 23.035156 L 39.820313 21.480469 Z M 20.796875 15.03125 L 19.113281 17.703125 L 34.5 27 L 35.902344 24.578125 Z M 16.375 24.402344 L 15.628906 27.402344 L 33.359375 31.894531 L 33.640625 29.203125 Z M 9 29 L 9 47.984375 L 38.902344 48 L 38.902344 47.984375 C 38.933594 47.984375 39 29 39 29 L 36 29 L 36 45 L 12 45 L 12 29 Z M 15.152344 32.355469 L 14.902344 35.339844 L 33 37 L 33.203125 34.5 Z M 14.902344 39 L 15 42 L 33 41.929688 L 33 39 Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default IconStackOverflow;\r\n","import React from \"react\";\r\n\r\nconst IconLeetCode = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"32\"\r\n    height=\"32\"\r\n    viewBox=\"0 0 32 32\"\r\n  >\r\n    <path d=\"M21.469 23.907l-3.595 3.473c-0.624 0.625-1.484 0.885-2.432 0.885s-1.807-0.26-2.432-0.885l-5.776-5.812c-0.62-0.625-0.937-1.537-0.937-2.485 0-0.952 0.317-1.812 0.937-2.432l5.76-5.844c0.62-0.619 1.5-0.859 2.448-0.859s1.808 0.26 2.432 0.885l3.595 3.473c0.687 0.688 1.823 0.663 2.536-0.052 0.708-0.713 0.735-1.848 0.047-2.536l-3.473-3.511c-0.901-0.891-2.032-1.505-3.261-1.787l3.287-3.333c0.688-0.687 0.667-1.823-0.047-2.536s-1.849-0.735-2.536-0.052l-13.469 13.469c-1.307 1.312-1.989 3.113-1.989 5.113 0 1.996 0.683 3.86 1.989 5.168l5.797 5.812c1.307 1.307 3.115 1.937 5.115 1.937 1.995 0 3.801-0.683 5.109-1.989l3.479-3.521c0.688-0.683 0.661-1.817-0.052-2.531s-1.849-0.74-2.531-0.052zM27.749 17.349h-13.531c-0.932 0-1.692 0.801-1.692 1.791 0 0.991 0.76 1.797 1.692 1.797h13.531c0.933 0 1.693-0.807 1.693-1.797 0-0.989-0.76-1.791-1.693-1.791z\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconLeetCode;\r\n","import React from \"react\";\r\n\r\nconst IconApple = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    data-name=\"Layer 1\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M20.50439,15.7436a3.38641,3.38641,0,0,1-2.05468-3.127,3.49747,3.49747,0,0,1,1.6875-2.94629.99994.99994,0,0,0,.2998-1.415A5.57386,5.57386,0,0,0,16.4209,5.86958,6.422,6.422,0,0,0,17.38574,1.893a.98411.98411,0,0,0-1.0332-.8916,6.69083,6.69083,0,0,0-4.44336,2.26074,6.84216,6.84216,0,0,0-1.47949,2.89941,5.2637,5.2637,0,0,0-1.62012-.27734A5.92528,5.92528,0,0,0,3.81885,8.892c-1.8877,3.27734-.73291,8.18848,1.312,11.14453.82031,1.18457,2.05127,2.96289,3.9082,2.96289.03662,0,.07373,0,.11084-.002a4.74,4.74,0,0,0,1.79248-.46387,3.274,3.274,0,0,1,1.44532-.35351,3.04472,3.04472,0,0,1,1.35742.33789,4.75244,4.75244,0,0,0,1.96191.45605c1.91309-.03613,3.043-1.68652,3.86817-2.89258a12.04214,12.04214,0,0,0,1.51269-3.1084A1.00325,1.00325,0,0,0,20.50439,15.7436ZM13.42334,4.56782a4.94131,4.94131,0,0,1,1.91943-1.32226,4.85545,4.85545,0,0,1-1.03662,2.15136A4.39075,4.39075,0,0,1,13.042,6.437l-.00293.001c-.02832.01172-.05664.02246-.085.03418-.18652.07324-.417.16406-.59472.22265A4.825,4.825,0,0,1,13.42334,4.56782ZM17.9248,18.95259c-.80371,1.17383-1.436,2.00683-2.25439,2.02148a2.36658,2.36658,0,0,1-1.13135-.292,4.96942,4.96942,0,0,0-2.15136-.502,5.21424,5.21424,0,0,0-2.22852.51269,2.88493,2.88493,0,0,1-1.08594.30664H9.04346c-.813,0-1.6875-1.26269-2.26807-2.10156-1.45264-2.09961-2.79248-6.2832-1.22314-9.00781A3.917,3.917,0,0,1,8.84277,7.88423l.03369-.001a4.75808,4.75808,0,0,1,1.64112.44434c.13135.05175.26074.10351.38916.15136.03271.01368.0664.02637.10058.03711a3.31547,3.31547,0,0,0,1.11719.23731,4.436,4.436,0,0,0,1.564-.4209,4.95643,4.95643,0,0,1,2.22265-.49707,3.787,3.787,0,0,1,2.25049.85352,5.31025,5.31025,0,0,0-1.71191,3.94531v.001a5.30031,5.30031,0,0,0,2.45117,4.50293A10.19829,10.19829,0,0,1,17.9248,18.95259Z\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconApple;\r\n","import React from \"react\";\nconst IconMicrosoft = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 48 48\"\n    width=\"20px\"\n    height=\"20px\"\n  >\n    <path fill=\"#ff5722\" d=\"M6 6H22V22H6z\" transform=\"rotate(-180 14 14)\" />\n    <path fill=\"#4caf50\" d=\"M26 6H42V22H26z\" transform=\"rotate(-180 34 14)\" />\n    <path fill=\"#ffc107\" d=\"M26 26H42V42H26z\" transform=\"rotate(-180 34 34)\" />\n    <path fill=\"#03a9f4\" d=\"M6 26H22V42H6z\" transform=\"rotate(-180 14 34)\" />\n  </svg>\n);\n\nexport default IconMicrosoft;\n","import React from \"react\";\nconst IconAdobe = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 50 50\"\n    width=\"20px\"\n    height=\"20px\"\n  >\n    {\" \"}\n    <path d=\"M47,5v40L30.619,5H47z M17.762,36.579H25L28.429,45h7.238L25,18.801L17.762,36.579z M3,5v40L19.381,5H3z\" />\n  </svg>\n);\n\nexport default IconAdobe;\n","\nimport React from \"react\";\nconst IconCapital = () => (\n  <svg height=\"897\" viewBox=\"-1.045 -8.136 201.245 79.9313506\" width=\"2500\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m135.736 51.922c-.011.011-.023.011-.023.023-8.52 6.029-18.606 12.363-29.46 19.012l-.428.248a.324.324 0 0 0 .372.53l.36-.192c9.208-4.8 19.78-10.504 30.419-16.353.056-.033.112-.067.169-.09a13.493 13.493 0 0 1 -1.41-3.178zm55.9-45.249c-13.424-14.809-99.809-1.488-136.538 6.537l-.856.18a.318.318 0 0 0 -.26.372c.034.18.203.293.372.259l.845-.169c30.43-5.42 93.722-12.927 107.336.575 4.159 4.125 3.167 9.421-1.657 15.688 2.592 1.668 4.44 4.293 5.275 7.573 18.82-12.487 31.454-24.422 25.481-31.015z\" fill=\"#d03027\"/><g fill=\"#004977\"><path d=\"m141.168 48.034c.17 5.207 3.471 9.478 7.765 9.478 8.329 0 11.879-10.233 11.63-17.063-.18-5.218-3.56-9.478-7.854-9.478-7.157-.011-11.789 10.177-11.541 17.063zm-4.395-.282c-.305-8.892 6.66-17.987 16.78-17.987 6.763 0 11.192 4.508 11.44 11.417.327 9.376-6.187 17.987-16.77 17.987-6.784 0-11.214-4.497-11.45-11.417zm-95.848-2.344c-.36.135-.823.27-1.409.394-.575.136-1.634.316-3.167.564-1.06.169-1.792.383-2.209.687-.394.293-.63.643-.699 1.082-.078.462.068.823.463 1.116.405.282 1.081.428 2.04.428.72 0 1.42-.112 2.096-.338.687-.225 1.273-.53 1.713-.913.327-.281.563-.642.743-1.082.113-.293.26-.935.429-1.938zm8.79-5.466c-.033.811-.18 1.533-.394 2.784l-1.488 8.35c-.124.745.147 1.32.834 1.725l-.045.327-8.52-.011-.079-2.12a17.147 17.147 0 0 1 -4.09 1.748c-1.353.35-2.446.496-4.08.496-2.75 0-4.328-.282-5.421-1.24-1.105-.98-1.646-1.634-1.59-2.987.046-.777.451-1.78 1.026-2.479.586-.71 1.398-1.172 2.265-1.59.88-.416 1.916-.72 3.415-.957 1.51-.248 3.607-.485 6.413-.721 1.476-.124 2.378-.462 2.795-.631.586-.226.822-.485.901-.958.158-.857-.112-1.353-1.262-1.578-3.065-.609-8.824.394-11.788 1.127l1.611-4.35c3.91-.575 7.574-.936 11.44-.936 6.164 0 8.125 1.747 8.057 4.001zm24.705 13.175 2.952-16.691h8.16l-2.953 16.69zm3.403-20.557c.248-1.375 2.412-2.48 4.823-2.48 2.423 0 4.193 1.116 3.956 2.48-.26 1.375-2.412 2.49-4.846 2.49-2.412 0-4.17-1.115-3.933-2.49zm36.68 12.882c-.372.124-.845.259-1.42.394s-1.634.305-3.167.552c-1.048.17-1.792.384-2.197.688-.395.282-.62.642-.71 1.07-.09.463.079.835.462 1.116.417.282 1.093.417 2.05.417.71 0 1.41-.101 2.097-.315.699-.237 1.274-.53 1.724-.913.316-.282.553-.654.722-1.082.112-.282.259-.924.44-1.927zm8.79-5.477c-.033.822-.18 1.544-.405 2.783l-1.476 8.363c-.124.732.146 1.318.834 1.724l-.045.293-8.52.011-.068-2.13a16.457 16.457 0 0 1 -4.091 1.747c-1.353.36-2.446.507-4.102.507-2.75 0-4.317-.27-5.41-1.24-1.116-.991-1.645-1.634-1.59-2.986.035-.789.44-1.792 1.026-2.48.587-.72 1.398-1.172 2.277-1.589s1.916-.72 3.404-.969c1.51-.236 3.617-.484 6.423-.721 1.466-.124 2.367-.45 2.784-.62.597-.225.823-.485.913-.97.147-.844-.113-1.34-1.251-1.577-3.088-.609-8.824.395-11.788 1.127l1.6-4.35c3.922-.575 7.573-.936 11.439-.936 6.142.012 8.103 1.77 8.047 4.013zm-99.555 7.156c-2.66.53-4.147.733-6.773.733-3.9 0-6.999-1.939-6.83-5.489.124-2.367 2.919-7.348 10.03-7.348 2.243 0 3.99.394 6.345 1.736l1.037-5.793c-3.2-1.206-5.32-1.386-8.07-1.364-9.33.102-18.279 4.34-19.395 12.96-1.127 8.757 9.569 10.955 14.313 10.933 2.739-.012 5.59-.124 8.25-.395zm66.29-10.785.586-3.404 8.532-1.86-.913 5.252h4.18l-.788 3.359-4.057-.011-2.468 13.422s-8.216-.056-8.25 0l2.457-13.389h-3.088l.631-3.38h3.178zm45.52-6.278-3.967 23.047-8.306.011 4.181-23.284zm-71.925 10.278a4.72 4.72 0 0 0 -2.897.97c-.856.653-1.397 1.6-1.611 2.851-.26 1.454-.102 2.502.473 3.144.586.643 1.42.97 2.524.97.744 0 1.51-.136 2.074-.417.699-.372 1.183-.756 1.6-1.375.451-.643.744-1.364.902-2.198.237-1.319.034-2.3-.575-2.953-.597-.653-1.42-.992-2.49-.992zm-14.854 18.54 3.978-22.36h7.168l-.553 2.851c.62-.856 1.612-1.555 2.987-2.119 1.386-.563 2.941-.98 4.632-.98 1.87 0 3.02.101 4.418.823 1.386.732 2.367 1.792 2.885 3.167.54 1.352.654 2.885.36 4.541-.484 2.762-1.825 4.925-4.034 6.526-2.186 1.6-4.159 2.017-6.965 2.028-.992 0-1.826-.101-2.513-.27-.676-.18-1.217-.395-1.623-.654-.394-.259-.811-.631-1.341-1.217l-1.33 7.664zm148.107-16.488c-.045-1.342-.722-2.254-2.108-2.254-3.347 0-6.908 6.559-7.517 9.196 5.489.011 9.76-3.257 9.625-6.942zm.72 10.278.643.44c-1.634 3.324-4.958 5.995-8.858 5.995-3.19 0-5.815-2.13-5.95-6.12-.26-7.156 6.446-13.794 11.934-13.794 2.356 0 4.542 1.025 4.632 3.561.203 5.692-7.787 7.427-13.05 7.551-.17.597-.237 1.195-.203 2.096.09 2.356 1.51 4.34 4.463 4.34 2.547 0 5.094-2.052 6.39-4.07z\"/><path d=\"m164.869 42.207c.563-.079 1.476-.18 1.87-.18.598 0 1.161.113 1.195.71.012.35-.62 2.885-.755 3.471l-1.273 5.613c-.519 2.299-1.071 4.7-1.567 6.604h3.268l1.837-8.892c5.602-5.838 7.765-7.743 9.084-7.743.597 0 1.003.316 1.037 1.026.034 1.025-.609 3.358-.823 4.035l-1.87 6.48c-.429 1.454-.744 2.772-.71 3.708.056 1.42.912 2.05 2.197 2.05 2.39 0 4.125-2.49 5.635-4.936l-.44-.8c-.608.98-2.028 3.133-3.144 3.133-.35 0-.687-.236-.699-.822-.033-.755.282-1.894.508-2.649l2.085-7.596c.563-2.096.822-3.437.811-4.158-.056-1.42-.88-2.085-2.153-2.085-2.152 0-5.003 1.577-11.055 8.531h-.09l.766-3.392c.417-1.86.822-3.798 1.206-5.14-2.097.756-5.094 1.601-6.943 1.962z\"/></g></svg>\n);\n\nexport default IconCapital;\n","import React from \"react\";\nconst IconAmazon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 48 48\"\n    width=\"480px\"\n    height=\"480px\"\n  >\n    <path\n      fill=\"#FFB300\"\n      d=\"M39.6,39c-4.2,3.1-10.5,5-15.6,5c-7.3,0-13.8-2.9-18.8-7.4c-0.4-0.4,0-0.8,0.4-0.6c5.4,3.1,11.5,4.9,18.3,4.9c4.6,0,10.4-1,15.1-3C39.7,37.7,40.3,38.5,39.6,39z M41.1,36.9c-0.5-0.7-3.5-0.3-4.8-0.2c-0.4,0-0.5-0.3-0.1-0.6c2.3-1.7,6.2-1.2,6.6-0.6c0.4,0.6-0.1,4.5-2.3,6.3c-0.3,0.3-0.7,0.1-0.5-0.2C40.5,40.4,41.6,37.6,41.1,36.9z\"\n    />\n    <path\n      fill=\"#37474F\"\n      d=\"M36.9,29.8c-1-1.3-2-2.4-2-4.9v-8.3c0-3.5,0-6.6-2.5-9c-2-1.9-5.3-2.6-7.9-2.6C19,5,14.2,7.2,13,13.4c-0.1,0.7,0.4,1,0.8,1.1l5.1,0.6c0.5,0,0.8-0.5,0.9-1c0.4-2.1,2.1-3.1,4.1-3.1c1.1,0,3.2,0.6,3.2,3v3c-3.2,0-6.6,0-9.4,1.2c-3.3,1.4-5.6,4.3-5.6,8.6c0,5.5,3.4,8.2,7.8,8.2c3.7,0,5.9-0.9,8.8-3.8c0.9,1.4,1.3,2.2,3,3.7c0.4,0.2,0.9,0.2,1.2-0.1l0,0c1-0.9,2.9-2.6,4-3.5C37.4,30.9,37.3,30.3,36.9,29.8z M27,22.1L27,22.1c0,2-0.1,6.9-5,6.9c-3,0-3-3-3-3c0-4.5,4.2-5,8-5V22.1z\"\n    />\n  </svg>\n);\n\nexport default IconAmazon;\n","\nimport React from \"react\";\nconst IconFacebook = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"240px\" height=\"240px\"><linearGradient id=\"Ld6sqrtcxMyckEl6xeDdMa\" x1=\"9.993\" x2=\"40.615\" y1=\"9.993\" y2=\"40.615\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0\" stopColor=\"#2aa4f4\"/><stop offset=\"1\" stopColor=\"#007ad9\"/></linearGradient><path fill=\"url(#Ld6sqrtcxMyckEl6xeDdMa)\" d=\"M24,4C12.954,4,4,12.954,4,24s8.954,20,20,20s20-8.954,20-20S35.046,4,24,4z\"/><path fill=\"#fff\" d=\"M26.707,29.301h5.176l0.813-5.258h-5.989v-2.874c0-2.184,0.714-4.121,2.757-4.121h3.283V12.46 c-0.577-0.078-1.797-0.248-4.102-0.248c-4.814,0-7.636,2.542-7.636,8.334v3.498H16.06v5.258h4.948v14.452 C21.988,43.9,22.981,44,24,44c0.921,0,1.82-0.084,2.707-0.204V29.301z\"/></svg>\n);\n\nexport default IconFacebook;\n","\nimport React from \"react\";\nconst IconGoldman = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2500\" height=\"2500\" viewBox=\"0 0 192.756 192.756\"><g fillRule=\"evenodd\" clipRule=\"evenodd\"><path fill=\"#fff\" d=\"M0 0h192.756v192.756H0V0z\"/><path fill=\"#7793c0\" d=\"M13.837 178.92H178.92V13.837H13.837V178.92z\"/><path d=\"M158.221 51.532H152.5v-22.55h5.385v2.524c.672-1.515 2.355-2.861 4.543-3.029 3.703-.168 6.227 2.02 6.227 6.731v16.323h-5.889V34.536c0-2.02 0-3.702-1.348-4.039-.504-.168-1.346 0-2.02.504-.842.842-1.178 1.851-1.178 3.535l.001 16.996zM60.955 30.497c-1.346-1.178-3.029-2.02-5.048-2.02s-3.534.842-5.048 2.02c-2.356 2.019-3.871 5.721-3.871 9.76 0 4.207 1.515 7.74 3.871 9.76 1.514 1.178 3.029 2.019 5.048 2.019s3.702-.841 5.048-2.019c2.525-2.02 3.871-5.554 3.871-9.76-.001-4.039-1.347-7.741-3.871-9.76zm-2.188 9.76c0 4.207 0 7.573-.673 9.255-.505.841-1.01 1.346-2.188 1.346-1.009 0-1.683-.505-2.019-1.346-.842-1.683-.842-5.049-.842-9.255 0-4.039 0-7.573.842-9.256.336-.841 1.01-1.346 2.019-1.346 1.178 0 1.683.504 2.188 1.346.842 1.683.673 5.217.673 9.256zM119.686 60.114v6.058h-1.178c-.674-2.523-1.684-4.711-4.377-4.88-1.682-.167-3.197.842-3.365 2.356-.168 1.514.338 2.86 3.365 4.543 3.871 2.188 6.9 3.198 6.9 7.741 0 4.88-4.207 7.236-7.74 7.236h-6.732v-8.415h1.178c.842 4.375 2.188 7.068 5.387 7.236 2.018 0 3.533-1.178 3.533-3.366s-1.348-3.534-4.545-5.385c-3.533-2.188-5.721-3.534-5.721-6.563 0-4.039 2.861-6.563 7.404-6.563 1.514.002 5.891.002 5.891.002zM127.09 51.532V35.208c0-4.711-2.525-6.899-6.227-6.731-2.525.168-4.039 1.852-4.713 3.197-.842-2.355-2.691-3.365-5.385-3.197-2.188.168-3.869 1.515-4.543 3.029v-2.524h-5.217v22.55h5.721V34.536c0-1.684.17-2.693 1.178-3.535.674-.504 1.348-.672 1.852-.504 1.348.336 1.348 2.019 1.348 4.039v16.996h5.721V34.368c0-1.516.336-2.525 1.178-3.367.674-.504 1.346-.672 1.852-.504 1.346.336 1.514 2.019 1.514 4.039v16.996h5.721zM68.696 24.271h5.89v27.261h-5.89V24.271zM95.453 51.532V24.271h-5.89v6.394c-.504-1.178-1.683-2.019-3.365-2.019-4.207 0-7.573 4.375-7.741 11.106-.168 4.544 1.346 12.116 7.236 12.116 2.356 0 3.702-1.346 4.207-2.523v2.188h5.553v-.001zm-6.9-20.699c1.178 1.683 1.178 5.721 1.178 8.918 0 3.366.168 7.741-1.178 9.592-.505.673-1.01 1.009-1.852 1.009-1.177 0-1.851-1.346-2.188-3.534-.168-2.02-.168-4.544-.168-7.236 0-4.543.336-9.592 2.524-9.592.842.002 1.179.339 1.684.843zM144.59 29.655c1.516.842 2.525 2.188 2.525 5.217v16.66h-5.555v-2.524c-.672 1.851-2.523 3.029-5.049 3.029-2.02 0-5.553-1.009-5.553-6.226 0-4.88 3.199-5.89 6.732-7.404 3.197-1.346 3.533-1.515 3.533-2.861v-3.702c0-1.514-.842-2.188-2.523-2.188-.674.168-1.852.504-1.852 1.346-.168 1.01 1.01 1.01 1.178 2.525.168 2.356-1.684 3.197-3.365 3.029-1.178 0-2.525-.673-2.693-2.524-.168-3.03 3.197-5.554 7.91-5.554 2.188-.001 3.534.504 4.712 1.177zm-3.365 8.414l-1.852 1.178c-1.85 1.178-2.188 2.692-2.355 4.375-.168 1.346-.168 2.524 0 4.543.168 1.851 1.346 2.188 2.355 1.851 1.18-.505 1.852-2.692 1.852-5.049v-6.898zM61.292 61.124c1.515 1.009 2.356 2.187 2.356 5.216v16.829h-5.385v-2.524c-.674 1.683-2.524 2.86-5.049 2.86-2.188 0-5.553-.841-5.553-6.058 0-4.88 3.198-5.89 6.563-7.404 3.365-1.515 3.702-1.683 3.702-2.861V63.48c0-1.683-.841-2.355-2.524-2.188-.674 0-1.851.337-1.851 1.178-.168 1.178 1.009 1.178 1.177 2.692.169 2.188-1.682 3.029-3.364 3.029-1.178-.168-2.525-.841-2.693-2.692-.168-2.861 3.197-5.385 7.909-5.385 2.187 0 3.534.337 4.712 1.01zm-3.366 8.414l-1.851 1.178c-1.851 1.178-2.188 2.692-2.356 4.375-.168 1.346-.168 2.693 0 4.543 0 2.02 1.178 2.356 2.188 1.851 1.346-.505 2.019-2.524 2.019-5.048v-6.899zM102.016 66.845c0-4.712-2.525-7.068-6.227-6.731-1.851.168-3.366 1.01-4.208 2.188V55.74H85.86v15.482c0 5.721-4.039 11.106-8.077 10.938-2.861 0-3.534-2.188-3.871-4.544-.505-3.366-.505-7.236-.168-11.443.337-2.692 1.01-4.88 3.03-4.88 1.514 0 1.683 1.01 1.009 1.683-.674.842-1.683 1.683-1.178 3.534.504 2.02 3.702 2.356 5.216.842 1.178-1.346 1.01-3.534.168-4.88-1.01-1.683-2.692-2.356-5.216-2.356-3.198 0-9.256 2.86-9.256 11.948 0 9.76 6.226 11.442 9.76 11.442 4.039 0 7.573-3.533 8.582-6.395v6.059h5.721V66.171c0-1.682.337-2.692 1.178-3.534.673-.504 1.515-.673 2.02-.504 1.347.336 1.347 2.019 1.347 4.038v16.997h5.89V66.845h.001zM43.117 23.765v9.592h-1.178c-1.01-4.712-3.197-8.246-6.227-8.414-2.019-.168-3.197 1.009-4.207 2.693-1.009 2.019-1.514 6.226-1.514 11.274 0 4.712.168 8.246.673 10.77.336 1.178 1.178 3.03 3.366 3.03 1.178 0 2.019-.337 2.524-1.01.841-1.01 1.009-3.029 1.009-4.375v-4.543c0-1.683-.504-2.693-1.346-3.197-.673-.337-1.683-.337-2.188-.505v-1.178h9.423v24.064h-1.178c-.504-1.851-.841-3.197-1.683-4.712-.841-1.514-2.356-3.197-4.88-3.197-2.692-.168-4.712 1.515-4.712 4.038 0 3.366 2.02 4.207 5.722 6.227 3.534 2.019 8.078 3.702 8.078 9.592 0 5.722-4.88 9.256-10.433 9.256h-8.919V71.557h1.178c1.515 8.75 5.217 10.265 7.742 10.265 3.196 0 4.711-2.02 4.711-4.88-.168-3.702-2.692-5.048-6.227-6.899-5.047-2.861-7.404-4.208-7.404-8.918.168-4.04 3.366-6.563 6.899-7.573-7.404-.841-9.592-7.572-9.423-14.809 0-7.236 4.207-14.977 12.452-14.977l7.742-.001z\" fill=\"#fff\"/></g></svg>\n);\n\nexport default IconGoldman;\n","\nimport React from \"react\";\nconst IconGoogle = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"240px\" height=\"240px\"><path fill=\"#fbc02d\" d=\"M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12\ts5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24s8.955,20,20,20\ts20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z\"/><path fill=\"#e53935\" d=\"M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039\tl5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z\"/><path fill=\"#4caf50\" d=\"M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36\tc-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z\"/><path fill=\"#1565c0\" d=\"M43.611,20.083L43.595,20L42,20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571\tc0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z\"/></svg>\n);\n\nexport default IconGoogle;\n","\nimport React from \"react\";\nconst IconAsana = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2500\" height=\"2311\" viewBox=\"781.361 0 944.893 873.377\"><radialGradient id=\"a\" cx=\"943.992\" cy=\"1221.416\" r=\".663\" gradientTransform=\"matrix(944.8934 0 0 -873.3772 -890717.875 1067234.75)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0\" stopColor=\"#ffb900\"/><stop offset=\".6\" stopColor=\"#f95d8f\"/><stop offset=\".999\" stopColor=\"#f95353\"/></radialGradient><path fill=\"url(#a)\" d=\"M1520.766 462.371c-113.508 0-205.508 92-205.508 205.488 0 113.499 92 205.518 205.508 205.518 113.489 0 205.488-92.019 205.488-205.518 0-113.488-91.999-205.488-205.488-205.488zm-533.907.01c-113.489.01-205.498 91.99-205.498 205.488 0 113.489 92.009 205.498 205.498 205.498 113.498 0 205.508-92.009 205.508-205.498 0-113.499-92.01-205.488-205.518-205.488h.01zm472.447-256.883c0 113.489-91.999 205.518-205.488 205.518-113.508 0-205.508-92.029-205.508-205.518S1140.31 0 1253.817 0c113.489 0 205.479 92.009 205.479 205.498h.01z\"/></svg>\n);\n\nexport default IconAsana;\n","\nimport React from \"react\";\nconst IconLyft = () => (\n  <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 32 32\" width=\"256px\" height=\"256px\"><path d=\"M 2 8 L 2 19 C 2 20.657 3.343 22 5 22 L 7.0625 22 C 6.4095 21.363 6 20.478 6 19.5 L 6 16 L 6 9.5 L 6 8 L 2 8 z M 22.5 8 C 19.462 8 17 10.462 17 13.5 L 17 15 L 17 16 L 17 22 C 19.209 22 21 20.209 21 18 L 23 18 L 23 14 L 21 14 L 21 13.5 C 21 12.672 21.672 12 22.5 12 C 23.328 12 24 12.672 24 13.5 L 24 16 L 24 17 C 24 19.761 26.239 22 29 22 L 30 22 L 30 18 C 28.895 18 28 17.105 28 16 L 30 16 L 30 12 L 27.787109 12 C 27.133109 9.693 25.017 8 22.5 8 z M 7 12 L 7 19 C 7 20.65 8.35 22 10 22 L 10.5 22 C 11.209 22 11.866969 21.785828 12.417969 21.423828 C 12.286969 21.620828 12.138703 21.805703 11.970703 21.970703 C 11.340703 22.610703 10.46 23 9.5 23 C 8.96 23 8.45 22.880391 8 22.650391 L 8 25.580078 C 8.61 25.850078 9.29 26 10 26 L 11 26 C 13.75 26 16 23.75 16 21 L 16 12 L 12 12 L 12 17.5 C 12 17.775 11.775 18 11.5 18 C 11.225 18 11 17.775 11 17.5 L 11 12 L 7 12 z\"/></svg>\n);\n\nexport default IconLyft;\n","\nimport React from \"react\";\nconst IconUber = () => (\n  <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 32 32\" width=\"256px\" height=\"256px\"><path d=\"M 16 3 C 8.8 3 3 8.8 3 16 C 3 23.2 8.8 29 16 29 C 23.2 29 29 23.2 29 16 C 29 8.8 23.2 3 16 3 z M 16 5 C 22.1 5 27 9.9 27 16 C 27 22.1 22.1 27 16 27 C 10.237727 27 5.5526049 22.62604 5.0507812 17 L 13 17 L 13 19 L 19 19 L 19 13 L 13 13 L 13 15 L 5.0507812 15 C 5.5526049 9.3739595 10.237727 5 16 5 z\"/></svg>\n);\n\nexport default IconUber;\n","\nimport React from \"react\";\nconst IconOracle = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"480px\" height=\"480px\"><path fill=\"#EF0F14\" d=\"M2.861,21.998h2.917c1.05,0,2.261,0.896,2.261,2s-1.21,2-2.261,2H2.861c-1.05,0-1.861-0.895-1.861-2C1,22.893,1.811,21.998,2.861,21.998z M43.021,20.998c-1.401,0-2.521,1.343-2.521,3s1.13,3,2.521,3h4.019l0.96-1h-5c-0.898-0.047-1.289-0.638-1.5-1.5h5.54l0.96-1h-6.5c0.213-0.861,0.592-1.495,1.5-1.5h4.04l0.96-1H43.021z M34,20.998v5.426c0,0.148,0.095,0.292,0.201,0.402s0.249,0.172,0.405,0.172L38.54,27l1-1L35,25.998V21L34,20.998z M27.842,20.998c-1.591,0-2.851,1.346-2.851,3.003s1.26,2.997,2.851,2.997l3.649-0.012l1.149-0.988h-4.819c-1.05,0-1.84-0.894-1.84-1.999s0.79-2.001,1.84-2.001l3.689,0.016l1.13-1.016H27.842z M21,20.998c-0.258,0-0.522,0.215-0.67,0.483l-2.83,5.517h1l2.5-5l1.691,3H20.04l0.941,0.98l2.181-0.006l0.658,1.025l1.081-0.009l-3.277-5.507C21.394,21.112,21.25,20.998,21,20.998z M10,20.998v6h1v-5h3c0.515,0,1,0.464,1,1s-0.485,1-1,1h-2.5l3.481,3H16.5l-2.5-2l0.337-0.009C15.077,24.99,16,24.119,16,22.998c0-1.121-0.687-1.986-1.553-2H10z M2.882,20.998c-1.591,0-2.882,1.344-2.882,3s1.291,3,2.882,3H5.76c1.591,0,3.24-1.343,3.24-3s-1.649-3-3.24-3H2.882z\"/></svg>\n);\n\nexport default IconOracle;\n","\nimport React from \"react\";\nconst IconBloomberg = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2500\" height=\"471\" viewBox=\"0 0 552.081 104.074\"><path d=\"M61.165.471h13.332v74.228H61.146L61.165.471zm53.409 30.257l3.786.408 3.341 1.15 2.841 1.767 2.321 2.23 1.792 2.563 1.275 2.766.766 2.862.265 2.844-.213 2.812-.651 2.786-1.129 2.715-1.666 2.506-2.237 2.18-2.805 1.705-3.352 1.082-3.853.375-3.893-.395-3.421-1.129-2.894-1.729-2.331-2.18-1.795-2.469-1.264-2.648-.755-2.695-.25-2.657.247-2.669.734-2.776 1.212-2.764 1.728-2.633 2.245-2.354 2.805-1.917 3.338-1.28 3.813-.456zM85.833 47.793l.658 6.005 1.858 5.443 2.898 4.852 3.786 4.168 4.499 3.406 5.04 2.541 5.391 1.584 5.56.539 5.477-.565 5.199-1.641 4.792-2.623 4.244-3.512 3.541-4.289 2.706-4.977 1.725-5.555.611-6.055-.656-6.044-1.847-5.568-2.888-5.009-3.77-4.348-4.494-3.567-5.037-2.675-5.407-1.675-5.597-.583-5.519.609-5.217 1.733-4.795 2.761-4.23 3.668-3.536 4.467-2.685 5.134-1.71 5.68-.597 6.096zm95.726-17.065l3.786.408 3.341 1.15 2.844 1.767 2.321 2.23 1.793 2.563 1.272 2.766.768 2.862.266 2.844-.216 2.812-.648 2.786-1.132 2.715-1.666 2.506-2.237 2.182-2.805 1.703-3.354 1.082-3.851.375-3.893-.395-3.421-1.129-2.896-1.729-2.332-2.18-1.795-2.473-1.262-2.645-.752-2.695-.25-2.657.245-2.669.736-2.776 1.213-2.764 1.725-2.633 2.248-2.354 2.805-1.917 3.338-1.28 3.809-.455zm-28.743 17.065l.661 6.005 1.858 5.443 2.898 4.852 3.786 4.168 4.496 3.406 5.042 2.541 5.389 1.584 5.558.539 5.479-.566 5.196-1.641 4.793-2.623 4.249-3.512 3.538-4.289 2.706-4.977 1.728-5.555.609-6.055-.653-6.044-1.848-5.568-2.891-5.009-3.77-4.348-4.494-3.567-5.034-2.675-5.407-1.675-5.596-.583-5.519.609-5.216 1.733-4.798 2.761-4.231 3.668-3.533 4.467-2.688 5.134-1.709 5.68-.599 6.097zm68.84-28.518h10.543v10.342l7.964-7.517 3.895-2.406 4.046-1.395 4.064-.385 3.96.661 3.796 1.741 3.536 2.924 5.55 7.431 3.515-5.919 1.928-2.146 2.329-1.798 2.664-1.434 2.914-1.03 3.086-.63 3.159-.195 3.153.237 3.039.692 2.861 1.129 2.6 1.574 2.277 2.017 1.891 2.481 1.457 2.982.947 3.534.349 4.23v38.304h-13.095l.221-34.308-1.568-5.139-2.951-3.601-3.874-1.871-4.147-.229-3.971 1.155-3.458 2.333-2.594 3.409-1.225 4.187v33.829h-12.648V43.383l-.897-5.664-2.638-4.298-3.882-2.474-4.389-.599-4.291 1.104-3.708 2.644-2.602 4.048-.913 4.972v31.349h-13.105l.212-55.19zM319.185.237h12.643v27.765l6.045-5.409 1.859-1.23 1.921-.942 1.917-.687 1.83-.466 1.675-.284 2.451-.174 4.848.468 4.901 1.369 4.771 2.284 4.398 3.19 3.788 4.098 2.981 4.993 1.959 5.93.713 6.895-.608 5.466-1.71 5.08-2.675 4.615-3.468 4.027-4.111 3.33-4.559 2.496-4.826 1.566-4.993.543-2.508-.119-2.262-.342-1.998-.518-1.798-.672-1.654-.779-3.07-1.822-5.347-3.504v7.295h-13.114V.237h.001zm12.393 46.631l.39 3.718 1.114 3.333 1.706 2.902 2.188 2.416 2.529 1.924 2.784 1.395 2.922.865 2.974.295 2.966-.281 2.938-.83 2.808-1.348 2.581-1.869 2.235-2.367 1.764-2.869 1.15-3.32.411-3.724-.4-3.713-1.106-3.359-1.704-2.927-2.172-2.464-2.532-1.959-2.771-1.444-2.932-.897-2.989-.317-2.995.299-2.942.861-2.808 1.397-2.573 1.907-2.228 2.417-1.757 2.896-1.146 3.346-.405 3.717zm146.526-24.841l2.001-1.342 1.993-.96 1.892-.588 1.704-.266.812.015V31.05l-2.316.05-2.9.406-2.922.848-2.795 1.46-2.396 2.219-1.639 3.06-.544 3.593v32.251h-13.556l.647-55.663h11.729v12.21l6.346-7.699 1.944-1.758zm-462.41 20.16l11.821.078 3.5.981 2.701 2.168 1.611 2.854.614 3.122-.307 3.136-1.218 2.908-2.222 2.381-3.12 1.301h-13.33l-.05-18.929zm.009-29.071l10.485.067 3.104.875 2.41 1.938 1.436 2.544.546 2.768-.276 2.779-1.08 2.589-1.996 2.136-2.794 1.166H15.744l-.041-16.862zM.037 74.229h31.678l3.989-.488 3.567-1.346 3.25-2.092 2.854-2.748 2.355-3.234 1.769-3.58 1.106-3.754.39-3.824-.213-3.602-.601-3.109-.95-2.596-1.261-2.147-1.575-1.774-1.896-1.467-2.251-1.194-8.682-3.097 7.41-3.236 1.342-.942 1.251-1.278 1.124-1.621.944-1.941.726-2.264.463-2.563.167-2.776-.266-2.384-.828-2.771-1.438-2.953-2.04-2.875-2.651-2.569-3.275-2.076L32.553.533 27.731 0H0l.037 74.229zm526.062 29.845l-6.096-.316-5.461-.957-4.762-1.551-4.018-2.113-3.275-2.639-2.534-3.16-1.801-3.715-.354-1.479h15l.206.432 1.337 1.717 1.572 1.34 1.701.979 1.73.684 1.725.428 1.645.236 1.569.064 1.753-.117 2.137-.375 2.362-.678 2.446-1.059 2.362-1.525 2.071-2.117 1.459-2.773.508-3.176V64.742l-6.047 5.426-1.86 1.227-1.923.945-1.91.682-1.839.469-1.671.275-2.44.172-4.865-.461-4.902-1.369-4.771-2.283-4.395-3.193-3.791-4.09-2.977-4.996-1.956-5.924-.708-6.911.604-5.458 1.712-5.082 2.667-4.613 3.474-4.033 4.105-3.323 4.561-2.498 4.83-1.569 5-.552 2.498.125 2.264.343 1.996.523 1.798.664 1.651.789c2.914 1.645 5.649 3.483 8.431 5.279v-7.257h13.116l.049 62.779-.538 5.162-1.48 4.475-2.342 3.91-3.112 3.32-3.809 2.701-4.413 1.998-4.923 1.252-5.366.428zm13.533-58.19l-.398-3.713-1.108-3.338-1.715-2.893-2.178-2.423-2.539-1.915-2.771-1.399-2.924-.864-2.969-.302-2.979.289-2.933.828-2.808 1.353-2.575 1.854-2.237 2.376-1.765 2.864-1.152 3.328-.403 3.708.39 3.726 1.106 3.354 1.701 2.934 2.178 2.457 2.523 1.965 2.785 1.441 2.927.896 2.995.311 2.986-.295 2.945-.863 2.808-1.389 2.575-1.912 2.225-2.41 1.76-2.898 1.142-3.343.408-3.727zm-94.691-8.842l-1.457-3.168-2.198-3.523-2.615-3.148-3.003-2.769-3.319-2.354-3.588-1.889-3.778-1.395-3.919-.859-3.941-.296-5.558.614-5.217 1.733-4.798 2.761-4.23 3.668-3.533 4.467-2.688 5.134-1.71 5.68-.599 6.096.661 6.005 1.857 5.443 2.898 4.852 3.786 4.168 4.496 3.406 5.042 2.541 5.389 1.584 5.589.541 4.346-.346 4.215-1.012 3.986-1.633 3.699-2.227 3.325-2.76 2.888-3.264 2.381-3.713.362-.828h-13.259c-.945.953-2.02 1.68-3.128 2.408l-1.587.82-1.738.672-1.871.492-1.995.303-2.152.105-3.257-.26-2.998-.75-2.692-1.162-2.36-1.514-2.037-1.766-1.704-1.959-1.387-2.074-2.823-5.617h47.367v-.117h.547c.163-1.623.147-3.221.102-4.823l-.154-1.736-.255-1.678-.354-1.642-.463-1.608-.571-1.603zm-27.397-7.948l2.797.208 2.597.596 2.378.932 2.151 1.223 1.905 1.473 1.665 1.644 1.418 1.785 3.538 5.594h-36.688l3.614-5.581 1.415-1.761 1.637-1.631 1.876-1.473 2.1-1.233 2.331-.952 2.537-.609 2.729-.215z\" fillRule=\"evenodd\" clipRule=\"evenodd\"/></svg>\n);\n\nexport default IconBloomberg;\n","\nimport React from \"react\";\nconst IconQuora = () => (\n  <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 32 32\" width=\"256px\" height=\"256px\"><path d=\"M 15.492188 4 C 10.201187 4 5 8.2304531 5 14.439453 C 5 21.556453 11.968844 26.19875 18.214844 24.46875 C 19.260844 26.25175 20.638625 28 23.265625 28 C 27.606625 28 28 24 28 23 L 26.445312 23 C 26.365313 23.716 25.877594 24.457031 24.683594 24.457031 C 23.595594 24.457031 22.810641 23.704594 22.056641 22.558594 C 24.402641 20.743594 25.949219 17.9135 25.949219 14.4375 C 25.954219 8.2025 20.894188 4 15.492188 4 z M 15.492188 6 C 19.536188 6 21.261719 8.9094531 21.261719 14.439453 C 21.266719 16.657453 20.973047 18.450484 20.373047 19.771484 C 19.338047 18.221484 18.054578 17.001953 15.517578 17.001953 C 13.898578 17.001953 12.792719 17.473344 12.011719 18.152344 L 12.658203 19.443359 C 12.987203 19.284359 13.193688 19.289062 13.554688 19.289062 C 15.438688 19.289062 16.404562 20.924969 17.226562 22.542969 C 16.695563 22.701969 16.126234 22.765625 15.490234 22.765625 C 11.510234 22.765625 9.7851563 19.952219 9.7851562 14.449219 C 9.7861563 8.9082188 11.512187 6 15.492188 6 z\"/></svg>\n);\n\nexport default IconQuora;\n","\nimport React from \"react\";\nconst IconIntuit = () => (\n  <svg height=\"730\" width=\"2500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 399.922 116.772\"><g fill=\"#365ebf\"><path d=\"M268.553 114.789H257.99c-2.146 0-3.791-1.154-3.952-3.296l-.168-4.13c-7.596 6.114-16.672 9.409-26.244 9.409-18.48 0-26.067-11.708-26.067-29.539V38.424c0-2.807 1.649-3.798 4.281-3.798h11.557c2.643 0 4.13.821 4.13 3.798v45.341c0 9.08 2.309 15.347 12.214 15.347 6.261 0 14.188-3.461 19.139-7.917V38.424c0-2.807 1.488-3.798 4.12-3.798h11.717c2.644 0 4.132.821 4.132 3.798v71.748c-.002 3.463-.999 4.617-4.296 4.617zM0 37.918c0-1.975.992-3.296 2.969-3.296h13.96c1.979 0 3.134 1.156 3.134 3.296v72.746c0 2.971-1.326 4.125-4.125 4.125H4.292c-2.961 0-4.292-1.154-4.292-4.125zM293.494 37.918c0-1.975.997-3.296 2.972-3.296h13.959c1.983 0 3.138 1.156 3.138 3.296v72.746c0 2.971-1.322 4.125-4.131 4.125h-11.646c-2.962 0-4.292-1.154-4.292-4.125zM108.52 114.789H96.64c-2.969 0-3.958-1.483-3.958-4.292V65.61c0-9.071-2.471-15.509-12.543-15.509-6.438 0-14.355 3.472-19.47 7.921v52.641c0 2.813-1.156 4.125-3.956 4.125H44.662c-2.476 0-3.963-1.312-3.963-3.959V38.767c0-2.642 1.163-4.125 4.129-4.125h10.721c2.309 0 3.803.657 3.963 3.132l.163 4.405c7.597-6.101 17.168-9.564 26.74-9.564 18.482 0 26.071 11.549 26.071 29.536v48.346c-.001 2.809-.988 4.292-3.966 4.292zM167.333 12.105C167.333 5.42 161.918 0 155.232 0c-6.682 0-12.105 5.42-12.105 12.105s5.424 12.099 12.105 12.099c6.686 0 12.101-5.414 12.101-12.099zM184.556 34.622c1.979 0 3.135.657 3.135 2.805v11.621c0 1.979-1.318 3.135-3.302 3.135h-19.125v58.48c0 2.971-1.319 4.125-4.292 4.125h-11.483c-2.971 0-4.288-1.154-4.288-4.125v-58.48h-19.13c-1.979 0-3.299-1.156-3.299-3.135V37.427c0-2.148 1.154-2.805 3.136-2.805zM372.114 12.105C372.114 5.42 366.694 0 360.009 0c-6.682 0-12.102 5.42-12.102 12.105s5.42 12.099 12.102 12.099c6.685 0 12.105-5.414 12.105-12.099zM389.336 34.622c1.975 0 3.129.657 3.129 2.805v11.621c0 1.979-1.315 3.135-3.301 3.135h-19.125v58.48c0 2.971-1.315 4.125-4.288 4.125h-11.486c-2.972 0-4.288-1.154-4.288-4.125l-.004-58.48h-19.12c-1.984 0-3.305-1.156-3.305-3.135V37.427c0-2.148 1.159-2.805 3.133-2.805zM394.565 104.618c2.917 0 5.357 2.299 5.357 5.315 0 3.069-2.44 5.374-5.357 5.374-2.93 0-5.387-2.305-5.387-5.374.001-3.016 2.458-5.315 5.387-5.315zm0 9.905c2.475 0 4.388-1.971 4.388-4.59 0-2.556-1.913-4.531-4.388-4.531-2.502 0-4.418 1.976-4.418 4.531 0 2.62 1.916 4.59 4.418 4.59zm-2.086-7.691h2.412c1.488 0 2.19.586 2.19 1.789 0 1.123-.711 1.602-1.645 1.699l1.789 2.76h-1.046l-1.699-2.691h-1.031v2.691h-.971v-6.248zm.97 2.772h1.017c.858 0 1.642-.04 1.642-1.026 0-.831-.711-.957-1.37-.957h-1.288v1.983z\"/></g></svg>\n);\n\nexport default IconIntuit;\n","\nimport React from \"react\";\nconst IconSnapchat = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"240px\" height=\"240px\"><linearGradient id=\"s9~sBE_MLsUutFtX7i6Pra\" x1=\"20.601\" x2=\"27.399\" y1=\"4.721\" y2=\"43.279\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0\" stopColor=\"#fede00\"/><stop offset=\"1\" stopColor=\"#ffd000\"/></linearGradient><path fill=\"url(#s9~sBE_MLsUutFtX7i6Pra)\" d=\"M34.017,41.99l-20,0.019c-4.4,0.004-8.003-3.592-8.008-7.992l-0.019-20\tc-0.004-4.4,3.592-8.003,7.992-8.008l20-0.019c4.4-0.004,8.003,3.592,8.008,7.992l0.019,20\tC42.014,38.383,38.417,41.986,34.017,41.99z\"/><path d=\"M14.613,20.505c-0.168,0-0.342,0.039-0.503,0.12c-0.265,0.132-0.463,0.36-0.557,0.641\tc-0.151,0.453,0.004,0.95,0.386,1.236l3.676,2.296l-0.143,0.382c-0.066,0.179-1.67,4.403-4.703,6.057\tc-0.161,0.088-0.264,0.206-0.274,0.317c-0.011,0.112,0.078,0.213,0.155,0.277c0.656,0.549,1.334,0.939,2.685,1.187l0.409,0.075\tl0.001,0.416c0.002,0.608,0.195,1.251,0.375,1.251c0.893,0,2.751,0,4.608,0.928c1.03,0.515,2.472,0.823,3.271,0.823\ts2.241-0.308,3.271-0.823c1.856-0.928,3.715-0.928,4.608-0.928c0.181,0,0.374-0.643,0.375-1.251l0.001-0.416l0.409-0.075\tc1.351-0.247,2.029-0.637,2.686-1.187c0.077-0.064,0.166-0.165,0.155-0.277c-0.011-0.111-0.114-0.229-0.274-0.317\tc-3.032-1.654-4.636-5.878-4.703-6.057l-0.143-0.382l3.71-2.32c0.347-0.263,0.502-0.759,0.351-1.212\tc-0.093-0.281-0.291-0.508-0.556-0.641c-0.264-0.133-0.564-0.153-0.846-0.06l-2.546,1.042V18.1c0-3.636-2.914-6.594-6.496-6.594\tc-3.586,0-6.5,2.958-6.5,6.594v3.508l-2.576-1.053C14.828,20.522,14.722,20.505,14.613,20.505z\" opacity=\".07\"/><path fill=\"none\" stroke=\"#1d1d1b\" strokeWidth=\"2\" d=\"M24,37.011c0.868,0,2.387-0.322,3.494-0.875 c1.751-0.875,3.509-0.875,4.384-0.875c0.875,0,0.875-1.751,0.875-1.751c1.391-0.254,2.156-0.658,2.917-1.295 c0.531-0.445,0.407-1.085-0.201-1.416c-2.903-1.583-4.474-5.793-4.474-5.793l3.364-2.104c0.554-0.415,0.779-1.138,0.561-1.795l0,0 c-0.281-0.843-1.193-1.298-2.035-1.016l-1.887,0.771V18.1c0-3.864-3.132-7.094-6.996-7.094h0h-0.004h0 c-3.864,0-6.996,3.23-6.996,7.094v2.763l-1.887-0.771c-0.843-0.282-1.754,0.173-2.035,1.016l0,0 c-0.219,0.656,0.007,1.379,0.561,1.795l3.364,2.104c0,0-1.57,4.209-4.474,5.793c-0.608,0.331-0.732,0.972-0.201,1.416 c0.76,0.637,1.526,1.041,2.917,1.295c0,0,0,1.751,0.875,1.751c0.875,0,2.633,0,4.384,0.875C21.613,36.689,23.132,37.011,24,37.011\" opacity=\".05\"/><path fill=\"none\" stroke=\"#000\" d=\"M24,37.011c0.868,0,2.387-0.322,3.494-0.875 c1.751-0.875,3.509-0.875,4.384-0.875c0.875,0,0.875-1.751,0.875-1.751c1.391-0.254,2.156-0.658,2.917-1.295 c0.531-0.445,0.407-1.085-0.201-1.416c-2.903-1.583-4.474-5.793-4.474-5.793l3.364-2.104c0.554-0.415,0.779-1.138,0.561-1.795l0,0 c-0.281-0.843-1.193-1.298-2.035-1.016l-1.887,0.771V18.1c0-3.864-3.132-7.094-6.996-7.094h0h-0.004h0 c-3.864,0-6.996,3.23-6.996,7.094v2.763l-1.887-0.771c-0.843-0.282-1.754,0.173-2.035,1.016l0,0 c-0.219,0.656,0.007,1.379,0.561,1.795l3.364,2.104c0,0-1.57,4.209-4.474,5.793c-0.608,0.331-0.732,0.972-0.201,1.416 c0.76,0.637,1.526,1.041,2.917,1.295c0,0,0,1.751,0.875,1.751c0.875,0,2.633,0,4.384,0.875C21.613,36.689,23.132,37.011,24,37.011\" opacity=\".07\"/><path fill=\"#fff\" d=\"M24,37.011c0.868,0,2.387-0.322,3.494-0.875c1.751-0.875,3.509-0.875,4.384-0.875\tc0.875,0,0.875-1.751,0.875-1.751c1.391-0.254,2.156-0.658,2.917-1.295c0.531-0.445,0.407-1.085-0.201-1.416\tc-2.903-1.583-4.474-5.793-4.474-5.793l3.364-2.104c0.554-0.415,0.779-1.138,0.561-1.795l0,0c-0.281-0.843-1.193-1.298-2.035-1.016\tl-1.887,0.771V18.1c0-3.864-3.132-7.094-6.996-7.094h0h-0.004h0c-3.864,0-6.996,3.23-6.996,7.094v2.763l-1.887-0.771\tc-0.843-0.282-1.754,0.173-2.035,1.016l0,0c-0.219,0.656,0.007,1.379,0.561,1.795l3.364,2.104c0,0-1.57,4.209-4.474,5.793\tc-0.608,0.331-0.732,0.972-0.201,1.416c0.76,0.637,1.526,1.041,2.917,1.295c0,0,0,1.751,0.875,1.751c0.875,0,2.633,0,4.384,0.875\tC21.613,36.689,23.132,37.011,24,37.011\"/></svg>\n);\n\nexport default IconSnapchat;\n","\nimport React from \"react\";\nconst IconPinterest = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"480px\" height=\"480px\"><path fill=\"#d32f2f\" d=\"M24 4A20 20 0 1 0 24 44A20 20 0 1 0 24 4Z\"/><path fill=\"#fff\" d=\"M19.562,27c0-3.329-0.562-4.482-0.562-5.788C19,18.243,21.131,18,22.032,18C23.316,18,25,18.871,25,20.5c0,2.371-2,2.671-2,2.671S23,24,23,25.46C23,27,23.372,29,26.123,29C30.537,29,31,22.848,31,21.163C31,18.834,29.51,14,24.213,14C17.148,14,16,20.313,16,22c0,0.722,0.132,2.122,0.269,2.667c2.106,0.52,1.615,2.375,1.044,2.895C16.484,28.328,13,28.477,13,21.325C13,14.513,19.072,11,24.402,11C29.474,11,35,14.502,35,21.246c0,6.018-4.327,10.757-8.872,10.757c-2.728,0-4.175-2.248-4.175-2.248C21.953,34,18.495,40.083,18,41C18,41,19.562,33.146,19.562,27z\"/></svg>\n);\n\nexport default IconPinterest;\n","\nimport React from \"react\";\nconst IconQualtrics = () => (\n  <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n width=\"2111.000000pt\" height=\"601.000000pt\" viewBox=\"0 0 2111.000000 601.000000\"\n preserveAspectRatio=\"xMidYMid meet\">\n\n<g transform=\"translate(0.000000,601.000000) scale(0.100000,-0.100000)\"\nfill=\"#000000\" stroke=\"none\">\n<path d=\"M7540 3750 l0 -2260 230 0 230 0 0 2260 0 2260 -230 0 -230 0 0\n-2260z\"/>\n<path d=\"M20423 5172 c-62 -218 -151 -536 -199 -705 -48 -169 -90 -304 -94\n-300 -5 4 -27 71 -50 148 -65 218 -270 888 -277 905 -5 12 -7 12 -10 -3 -3 -9\n-8 -15 -13 -12 -5 3 -11 1 -14 -4 -4 -5 -1 -13 5 -17 8 -5 9 -3 4 6 -5 9 -4\n11 4 6 6 -4 9 -12 5 -17 -3 -6 -9 -8 -12 -5 -6 7 -38 -36 -35 -46 2 -4 -6 -12\n-17 -18 -11 -6 -20 -16 -20 -22 0 -6 -20 -36 -45 -66 -25 -30 -45 -59 -45 -64\n0 -5 -4 -7 -9 -4 -4 3 -6 -5 -4 -18 3 -13 0 -27 -6 -30 -7 -5 -9 -1 -5 8 8 22\n-3 20 -15 -2 -20 -37 39 -247 267 -952 l98 -305 191 -3 191 -2 26 77 c197 603\n309 977 354 1183 7 31 10 -152 11 -607 l1 -653 195 0 195 0 0 960 0 960 -282\n0 -283 0 -112 -398z\"/>\n<path d=\"M8880 5382 c0 -93 -3 -311 -7 -485 l-6 -317 -199 0 -198 0 0 -210 0\n-210 205 0 205 0 0 -1017 c0 -578 5 -1061 10 -1117 19 -198 72 -328 175 -432\n112 -113 254 -160 450 -151 127 7 223 31 343 87 l82 39 0 211 0 211 -52 -40\nc-93 -69 -205 -111 -296 -111 -105 0 -190 65 -222 168 -19 62 -20 98 -20 1108\nl0 1044 330 0 330 0 0 210 0 210 -330 0 -330 0 0 485 0 485 -235 0 -235 0 0\n-168z\"/>\n<path d=\"M12190 5285 l0 -265 235 0 235 0 0 265 0 265 -235 0 -235 0 0 -265z\"/>\n<path d=\"M19522 4841 c-7 -4 -14 -15 -16 -24 -1 -10 -12 -26 -24 -37 -12 -11\n-25 -32 -28 -45 -3 -14 -10 -22 -16 -19 -5 3 -12 -3 -15 -15 -3 -11 -16 -27\n-29 -36 -13 -8 -24 -24 -24 -34 0 -10 -7 -21 -15 -25 -8 -3 -15 -12 -15 -20 0\n-7 -7 -17 -16 -20 -9 -4 -14 -9 -11 -13 4 -3 -5 -14 -18 -25 -14 -11 -25 -27\n-25 -37 0 -10 -13 -28 -30 -41 -19 -14 -30 -32 -30 -47 0 -13 -4 -22 -9 -19\n-11 7 -41 -37 -41 -61 0 -15 -2 -16 -10 -3 -6 10 -10 -67 -12 -223 l-3 -239\n-69 111 c-63 102 -99 149 -83 109 4 -11 1 -14 -12 -11 -16 4 -40 -29 -37 -49\n0 -4 -9 -15 -21 -23 -13 -9 -23 -22 -23 -29 0 -8 -7 -16 -15 -20 -8 -3 -15\n-12 -15 -19 0 -8 -10 -22 -21 -33 -12 -10 -25 -29 -30 -42 -5 -13 -13 -20 -19\n-17 -5 3 -10 1 -10 -5 0 -6 -5 -8 -12 -4 -10 6 -10 4 -2 -7 12 -15 11 -46 -2\n-57 -4 -4 -4 2 0 13 6 16 5 17 -5 8 -9 -9 -4 -25 23 -70 l34 -58 362 -3 362\n-2 0 600 c0 330 -2 600 -3 600 -1 0 -8 -4 -15 -9z\"/>\n<path d=\"M5895 4634 c-206 -20 -389 -96 -520 -216 -174 -159 -286 -405 -302\n-665 l-6 -103 211 0 212 0 0 58 c0 130 62 288 148 383 205 223 550 189 668\n-66 44 -95 57 -170 58 -323 l1 -144 -330 -157 c-531 -253 -618 -300 -771 -419\n-182 -141 -284 -294 -330 -497 -27 -118 -25 -340 5 -459 71 -293 261 -494 537\n-567 110 -29 307 -30 415 -1 161 43 303 126 432 254 44 44 80 78 81 76 2 -2\n19 -38 38 -80 60 -126 152 -209 281 -250 108 -36 285 -27 410 21 l27 11 0 200\nc0 110 -1 200 -2 200 -2 0 -30 -11 -63 -25 -120 -49 -208 -23 -246 75 -11 28\n-15 221 -19 1025 -6 977 -6 991 -27 1067 -63 223 -163 370 -319 471 -82 53\n-177 92 -271 111 -72 15 -251 26 -318 20z m475 -1968 l0 -474 -43 -58 c-158\n-214 -404 -338 -605 -305 -215 35 -342 195 -342 431 0 161 57 295 180 423 100\n105 226 188 456 297 104 50 221 106 259 124 39 19 76 35 83 35 9 1 12 -100 12\n-473z\"/>\n<path d=\"M11474 4625 c-96 -17 -136 -31 -218 -73 -79 -41 -201 -151 -277 -252\n-29 -38 -56 -67 -60 -65 -3 3 -10 73 -13 157 -4 84 -10 161 -12 171 -5 15 -24\n17 -225 17 l-219 0 0 -1545 0 -1545 230 0 230 0 0 1107 0 1106 38 36 c206 196\n426 356 574 419 51 21 78 26 146 25 l82 0 0 228 0 229 -102 -1 c-57 0 -135 -7\n-174 -14z\"/>\n<path d=\"M825 4613 c-150 -31 -340 -148 -446 -274 -188 -223 -301 -519 -351\n-919 -17 -138 -17 -638 0 -785 68 -582 270 -962 600 -1129 126 -64 316 -84\n480 -50 121 24 263 98 355 184 l77 72 0 -851 0 -851 230 0 230 0 0 2285 0\n2285 -200 0 -200 0 0 -97 c0 -54 -3 -115 -6 -136 l-7 -38 -32 48 c-82 122\n-239 226 -390 258 -88 19 -249 18 -340 -2z m350 -398 c92 -24 142 -52 217\n-123 51 -48 78 -84 108 -144 l40 -80 0 -842 0 -841 -39 -60 c-83 -131 -182\n-215 -302 -255 -53 -18 -81 -21 -164 -18 -87 3 -109 8 -166 35 -196 92 -309\n315 -365 718 -26 184 -26 659 0 830 32 221 72 357 143 496 118 232 317 338\n528 284z\"/>\n<path d=\"M16145 4620 c-396 -62 -660 -349 -682 -740 -14 -253 60 -445 241\n-626 103 -103 220 -183 441 -304 315 -172 422 -248 506 -359 63 -84 90 -155\n96 -256 10 -143 -29 -256 -119 -351 -92 -98 -201 -144 -337 -144 -275 0 -472\n202 -513 526 l-12 94 -213 0 -213 0 0 -25 c0 -13 5 -71 11 -127 48 -450 289\n-752 676 -850 75 -19 114 -23 268 -22 207 1 278 15 425 85 216 103 365 279\n436 514 22 76 27 115 31 245 6 176 -7 273 -53 386 -101 254 -275 411 -704 639\n-306 163 -416 246 -477 362 -97 181 -47 398 114 501 75 48 151 65 259 60 113\n-6 199 -42 269 -113 85 -84 140 -246 133 -393 l-3 -72 214 0 214 0 -6 138 c-6\n164 -29 259 -91 387 -107 222 -278 364 -511 426 -92 24 -302 34 -400 19z\"/>\n<path d=\"M14011 4605 c-454 -82 -730 -466 -816 -1135 -36 -285 -30 -714 16\n-995 92 -562 336 -909 708 -1006 110 -29 283 -35 400 -15 404 71 648 399 705\n949 l6 57 -212 -2 -213 -3 -8 -80 c-9 -95 -47 -235 -83 -307 -131 -258 -457\n-303 -645 -90 -122 139 -200 389 -230 740 -15 182 -7 616 15 762 59 392 177\n622 363 707 144 66 323 26 421 -93 68 -83 126 -238 138 -375 l7 -69 216 0 217\n0 -3 68 c-25 495 -265 818 -659 887 -104 18 -242 18 -343 0z\"/>\n<path d=\"M2602 3323 l3 -1258 26 -95 c78 -281 218 -436 449 -497 87 -23 288\n-23 384 0 163 40 303 123 434 255 l82 83 0 -150 0 -151 225 0 225 0 0 1535 0\n1535 -230 0 -230 0 0 -1174 0 -1174 -47 -63 c-61 -84 -175 -195 -248 -244\n-184 -121 -387 -121 -494 2 -44 49 -73 106 -99 191 -15 52 -17 157 -20 1260\nl-2 1202 -231 0 -230 0 3 -1257z\"/>\n<path d=\"M12190 3045 l0 -1535 235 0 235 0 0 1535 0 1535 -235 0 -235 0 0\n-1535z\"/>\n<path d=\"M17570 1998 c-100 -52 -150 -137 -150 -258 0 -120 50 -206 148 -257\n55 -28 74 -33 136 -33 130 0 220 51 270 152 22 44 26 65 26 137 0 96 -16 143\n-68 202 -50 57 -114 83 -212 87 -80 4 -89 2 -150 -30z m211 -34 c157 -46 213\n-254 103 -383 -83 -97 -248 -99 -335 -4 -46 49 -63 93 -63 163 0 130 94 230\n225 239 8 1 40 -6 70 -15z\"/>\n<path d=\"M17580 1746 l0 -166 39 0 40 0 3 53 c3 51 4 52 35 55 31 3 34 0 60\n-52 26 -53 29 -56 65 -56 21 0 38 3 38 7 0 3 -14 31 -31 61 -30 53 -30 54 -10\n68 28 20 44 75 34 115 -15 58 -50 74 -169 77 l-104 4 0 -166z m188 78 c12 -8\n22 -22 22 -29 0 -24 -45 -47 -87 -43 -33 3 -38 6 -41 31 -2 16 -1 35 2 43 7\n19 76 18 104 -2z\"/>\n</g>\n</svg>\n\n);\n\nexport default IconQualtrics;\n","\nimport React from \"react\";\nconst IconAirbnb = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"20px\" height=\"20px\"><path fill=\"#ff5252\" d=\"M42.459,32.519c-1.037-3.336-9.539-19.596-12.12-24.5l-0.026-0.048C29.153,5.559,26.676,4,24,4 s-5.153,1.559-6.291,3.929L17.661,8.02C15.08,12.923,6.578,29.183,5.542,32.518C5.261,33.421,5,34.407,5,35.5 c0,4.687,3.813,8.5,8.5,8.5c4.654,0,7.612-1.949,10.5-5.184C26.888,42.051,29.846,44,34.5,44c4.687,0,8.5-3.813,8.5-8.5 C43,34.407,42.739,33.421,42.459,32.519z M23.999,34.662C22.33,32.515,20,28.881,20,26c0-2.206,1.794-4,4-4s4,1.794,4,4 C28,28.872,25.668,32.511,23.999,34.662z M34.5,41c-3.287,0-5.521-1.107-8.325-4.258C27.878,34.596,31,30.104,31,26 c0-3.86-3.141-7-7-7s-7,3.14-7,7c0,4.104,3.122,8.596,4.825,10.742C19.021,39.893,16.787,41,13.5,41C10.468,41,8,38.533,8,35.5 c0-0.653,0.162-1.308,0.406-2.09C9.17,30.95,15.3,18.948,20.316,9.417l0.076-0.146C21.055,7.891,22.471,7,24,7 s2.945,0.891,3.615,2.285l0.068,0.132C32.7,18.948,38.83,30.95,39.595,33.411C39.838,34.192,40,34.847,40,35.5 C40,38.533,37.532,41,34.5,41z\"/></svg>\n);\n\nexport default IconAirbnb;\n","\nimport React from \"react\";\nconst IconJPMorgan = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2500\" height=\"2500\" viewBox=\"0 0 192.756 192.756\"><g fillRule=\"evenodd\" clipRule=\"evenodd\"><path fill=\"#fff\" d=\"M0 0h192.756v192.756H0V0z\"/><path d=\"M19.121 79.213v17.06c0 3.77-2.778 7.736-9.522 7.736-4.562 0-6.546-3.371-6.745-5.555-.199-1.982 1.19-3.967 3.373-3.967 1.983 0 3.174 1.587 3.174 2.777.198 1.588-.793 2.977-2.579 3.174-1.19 0-1.19-.992-1.785-.793-.992.396.992 3.57 4.166 3.57 3.174-.199 3.571-2.381 3.571-4.562v-19.44H9.6v-.595h12.299v.793c-1.192-.198-2.184-.198-2.778-.198zM73.475 78.42l-5.753 16.862-5.753-16.862c-1.984.198-4.364.198-9.522.198v.793c1.19 0 2.182-.198 2.579-.198v23.408c-.396 0-1.587-.197-2.777-.197v.793h6.745v-.793c-1.389 0-2.381.197-2.976.197V79.412h.198l8.332 23.805h1.389l8.133-23.805h.198v23.012h-2.38v.793h11.109v-.793h-2.579v-23.21h2.579v-.794c-4.364 0-6.745.198-9.522 0zM115.332 88.338c.199-1.19 1.785-4.562 4.959-4.562 2.184 0 3.373 1.389 3.572 2.976.197 1.587-.992 2.976-2.381 3.174-1.588.397-3.174-.595-3.373-2.38 0-1.983 1.588-1.983 1.389-2.38-.197-.595-1.586 0-2.381.992-.594.793-1.982 2.777-1.982 6.546v9.918c.594 0 1.785 0 2.975-.197v.793H107.2v-.596h2.777V85.363H107.2v-.595h5.555c.793 0 1.189-.198 2.381-.396v3.967h.196v-.001zM187.541 102.621c.396 0 1.189 0 2.381-.197v.793h-9.721v-.793a9.167 9.167 0 0 0 1.984.197V87.942c0-1.389-.398-2.976-2.184-2.777-2.182 0-4.363 2.38-4.562 5.753v11.704c.396 0 1.389 0 2.381-.197v.793h-10.117v-.793c.992.197 1.785.197 2.381.197V85.165h-2.182v-.595h4.76c.992 0 1.785-.199 2.777-.397v3.571c.396-.596 1.785-3.77 6.547-3.77 2.777 0 5.555 1.587 5.555 5.158v13.489zM34.395 79.412v12.895c.992.198 1.587.198 2.579.198 2.976 0 4.562-2.182 4.562-6.745.001-4.761-.991-6.745-7.141-6.348v-.793h5.356c5.158 0 8.53 2.579 8.332 7.34-.397 5.356-4.761 7.539-9.522 7.539-2.38 0-4.166-.397-4.166-.397v9.324c.595.197 1.389 0 2.777 0v.793H25.468v-.793c1.19 0 2.182.197 2.777.197V79.213h-2.976v-.595h9.125v.794h.001zM95.098 103.613c4.761 0 9.919-3.174 9.919-9.918.197-6.745-5.158-9.919-9.919-9.919v.794c2.58 0 3.769 2.182 3.769 6.942v4.761c0 4.762-1.189 6.744-3.769 6.744-2.579 0-3.769-1.982-3.769-6.744v-4.761c0-4.761 1.19-6.942 3.769-6.942v-.794c-4.761 0-9.919 3.372-9.919 9.919 0 6.348 5.158 9.918 9.919 9.918zM131.797 104.805h6.547c2.381 0 3.373 1.189 3.57 2.975.199 2.977-3.174 5.555-7.537 5.754v.793h.197c4.762-.396 8.928-3.174 8.928-8.531-.199-4.959-2.977-6.348-5.754-6.348l-8.133.199c-1.588 0-2.381-.793-2.182-1.588.197-1.189 2.578-2.38 4.363-2.182.795.198 1.191.396 2.184.396 3.57 0 7.736-2.579 7.537-6.546 0-1.389-.596-2.579-1.984-4.166.398-1.19.992-1.786 1.588-1.984.596-.396.992-.396.992 0 0 .198-.992.396-.793 1.785 0 .992 1.189 1.785 2.379 1.587 1.191 0 1.984-1.19 1.785-2.182 0-1.19-.99-2.38-2.775-2.38-1.787 0-2.977 1.389-3.572 2.777-.992-.793-2.182-1.587-5.156-1.587v.595c1.785 0 2.578.794 2.775 4.563v2.38c-.197 4.166-1.189 4.364-2.775 4.364-1.389 0-2.777 0-2.777-4.166v-2.381c0-3.769.793-4.761 2.777-4.761v-.595h-.199c-4.562 0-7.143 3.57-7.143 6.149 0 2.777 1.191 4.364 3.373 5.753-1.785.397-4.363 1.983-4.363 4.762.197 3.174 3.174 3.967 4.166 4.363-1.191.396-4.564 1.588-4.564 4.363 0 3.176 3.969 5.555 9.127 5.357v-.793c-3.969.197-6.746-2.381-6.547-5.158-.001-2.974 2.776-3.567 3.966-3.567zM157.785 92.108v-4.96c0-2.182-1.785-2.976-4.166-2.777-1.785.396-2.58 1.19-2.381 1.785.396.595 1.785.595 1.984 2.38.197 1.19-.396 2.381-1.785 2.778-1.191.198-3.176-.397-3.373-2.381-.199-2.182 1.389-5.158 7.936-5.356 3.174 0 7.141 1.389 6.943 6.149v10.515c0 1.586.396 1.982.793 1.982.793 0 1.586-.793 1.785-1.982l.596.197c-.199 1.588-1.389 2.977-4.166 2.977-2.58 0-3.77-1.785-4.166-2.977-.596.992-1.588 2.182-3.174 2.777v-.992c.99 0 3.174-1.785 3.174-3.77v-5.554c-2.977-.198-4.365.397-5.158 2.183-.596.992-.596 3.174-.396 4.563.197 1.785.992 2.777 2.381 2.578v.992c-.596.199-1.191.199-1.785.199-3.176 0-6.35-1.785-6.35-4.961 0-4.758 4.562-6.345 11.308-6.345z\" fill=\"#272727\"/></g></svg>\n);\n\nexport default IconJPMorgan;\n","\nimport React from \"react\";\nconst IconBlackRock = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2500\" height=\"2500\" viewBox=\"0 0 192.756 192.756\"><g fillRule=\"evenodd\" clipRule=\"evenodd\"><path fill=\"#fff\" d=\"M0 0h192.756v192.756H0V0z\"/><path d=\"M66.668 91.932l-5.439.628v.732l.732.104c1.569.104 2.092.209 2.092 1.569v13.81h10.774l.21-3.977h-1.255l-.105.211c-.209 1.568-.313 2.404-2.196 2.404h-2.406c-2.093 0-2.093 0-2.093-1.986V91.932h-.314zM90.833 99.777c0 5.545 3.348 9.311 8.264 9.311 2.721 0 4.08-.418 5.336-.732h.209v-1.463h-.314c-1.359.418-2.615.627-3.66.627-4.499 0-6.696-2.721-6.696-8.369 0-3.661 1.569-5.962 4.29-5.962 1.883 0 2.928.836 3.242 2.301v.208h3.139v-.208c-.105-.942-.838-3.766-6.172-3.766-5.127-.001-7.638 2.719-7.638 8.053zM110.188 91.932l-5.336.628v.732l.629.104c1.568.104 2.092.209 2.092 1.569v13.81h2.928v-8.057c.523.629 7.324 8.057 7.324 8.057h3.557s-8.475-9.207-8.787-9.52c.312-.211 7.74-7.324 7.74-7.324h-2.51s-6.695 6.486-7.324 7.113v-7.113h-.313v.001z\"/><path d=\"M154.229 99.777c0 5.545 3.348 9.311 8.369 9.311 2.719 0 4.08-.418 5.334-.732h.105v-1.463h-.209c-1.359.418-2.615.627-3.662.627-4.498 0-6.695-2.721-6.695-8.369 0-3.661 1.57-5.962 4.289-5.962 1.779 0 2.826.836 3.139 2.301v.208h3.244l-.105-.208c-.105-.942-.836-3.766-6.066-3.766-5.128-.001-7.743 2.719-7.743 8.053zM173.164 91.932l-5.336.628v.732l.627.104c1.57.104 2.094.209 2.094 1.569v13.81h2.928v-8.057c.523.629 7.324 8.057 7.324 8.057h3.451s-8.369-9.207-8.684-9.52c.314-.211 7.742-7.324 7.742-7.324h-2.51s-6.695 6.486-7.324 7.113v-7.113h-.312v.001zM145.65 91.723c-5.125 0-7.531 2.72-7.531 8.683 0 5.857 2.406 8.682 7.531 8.682 5.127 0 7.531-2.824 7.531-8.682.001-5.859-2.404-8.683-7.531-8.683zm0 15.902c-3.766 0-4.395-3.453-4.395-7.219 0-3.871.629-7.324 4.395-7.324 3.871 0 4.393 3.453 4.393 7.324 0 3.766-.522 7.219-4.393 7.219z\" fill=\"#808183\"/><path d=\"M131.947 98.418c3.975-.523 5.857-2.197 5.857-5.125 0-4.812-4.289-5.44-7.951-5.44h-10.146v.837l.312.105c2.826.523 3.244.523 3.244 2.511v17.47h3.453V98.733h1.359c.209.105 7.008 10.043 7.008 10.043h3.977c.001-.001-6.8-9.835-7.113-10.358zm-4.5-1.359h-.73v-5.753c0-1.674 0-1.884 2.301-1.884 2.197 0 5.021.628 5.021 3.557 0 4.08-4.185 4.08-6.592 4.08z\" fill=\"#808183\"/><path d=\"M84.662 91.932h-5.126v.837h.104c1.36.313 1.988.523 1.988.941 0 .314-.209.837-.418 1.255l-5.858 13.81h2.197s2.092-5.127 2.197-5.439h6.8c.104.209 2.302 5.439 2.302 5.439h3.243l-7.429-16.843zm-4.289 10.043c.209-.521 2.511-5.963 2.825-6.695.314.732 2.615 6.173 2.825 6.695h-5.65zM57.044 97.582c1.883-.523 3.557-1.988 3.557-4.604 0-5.126-6.068-5.126-8.055-5.126H42.503v.837l.209.105c2.929.523 3.243.523 3.243 2.72v17.262h6.276c2.615 0 9.625 0 9.625-5.754 0-2.825-1.674-4.708-4.812-5.44zm-7.637-6.068c0-1.883 0-2.092 2.407-2.092 3.347 0 4.917 1.256 4.917 3.767 0 3.347-3.243 3.765-5.754 3.765h-1.569l-.001-5.44zm2.72 15.691c-2.72 0-2.72 0-2.72-2.301v-6.381h1.569c2.093 0 7.01 0 7.01 4.498 0 2.719-1.988 4.184-5.859 4.184z\"/><path d=\"M23.359 81.576c-8.16 0-14.855 6.59-14.855 14.855 0 8.159 6.695 14.751 14.855 14.751s14.855-6.592 14.855-14.751c0-8.265-6.695-14.855-14.855-14.855zm-7.95 7.218v-.523c0-1.674.627-3.034 1.569-3.243 1.256-.314 2.825 1.045 4.499 3.975l1.569 2.616c-.419.104-.837.418-1.151.837l-5.021 8.683c-.732 1.256-1.151 2.406-1.465 3.451v-.104c-.105-2.302-.105-6.904 0-15.692zm5.335 18.308l-.418.312c-1.464.732-3.034.838-3.662.211-.941-.941-.418-3.035 1.151-5.965l1.569-2.615c.314.314.732.523 1.36.523h9.938c1.464 0 2.72-.104 3.661-.418v.105c-1.988 1.151-5.858 3.452-13.599 7.847zm9.938-8.579h-3.034c.104-.42.104-.941-.209-1.465l-5.021-8.579c-.732-1.255-1.465-2.301-2.197-3.033h.104c1.988 1.046 5.963 3.347 13.6 7.846l.418.209c1.465.837 2.301 2.092 2.092 3.034-.418 1.256-2.406 1.988-5.753 1.988zM34.657 109.299c-.105 0-.314-.105-.523-.105s-.419 0-.419.209.314.314.732.523a.576.576 0 0 1 .314.523c0 .312-.21.627-.733.627-.314 0-.522 0-.627-.105v-.312c.105.104.313.209.627.209.209 0 .418-.105.418-.314s-.209-.312-.418-.418c-.314-.209-.627-.314-.627-.627 0-.314.313-.523.732-.523h.523v.313h.001zM35.18 108.984h.314v.523h.104c.104-.314.209-.523.627-.523.314 0 .418.314.418.523h.105c0-.209.209-.523.628-.523.313 0 .418.209.418.523v1.568h-.314v-1.359c0-.209 0-.523-.209-.523-.418 0-.628.627-.628.941v.941h-.314v-1.359c0-.209 0-.523-.208-.523-.419 0-.523.627-.523.941v.941h-.418v-2.091z\" fill=\"#808183\"/></g></svg>\n);\n\nexport default IconBlackRock;\n","import React from \"react\";\nconst IconAkuna = () => (\n  <svg\n    version=\"1.0\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20px\"\n    height=\"20px\"\n    viewBox=\"0 0 225.000000 225.000000\"\n    preserveAspectRatio=\"xMidYMid meet\"\n  >\n    <g\n      transform=\"translate(0.000000,225.000000) scale(0.100000,-0.100000)\"\n      fill=\"#000000\"\n      stroke=\"none\"\n    ></g>\n  </svg>\n);\n\nexport default IconAkuna;\n","\nimport React from \"react\";\nconst IconSalesforce = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"480px\" height=\"480px\"><path fill=\"#039be5\" d=\"M36.5,12c-1.326,0-2.59,0.256-3.758,0.705C31.321,10.48,28.836,9,26,9c-2.107,0-4.018,0.821-5.447,2.152C18.815,9.221,16.303,8,13.5,8C8.253,8,4,12.253,4,17.5c0,0.792,0.108,1.558,0.29,2.293C2.291,21.349,1,23.771,1,26.5C1,31.194,4.806,35,9.5,35c0.413,0,0.816-0.039,1.214-0.096C12.027,37.903,15.017,40,18.5,40c3.162,0,5.916-1.731,7.38-4.293C26.556,35.893,27.265,36,28,36c2.62,0,4.938-1.265,6.398-3.211C35.077,32.927,35.78,33,36.5,33C42.299,33,47,28.299,47,22.5C47,16.701,42.299,12,36.5,12z\"/><path fill=\"#fff\" d=\"M15.823 25c.045 0 .076-.037.076-.083C15.899 24.963 15.867 25 15.823 25L15.823 25zM21.503 23.934c.024 0 .047.008.055.013-.008-.005-.03-.013-.053-.013C21.504 23.933 21.503 23.934 21.503 23.934zM7.138 23.93c.023 0 .045.008.058.016-.013-.007-.034-.017-.056-.017C7.139 23.929 7.138 23.93 7.138 23.93zM24.126 21.909c-.016.039-.046.045-.072.043.004.001.004.003.009.003C24.086 21.954 24.112 21.944 24.126 21.909zM15.823 19c.045 0 .076.037.076.082C15.899 19.037 15.867 19 15.823 19L15.823 19zM21.359 22.185L21.359 22.185c0 .408.211.662.506.835C21.569 22.847 21.359 22.594 21.359 22.185zM38.126 24.729c.025.061-.032.087-.032.087S38.151 24.79 38.126 24.729zM8.558 21L8.558 21c.253 0 .503.034.733.093C9.061 21.034 8.811 21 8.558 21zM9.764 21.909c-.016.039-.046.045-.072.043.004.001.004.003.009.003C9.725 21.954 9.75 21.944 9.764 21.909zM35.195 24.164c.065.106.142.203.229.293s.185.169.294.237c-.109-.068-.207-.147-.294-.237C35.337 24.368 35.261 24.27 35.195 24.164zM37.83 21.797c-.012 0-.026-.002-.026-.002s.01.004.024.004C37.828 21.799 37.829 21.797 37.83 21.797zM37.832 24.189c0 0 .017-.003.034-.004-.001 0-.001-.001-.002-.001C37.846 24.184 37.832 24.189 37.832 24.189z\"/><path fill=\"#fff\" d=\"M6.885 24.462c-.029.07.01.084.02.096.087.058.174.1.262.146C7.636 24.933 8.08 25 8.543 25c.944 0 1.53-.462 1.53-1.207v-.014c0-.689-.662-.939-1.282-1.12L8.71 22.635c-.468-.14-.871-.261-.871-.545v-.014c0-.243.236-.422.602-.422.406 0 .888.125 1.199.283 0 0 .092.054.125-.027.018-.044.175-.434.192-.476.018-.045-.014-.08-.046-.098C9.555 21.136 9.065 21 8.558 21l-.094.001c-.864 0-1.467.481-1.467 1.17v.014c0 .726.665.962 1.289 1.126l.1.029c.454.128.846.239.846.533v.015c0 .269-.255.47-.665.47-.16 0-.667-.002-1.216-.322C7.285 24 7.247 23.975 7.196 23.946c-.027-.016-.095-.042-.124.039L6.885 24.462zM21.247 24.462c-.029.07.01.084.02.096.087.058.174.1.262.146C21.998 24.933 22.442 25 22.905 25c.944 0 1.53-.462 1.53-1.207v-.014c0-.689-.662-.939-1.282-1.12l-.081-.024c-.468-.14-.871-.261-.871-.545v-.014c0-.243.236-.422.602-.422.406 0 .888.125 1.199.283 0 0 .092.054.125-.027.018-.044.175-.434.192-.476.018-.045-.014-.08-.046-.098C23.917 21.136 23.427 21 22.92 21l-.094.001c-.864 0-1.467.481-1.467 1.17v.014c0 .726.666.962 1.289 1.126l.1.029c.454.128.846.239.846.533v.015c0 .269-.255.47-.665.47-.16 0-.667-.002-1.216-.322-.066-.036-.105-.06-.155-.09-.017-.01-.097-.039-.124.039L21.247 24.462zM31.465 22.219c-.077-.243-.198-.457-.358-.635-.16-.179-.364-.322-.605-.426C30.261 21.053 29.977 21 29.658 21c-.32 0-.604.053-.845.157s-.444.248-.604.427c-.161.178-.281.392-.358.634-.077.241-.116.505-.116.785s.039.544.116.785c.077.242.197.456.358.635.16.179.364.322.605.423S29.338 25 29.658 25c.319 0 .602-.051.844-.153.241-.102.444-.245.605-.423.16-.178.281-.392.358-.635.077-.241.116-.505.116-.785C31.581 22.724 31.542 22.46 31.465 22.219M30.677 23.004c0 .423-.085.758-.253.993-.166.233-.417.347-.767.347s-.6-.114-.763-.347c-.166-.236-.249-.57-.249-.993s.084-.756.249-.99c.164-.231.414-.343.764-.343s.6.112.767.343C30.592 22.247 30.677 22.581 30.677 23.004M37.933 24.233c-.026-.071-.101-.044-.101-.044-.114.041-.236.078-.366.097-.131.019-.276.029-.431.029-.381 0-.684-.105-.901-.313-.217-.208-.339-.544-.338-.999.001-.413.109-.724.302-.962.192-.236.485-.357.874-.357.325 0 .573.035.832.11 0 0 .062.025.091-.05.07-.178.12-.304.194-.499.021-.056-.03-.079-.049-.086-.102-.037-.343-.098-.525-.124C37.345 21.013 37.145 21 36.924 21c-.331 0-.625.053-.878.157-.252.103-.465.247-.635.426-.169.179-.297.392-.383.634-.086.241-.128.506-.128.787 0 .606.176 1.095.524 1.453C35.773 24.818 36.296 25 36.979 25c.404 0 .817-.076 1.116-.184 0 0 .057-.026.032-.087L37.933 24.233zM41.963 22.081c-.067-.235-.233-.471-.341-.579-.172-.172-.34-.292-.506-.358C40.898 21.057 40.638 21 40.352 21c-.333 0-.635.052-.88.159-.245.107-.452.253-.614.435-.162.181-.283.397-.361.642-.078.243-.117.509-.117.789 0 .285.041.551.121.79.081.241.211.453.386.629.176.177.401.315.671.412.268.096.594.146.968.145.77-.002 1.176-.161 1.343-.247.03-.016.057-.042.023-.119l-.175-.453c-.026-.067-.1-.043-.1-.043-.191.066-.462.184-1.095.183-.414-.001-.72-.113-.912-.291-.197-.181-.294-.447-.31-.822l2.666.002c0 0 .07-.001.078-.065C42.045 23.119 42.134 22.637 41.963 22.081M39.311 22.597c.038-.235.107-.431.216-.583.163-.231.412-.359.762-.359.35 0 .581.128.747.359.11.153.158.356.177.584L39.311 22.597zM20.453 22.081c-.067-.235-.233-.471-.341-.579-.172-.172-.339-.292-.506-.358C19.388 21.057 19.128 21 18.843 21c-.333 0-.635.052-.881.159-.245.107-.452.253-.614.435-.162.181-.283.397-.361.642-.078.243-.117.509-.117.789 0 .285.041.551.121.79.081.241.211.453.386.629.176.177.401.315.671.412.268.096.594.146.968.145.77-.002 1.176-.161 1.343-.247.03-.016.057-.042.023-.119l-.175-.453c-.026-.067-.1-.043-.1-.043-.191.066-.462.184-1.095.183-.413-.001-.72-.113-.912-.291-.197-.181-.294-.447-.31-.822l2.666.002c0 0 .07-.001.078-.065C20.536 23.119 20.624 22.637 20.453 22.081M17.802 22.597c.038-.235.107-.431.215-.583.164-.231.412-.359.763-.359.35 0 .581.128.748.359.11.153.158.356.176.584L17.802 22.597zM12.93 22.482c-.108-.007-.248-.011-.416-.011-.229 0-.45.026-.657.078-.208.052-.395.132-.556.239-.162.108-.292.245-.387.408s-.143.355-.143.569c0 .219.041.409.122.564.081.156.198.286.347.387.148.1.331.174.543.218C11.994 24.977 12.231 25 12.491 25c.274 0 .546-.021.81-.063.262-.041.582-.101.671-.121.089-.019.187-.044.187-.044.066-.016.061-.081.061-.081l-.001-2.259c0-.496-.143-.863-.423-1.091C13.515 21.115 13.102 21 12.57 21c-.2 0-.521.025-.715.061 0 0-.582.105-.821.279 0 0-.053.03-.024.098l.189.47c.024.061.088.04.088.04s.02-.007.044-.021c.512-.258 1.161-.251 1.161-.251.288 0 .51.054.659.16.145.104.219.259.219.589v.105C13.141 22.499 12.93 22.482 12.93 22.482M11.869 24.218c-.105-.077-.119-.096-.153-.147-.053-.076-.08-.184-.08-.321 0-.217.078-.373.238-.478-.001 0 .23-.185.773-.179.382.004.724.057.724.057v1.123c0 0-.339.067-.72.088C12.109 24.392 11.867 24.217 11.869 24.218M34.76 21.169c.02-.058-.022-.085-.04-.092-.045-.016-.272-.062-.447-.073-.335-.019-.521.034-.688.106-.166.071-.349.187-.45.318l-.001-.311c0-.043-.032-.077-.076-.077h-.684c-.045 0-.076.034-.076.077v3.806c0 .043.036.077.081.077h.7c.045 0 .08-.034.08-.077v-1.901c0-.256.03-.51.089-.67.057-.158.136-.285.233-.375.097-.091.208-.154.33-.19.124-.036.261-.049.357-.049.14 0 .293.035.293.035.052.005.08-.025.098-.069C34.606 21.588 34.736 21.238 34.76 21.169\"/><path fill=\"#fff\" d=\"M28.203 19.106c-.085-.026-.162-.044-.264-.062-.103-.019-.224-.028-.362-.028-.482 0-.862.137-1.129.406-.265.267-.446.674-.536 1.209l-.05.366h-.605c0 0-.074-.003-.089.078l-.099.554c-.007.053.016.086.087.086h.59l-.598 3.337c-.047.268-.1.489-.16.657-.058.166-.116.289-.186.379-.068.087-.133.151-.244.189-.092.03-.198.045-.314.045-.064 0-.15-.011-.214-.024-.064-.012-.097-.026-.144-.046 0 0-.069-.026-.097.043-.022.057-.178.489-.197.542-.019.053.007.094.041.106.078.028.137.046.243.071.149.035.274.037.391.037.245 0 .469-.034.654-.101.187-.068.349-.185.493-.343.155-.172.253-.352.346-.597.093-.243.171-.544.235-.896l.6-3.399h.878c0 0 .074.003.089-.078l.099-.554c.007-.053-.016-.086-.087-.086h-.853c.004-.019.06-.505.158-.787.042-.121.12-.218.187-.285.065-.066.141-.112.223-.139.085-.027.181-.041.286-.041.08 0 .159.009.219.022.082.018.115.027.137.033.087.027.098.001.116-.041l.203-.56C28.273 19.139 28.222 19.114 28.203 19.106M15.899 24.917c0 .046-.032.083-.076.083h-.707c-.045 0-.076-.037-.076-.083v-5.834c0-.046.032-.082.076-.082h.707c.045 0 .076.037.076.082V24.917z\"/></svg>\n);\n\nexport default IconSalesforce;\n","\nimport React from \"react\";\nconst IconCitadel = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"2500\" height=\"2500\" viewBox=\"0 0 192.756 192.756\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" fill=\"#fff\" d=\"M0 0h192.756v192.756H0V0z\"/><path fill=\"#6d6e70\" d=\"M189.6 74.501h-48.635v-2.897H189.6v2.897zM53.513 74.5H4.246v-2.895h49.267V74.5z\"/><path d=\"M103.547 40.846l.551-2.153c19.057 3.044 34.621 17.964 37.973 37.43l-2.279.399h-80.13L96.9 76.09l42.893.326c-3.193-18.548-18.064-32.75-36.246-35.57zm-14.393-2.055l.54 2.151c-17.939 3.049-32.641 17.25-35.675 35.58h-1.002l-1.285-.222c3.16-19.279 18.582-34.242 37.422-37.509z\" fillRule=\"evenodd\" clipRule=\"evenodd\" fill=\"#6d6e70\"/><path d=\"M137.416 76.262c-1.525-8.511-5.783-16.181-11.787-22.043-6.002-5.861-13.75-9.915-22.26-11.199l.121-.798c8.68 1.31 16.58 5.444 22.701 11.419 6.119 5.977 10.461 13.798 12.018 22.479l-.793.142zM89.713 43.18c-8.429 1.445-16.017 5.541-21.858 11.382-5.842 5.842-9.937 13.43-11.382 21.859l-.795-.136c1.474-8.599 5.65-16.338 11.606-22.294 5.956-5.956 13.694-10.132 22.294-11.606l.135.795z\" fill=\"#6d6e70\"/><path d=\"M90.162 44.878c-8.066 1.371-15.336 5.292-20.934 10.89-5.597 5.597-9.518 12.868-10.889 20.935l-1.229-.205c1.416-8.333 5.462-15.839 11.235-21.612s13.278-9.82 21.611-11.235l.206 1.227zM135.084 76.703c-1.371-8.067-5.291-15.338-10.889-20.935-5.598-5.598-12.867-9.519-20.934-10.89l.205-1.228c8.332 1.415 15.838 5.462 21.611 11.235 5.771 5.773 9.818 13.279 11.234 21.612l-1.227.206z\" fill=\"#6d6e70\"/><path d=\"M128.441 76.708a33.606 33.606 0 0 0-9.209-17.574c-4.643-4.669-10.623-7.913-17.232-9.026l.221-1.324c6.893 1.161 13.127 4.541 17.963 9.405a34.96 34.96 0 0 1 9.576 18.278l-1.319.241zM91.553 50.108c-6.525 1.109-12.426 4.337-17.032 8.968a34.198 34.198 0 0 0-9.282 17.506l-1.319-.257a35.544 35.544 0 0 1 9.651-18.195c4.798-4.824 10.953-8.188 17.762-9.346l.22 1.324z\" fill=\"#6d6e70\"/><path d=\"M123.285 76.927c-.941-5.702-3.711-10.778-7.668-14.643a26.934 26.934 0 0 0-14.896-7.392l.193-1.33a28.28 28.28 0 0 1 15.641 7.76c4.156 4.061 7.064 9.396 8.055 15.389l-1.325.216zM92.846 54.892c-5.672.841-10.818 3.521-14.781 7.41-3.957 3.882-6.733 8.967-7.677 14.627l-1.325-.221c.991-5.946 3.907-11.288 8.061-15.363 4.162-4.084 9.568-6.9 15.527-7.783l.195 1.33z\" fill=\"#6d6e70\"/><path d=\"M126.875 76.506c-1.076-6.463-4.219-12.267-8.707-16.692-4.484-4.42-10.311-7.466-16.764-8.421l.055-.376c6.535.967 12.436 4.051 16.975 8.526 4.545 4.48 7.727 10.357 8.816 16.9l-.375.063zM92.074 51.393c-6.392.955-12.219 4.03-16.717 8.465-4.504 4.441-7.678 10.246-8.755 16.648l-.374-.062c1.09-6.483 4.303-12.36 8.863-16.855 4.554-4.49 10.454-7.604 16.928-8.571l.055.375z\" fill=\"#6d6e70\"/><path d=\"M121.326 76.235c-1.076-5.087-3.738-9.567-7.412-12.967a25.376 25.376 0 0 0-13.633-6.5l.107-.753a26.157 26.157 0 0 1 14.043 6.694c3.785 3.502 6.527 8.122 7.639 13.368l-.744.158zM93.102 56.768c-5.171.739-9.925 3.131-13.64 6.621-3.701 3.476-6.372 8.04-7.402 13.141l-.747-.148c1.062-5.26 3.815-9.965 7.628-13.546 3.827-3.595 8.724-6.06 14.054-6.821l.107.753z\" fill=\"#6d6e70\"/><path fill=\"#6d6e70\" d=\"M189.6 77.757H4.216v-2.472H189.6v2.472zM120.674 73.343H73.267v-2.471h47.407v2.471zM189.6 118.521H4.246v-2.89H189.6v2.89zM189.6 138.906H4.246v-2.892H189.6v2.892z\"/><path d=\"M96.375 119.523a2.531 2.531 0 0 0-.267-.014c-.545 0-1.146.121-1.689.303a4.786 4.786 0 0 0-1.328.785c-.423.361-.784.723-1.026 1.264-.241.424-.302.967-.302 1.57 0 .662.182 1.146.422 1.629.243.422.725.846 1.146 1.145.423.303.965.605 1.631.906l1.206.543c.07.027.14.055.21.086v-2.197c-.225-.105-.451-.211-.691-.303-.363-.18-.786-.422-1.147-.662-.483-.303-.785-.604-.967-.965-.241-.361-.421-.785-.421-1.268 0-.484.18-.965.421-1.328a3.992 3.992 0 0 1 1.087-.904 5.66 5.66 0 0 1 1.718-.176l-.003-.414zm.002 14.489a3.33 3.33 0 0 1-.814.098c-.663 0-1.267-.119-1.689-.361a3.478 3.478 0 0 1-1.146-1.146c-.241-.422-.42-1.025-.543-1.75v-.24c0-.062 0-.121-.059-.303 0-.059 0-.119-.061-.119 0-.121-.06-.121-.121-.121-.182 0-.302.182-.422.48v2.596c.121.24.182.361.302.424.483.24.965.541 1.627.662.604.182 1.208.24 1.812.24.381 0 .755-.031 1.114-.094v-.366zM5.31 131.576v-9.956c0-.361-.123-.723-.243-.965-.18-.24-.481-.361-.904-.361-.12 0-.364.061-.604.061-.241.061-.422.119-.483.119-.18 0-.241-.059-.241-.119 0-.121.062-.303.303-.303.12-.059.422-.121.724-.121.965-.24 2.534-.422 4.464-.422h1.689c.542.121.964.121 1.507.24.422.062.965.182 1.328.363a3.453 3.453 0 0 1 1.569 1.146c.361.482.602 1.086.602 1.75 0 .604-.12 1.084-.422 1.51-.302.42-.663.844-1.206 1.023-.483.303-1.026.543-1.569.604.724.182 1.387.361 1.991.664.604.363 1.147.844 1.508 1.449.363.48.604 1.143.604 1.93 0 .604-.182 1.146-.484 1.689-.302.604-.724 1.025-1.267 1.387a6.635 6.635 0 0 1-1.628.725c-.483.061-1.267.119-1.991.119-.663 0-1.569 0-2.775-.059-1.267-.061-2.111-.061-2.775-.061-.181 0-.422 0-.665.061-.299.059-.602.059-.783.059-.241 0-.361-.059-.361-.301 0-.061 0-.121.06-.24h.483c.481 0 .845-.062 1.026-.121.24-.182.361-.303.361-.604.059-.242.182-.664.182-1.207v-.059zm1.748-9.892V125.786a.73.73 0 0 0 .302.301H9.29c.604 0 1.147 0 1.569-.18.423-.061.904-.242 1.206-.666.604-.48.785-1.266.785-2.111 0-1.146-.302-1.93-1.026-2.473-.725-.543-1.628-.725-2.775-.725-.965 0-1.507.121-1.81.424-.119.119-.181.603-.181 1.328zm0 5.789v3.742c0 .543 0 .965.062 1.326.12.363.302.666.542.906.361.24 1.085.301 2.232.301.604 0 1.206-.061 1.628-.18.422-.121.906-.361 1.267-.725.364-.303.666-.725.906-1.207.121-.422.303-.965.303-1.387 0-.666-.182-1.268-.484-1.871-.302-.543-.725-.906-1.329-1.268-.422-.301-.965-.422-1.566-.482-.484-.121-1.147-.18-2.053-.18h-.784c-.361 0-.483.059-.663.24-.061.06-.061.363-.061.785zm22.927 2.173v-6.215c0-1.207-.062-1.93-.302-2.354a.525.525 0 0 0-.483-.359 2.73 2.73 0 0 0-.845-.121c-.422 0-.602-.123-.602-.242 0-.242.121-.303.423-.303h3.98c.241 0 .423.061.423.303 0 .119-.241.242-.725.242-.422 0-.722.121-.844.301a1.802 1.802 0 0 0-.302.422c0 .24 0 .604-.059 1.207V131.154c-.062.301-.182.725-.363 1.025-.18.361-.481.725-.904 1.027-.905.844-2.413 1.264-4.343 1.264-.484 0-.965-.059-1.449-.119-.543 0-1.085-.18-1.508-.301-.542-.182-.965-.363-1.267-.604a2.878 2.878 0 0 1-.904-1.025c-.181-.424-.363-.846-.363-1.207-.061-.363-.061-.965-.061-1.568v-7.664c0-.361-.059-.662-.059-.904-.121-.119-.241-.301-.483-.359-.121-.062-.481-.121-.965-.121-.361 0-.602-.123-.602-.242 0-.242.179-.303.422-.303h5.127c.302 0 .422.061.422.303 0 .119-.241.242-.604.242-.422 0-.783.059-1.024.121-.181.059-.302.24-.363.359-.059.242-.059.543-.059.904V129.828c0 .18 0 .48.059.844 0 .361.061.783.12 1.086.062.24.182.48.243.725.361.543.784.902 1.569 1.086.663.24 1.385.422 2.171.422.724 0 1.387-.182 2.05-.303.666-.24 1.208-.543 1.63-.965.361-.422.602-.844.663-1.268.119-.482.181-1.084.181-1.809zm8.385-1.992l-1.206-.543c-.665-.301-1.146-.604-1.63-.906-.422-.299-.904-.723-1.085-1.145-.302-.482-.483-.967-.483-1.629 0-.604.12-1.146.302-1.57.243-.541.604-.902 1.085-1.264.364-.303.786-.604 1.329-.785a4.853 4.853 0 0 1 1.628-.303c.422 0 .967.121 1.569.182.604.059 1.026.24 1.387.361.241.061.302.182.363.242 0 .121.12.303.12.604v.604c0 .119.06.359.06.541v.605c0 .18-.06.24-.241.24-.062 0-.121 0-.241-.061 0-.121-.062-.18-.062-.242-.059-.119-.059-.24-.059-.24-.301-.785-.604-1.447-1.026-1.871-.483-.422-1.085-.543-1.871-.543-.543 0-.965.062-1.446.182a3.996 3.996 0 0 0-1.088.904c-.241.363-.361.844-.361 1.328 0 .482.121.906.361 1.268.243.361.542.662.967.965.361.24.784.482 1.206.662.422.182.845.424 1.329.605 1.085.482 1.869.965 2.291 1.447.302.361.604.723.845 1.268.12.482.302.965.302 1.447 0 .604-.182 1.207-.484 1.809-.24.484-.663 1.027-1.085 1.449-.965.785-2.232 1.205-3.681 1.205a5.816 5.816 0 0 1-1.748-.24c-.664-.121-1.206-.422-1.631-.662-.18-.062-.241-.184-.3-.424v-.844-1.752c.059-.299.18-.48.361-.48.061 0 .12 0 .12.121.061 0 .061.061.061.119.121.182.121.24.121.303v.24c.062.725.302 1.328.481 1.75.302.482.665.846 1.146 1.146.423.242 1.026.361 1.689.361.543 0 1.026-.119 1.569-.361s.965-.604 1.267-1.146c.303-.422.422-.965.422-1.568 0-.543-.062-1.086-.302-1.449-.182-.48-.543-.844-.965-1.145-.36-.3-.843-.603-1.386-.785zm7.963 4.104v-9.775c0-.361-.059-.662-.059-.904-.123-.119-.243-.301-.484-.359-.12-.062-.481-.121-.965-.121-.361 0-.604-.123-.604-.242 0-.242.182-.303.423-.303h5.13c.302 0 .422.061.422.303 0 .119-.24.242-.604.242a3.85 3.85 0 0 0-1.026.121c-.179.059-.3.24-.361.359-.061.242-.061.543-.061.904v10.619c.061.242.123.482.182.605.062.178.241.24.361.299.243 0 .544.062.906.062.364 0 .604.119.604.24 0 .242-.121.301-.422.301-.243 0-.666 0-1.267-.059-.543-.061-.965-.061-1.267-.061s-.666 0-1.267.061c-.604.059-1.026.059-1.328.059-.241 0-.423-.059-.423-.301 0-.121.243-.24.604-.24.483 0 .845-.062.965-.121.241-.062.361-.24.484-.363 0-.24.059-.543.059-.904v-.422h-.002zm17.618-.604v-8.627c0-.604-.062-.967-.12-1.268 0-.242-.182-.361-.425-.541-.179-.062-.481-.121-1.023-.121-.363 0-.483-.123-.483-.242 0-.121.12-.303.363-.303H66.242c.302 0 .483.182.483.303 0 .119-.241.242-.604.242-.663 0-1.146.121-1.267.361-.182.24-.241.725-.241 1.508v11.342c0 .301-.062.422-.121.422-.243 0-.363-.121-.663-.482l-9.535-12.188v10.619c0 .602.123.965.302 1.086.121.182.484.303 1.147.303h.483c.059.119.121.119.121.24 0 .242-.121.301-.361.301-.243 0-.604 0-1.026-.059-.423-.061-.845-.061-1.026-.061s-.543 0-.965.061c-.483.059-.845.059-1.085.059-.182 0-.363-.059-.363-.301 0-.121.061-.121.182-.24h.422c.423 0 .724-.062.965-.121a.647.647 0 0 0 .422-.363c0-.24.12-.543.12-.904V121.983c0-.361-.12-.662-.12-.904a.646.646 0 0 0-.422-.359c-.121-.062-.542-.121-.965-.121-.361 0-.604-.123-.604-.242 0-.121.243-.303.604-.303h2.836c.24.061.361.182.542.242.059.121.182.303.423.482l8.025 10.376zm7.359-9.412v3.318c0 .361 0 .604.062.725.121.121.18.242.302.301h.784c1.267 0 2.111 0 2.775-.059.24 0 .422-.182.483-.484.12-.18.182-.604.302-1.086.059-.24.121-.363.302-.363.121 0 .179.062.179.182 0 .484 0 1.146-.059 1.93.059.969.059 1.752.059 2.113 0 .242-.059.363-.179.363-.182 0-.243-.121-.302-.363-.182-.904-.363-1.326-.785-1.447-.664-.123-1.508-.182-2.775-.182-.481 0-.844 0-.965.059-.121.062-.182.303-.182.666v4.041c0 .664.062 1.146.303 1.449.24.303.542.48.844.543.361.059.965.121 1.689.121.783 0 1.388-.062 1.871-.121.423 0 .784-.24 1.147-.543.422-.303.722-.725.963-1.387 0-.062.123-.244.123-.303.059-.182.059-.242.12-.363.059-.059.182-.18.241-.18.121 0 .241.18.241.301 0 .061 0 .301-.12.545l-.361 2.473c0 .061-.062.119-.243.119H67.811c-.241 0-.36-.059-.36-.301 0-.121.24-.24.601-.24.422 0 .786-.062.967-.121.241-.062.361-.303.422-.543 0-.303.059-.666.059-1.268v-9.17c0-.543-.059-.906-.059-1.207-.061-.242-.181-.361-.422-.541-.182-.062-.545-.121-.967-.121-.361 0-.601-.123-.601-.242 0-.242.12-.303.36-.303h10.136c.12 0 .179.061.179.182.123.121.123.363.123.664v1.93c0 .301-.123.424-.182.424-.12 0-.303-.123-.361-.424l-.363-.664c-.179-.422-.361-.662-.604-.844-.12-.242-.419-.361-.842-.543-.483-.121-1.329-.18-2.475-.18-.904 0-1.508.059-1.749.121-.122.059-.302.18-.302.299-.061.181-.061.484-.061.724zm13.938 5.912l-1.208-.543c-.663-.301-1.206-.604-1.628-.906-.482-.299-.906-.723-1.147-1.145-.302-.482-.422-.967-.422-1.629 0-.604.061-1.146.301-1.57.182-.541.604-.902 1.026-1.264a4.794 4.794 0 0 1 1.326-.785c.543-.182 1.147-.303 1.63-.303.481 0 .965.121 1.567.182.604.059 1.026.24 1.448.361a.915.915 0 0 1 .361.242c0 .121.062.303.062.604v.604c0 .119.061.359.061.541v.605c0 .18-.061.24-.182.24s-.182 0-.24-.061c0-.121-.062-.18-.062-.242-.12-.119-.12-.24-.12-.24-.302-.785-.543-1.447-1.026-1.871-.422-.422-1.024-.543-1.869-.543a5.16 5.16 0 0 0-1.387.182c-.422.242-.845.543-1.146.904-.182.363-.363.844-.363 1.328 0 .482.182.906.363 1.268.24.361.543.662.965.965.422.24.845.482 1.206.662.484.182.906.424 1.329.605 1.146.482 1.871.965 2.352 1.447.302.361.543.723.784 1.268.182.482.302.965.302 1.447 0 .604-.12 1.207-.422 1.809-.241.484-.664 1.027-1.145 1.449-.967.785-2.234 1.205-3.622 1.205a6.24 6.24 0 0 1-1.81-.24c-.663-.121-1.206-.422-1.628-.662-.12-.062-.243-.184-.302-.424v-.844-1.752c.059-.299.241-.48.361-.48.123 0 .181 0 .181.121.062 0 .062.061.062.119.059.182.059.24.059.303v.24c.062.725.302 1.328.542 1.75.302.482.666.846 1.088 1.146.481.242 1.085.361 1.749.361.483 0 1.026-.119 1.569-.361.481-.242.965-.604 1.267-1.146.241-.422.423-.965.423-1.568 0-.543-.059-1.086-.302-1.449-.241-.48-.604-.844-.965-1.145s-.907-.603-1.388-.785z\" fillRule=\"evenodd\" clipRule=\"evenodd\" fill=\"#6d6e70\"/><path d=\"M96.377 119.523c.372.033.805.119 1.238.168.602.059 1.086.24 1.447.361.242.061.301.182.363.242 0 .121.059.303.059.604v.604c0 .119.061.359.061.541v.605c0 .18-.061.24-.182.24-.059 0-.182 0-.24-.061 0-.121-.061-.18-.061-.242-.059-.119-.059-.24-.059-.24-.303-.785-.605-1.447-1.086-1.871-.375-.371-.887-.51-1.541-.537v-.414h.001zm0 6.02c.228.105.453.213.695.303 1.086.482 1.811.965 2.291 1.447.303.361.605.723.787 1.268.178.482.301.965.301 1.447 0 .604-.123 1.207-.424 1.809-.24.484-.664 1.027-1.145 1.449a5.427 5.427 0 0 1-2.506 1.111v-.365c.248-.059.495-.146.756-.264.482-.242.965-.604 1.266-1.146.303-.422.422-.965.422-1.568 0-.543-.059-1.086-.301-1.449-.18-.48-.602-.844-.965-1.145a5.046 5.046 0 0 0-1.178-.699v-2.198h.001zm25.311-4.223l.119 1.387c0 .242-.059.303-.24.303-.121 0-.303-.182-.484-.543-.24-.424-.48-.783-.662-1.086-.303-.363-.723-.662-1.146-.906a4.879 4.879 0 0 0-1.99-.422c-.965 0-1.811.242-2.475.604a4.72 4.72 0 0 0-1.748 1.508c-.545.664-.906 1.387-1.146 2.232a8.822 8.822 0 0 0-.363 2.475c0 1.748.543 3.318 1.389 4.584 1.207 1.689 2.594 2.535 4.344 2.535.783 0 1.447-.242 1.932-.543.604-.363.965-.666 1.205-1.025.182-.484.484-.904.725-1.389s.422-.725.543-.725c.119 0 .24.062.24.303l-.121 1.871c0 .24 0 .422-.059.602 0 .061-.061.123-.182.182-.121.119-.303.24-.484.303a9.02 9.02 0 0 1-2.049.662c-.543.182-1.33.24-2.051.24-.967 0-1.934-.24-2.836-.602-.906-.363-1.689-.965-2.354-1.631a8.686 8.686 0 0 1-1.568-2.41c-.484-.906-.604-1.871-.604-2.836 0-1.086.24-2.053.604-3.018a7.953 7.953 0 0 1 1.748-2.291c.664-.666 1.568-1.209 2.537-1.57.963-.363 1.93-.604 2.895-.604.543 0 1.145.121 1.869.182.664.121 1.268.303 1.689.422.301.182.482.242.543.361-.002.123.058.423.18.845zm5.609.422v3.318c0 .361 0 .604.062.725.119.121.182.242.301.301h.783c1.268 0 2.113 0 2.836-.059.182 0 .361-.182.424-.484.119-.18.24-.604.301-1.086.059-.24.121-.363.303-.363.121 0 .18.062.18.182 0 .484 0 1.146-.059 1.93.059.969.059 1.752.059 2.113 0 .242-.059.363-.18.363-.182 0-.244-.121-.303-.363-.182-.904-.363-1.326-.725-1.447-.723-.123-1.568-.182-2.836-.182-.482 0-.844 0-.965.059-.119.062-.182.303-.182.666v4.041c0 .664.062 1.146.303 1.449s.543.48.844.543c.361.059.965.121 1.689.121.846 0 1.389-.062 1.871-.121.424 0 .783-.24 1.207-.543.359-.303.662-.725.965-1.387 0-.062.061-.244.061-.303.059-.182.059-.242.121-.363.119-.059.18-.18.24-.18.121 0 .24.18.24.301 0 .061 0 .301-.119.545l-.361 2.473c0 .061-.062.119-.182.119h-10.377c-.181 0-.361-.059-.361-.301 0-.121.24-.24.602-.24.422 0 .846-.062.967-.121.24-.062.361-.303.42-.543 0-.303.123-.666.123-1.268v-9.17c0-.543-.123-.906-.123-1.207-.059-.242-.18-.361-.42-.541-.121-.062-.545-.121-.967-.121-.361 0-.602-.123-.602-.242 0-.242.18-.303.361-.303H133.933c.121 0 .242.061.242.182.061.121.061.363.061.664v1.93c0 .301-.061.424-.182.424s-.301-.123-.361-.424l-.363-.664c-.119-.422-.361-.662-.604-.844-.121-.242-.42-.361-.783-.543-.543-.121-1.387-.18-2.535-.18-.904 0-1.508.059-1.748.121-.119.059-.301.18-.301.299-.062.181-.062.484-.062.724zm21.297 9.412v-8.627c0-.604-.059-.967-.18-1.268 0-.242-.121-.361-.363-.541a3.853 3.853 0 0 0-1.025-.121c-.361 0-.543-.123-.543-.242 0-.121.182-.303.363-.303H150.887c.303 0 .422.182.422.303 0 .119-.182.242-.604.242-.662 0-1.086.121-1.205.361-.182.24-.24.725-.24 1.508v11.342c0 .301-.062.422-.182.422-.182 0-.361-.121-.664-.482l-9.531-12.188v10.619c0 .602.18.965.299 1.086.182.182.545.303 1.209.303h.482c.059.119.121.119.121.24 0 .242-.121.301-.363.301-.24 0-.604 0-1.025-.059-.482-.061-.846-.061-1.086-.061-.121 0-.482 0-.967.061-.422.059-.783.059-1.025.059-.24 0-.361-.059-.361-.301 0-.121.061-.121.121-.24h.482c.424 0 .725-.062.967-.121a.871.871 0 0 0 .422-.363c0-.24.059-.543.059-.904V121.983c0-.361-.059-.662-.059-.904a.86.86 0 0 0-.422-.359c-.184-.062-.543-.121-.967-.121-.361 0-.604-.123-.604-.242 0-.121.242-.303.604-.303h2.836c.18.061.361.182.482.242.061.121.24.303.484.482l8.022 10.376zm10.318-9.47v10.074c0 .48.061.965.061 1.146.121.24.24.48.48.543.121.059.482.121.967.121.422 0 .604.119.604.24 0 .242-.182.301-.422.301-.303 0-.725 0-1.268-.059-.543-.061-.965-.061-1.205-.061-.305 0-.787 0-1.391.061-.48.059-.965.059-1.268.059-.18 0-.359-.059-.359-.301 0-.121.24-.24.604-.24.422 0 .725-.062.965-.121.24-.062.361-.24.361-.363.061-.24.182-.543.182-.904v-10.92c0-.182-.121-.301-.121-.361-.061-.18-.061-.242-.121-.242-.061-.059-.242-.059-.301-.059h-.303-.24c-.725 0-1.328.059-1.752.121-.359.059-.844.299-1.145.602-.361.24-.664.662-1.025 1.328-.061.059-.123.24-.242.301-.059.18-.182.242-.24.242-.182 0-.242-.182-.242-.303 0-.182.061-.303.121-.543l.904-2.896c0-.18.182-.301.301-.301.062 0 .121.121.121.24 0 .121.123.303.123.303 0 .059.059.121.119.24.18.062.543.121 1.146.121h8.205c.482 0 .844 0 .965-.059.24-.062.303-.244.422-.484.061-.121.121-.182.121-.24.061-.121.182-.121.242-.121.059 0 .121.121.121.18.119.121.119.363.119.666l-.182 2.654c0 .24-.059.361-.301.361-.061 0-.121-.061-.24-.303-.303-.783-.484-1.326-.664-1.508-.182-.24-.484-.48-.725-.48a5.267 5.267 0 0 0-1.084-.121h-1.391c-.361 0-.602.059-.723.059-.119 0-.24.121-.24.242.002.119-.059.421-.059.785zm8.506 10.074v-9.714c0-.359-.121-.662-.121-.844-.059-.182-.182-.301-.422-.422-.182-.059-.543-.121-.965-.121-.363 0-.605-.059-.605-.24s.182-.363.424-.363h6.032c.604 0 1.146.061 1.629.242a4.505 4.505 0 0 1 1.447.604c.363.301.664.662.906 1.084.182.484.361.967.361 1.51 0 .664-.18 1.268-.543 1.689-.303.543-.725.904-1.268 1.205a6.749 6.749 0 0 1-1.869.605c.422.059.602.182.783.422s.424.602.664 1.025l1.871 3.498c.301.604.543 1.088.783 1.27.182.24.543.361.967.361.361 0 .602.119.602.301s-.119.24-.422.24h-2.414c-.121 0-.299-.059-.361-.059-.061-.061-.119-.242-.24-.303a1.22 1.22 0 0 0-.123-.363l-2.229-4.402c-.363-.723-.666-1.207-.725-1.328-.182-.182-.303-.301-.545-.361-.24-.119-.664-.119-1.268-.119-.24 0-.42 0-.543.119-.059.121-.059.424-.059.967V132.603c.059.242.059.482.24.605.062.178.242.24.361.24.244.059.424.121.844.121.424 0 .666.119.666.24 0 .242-.182.301-.482.301-.184 0-.664 0-1.268-.059-.482-.061-.965-.061-1.268-.061-.301 0-.664 0-1.268.061-.543.059-1.023.059-1.326.059-.182 0-.363-.059-.363-.301 0-.121.242-.24.605-.24.422 0 .783-.062.965-.121a.65.65 0 0 0 .422-.363c0-.24.121-.482.121-.904v-.423h.004zm1.75-9.473v4.102c0 .303.24.424.602.424H170.313c.604 0 1.088-.062 1.568-.121.426-.061.846-.303 1.209-.604.725-.543 1.086-1.326 1.086-2.414 0-1.023-.303-1.811-.904-2.412-.605-.541-1.328-.844-2.355-.844-.48 0-.783 0-1.023.059-.182 0-.422.182-.484.244-.059.18-.182.299-.24.541-.002.242-.002.482-.002 1.025zm13.271-.543v3.318c0 .361 0 .604.061.725s.121.242.303.301h.725c1.266 0 2.17 0 2.834-.059.242 0 .363-.182.422-.484.182-.18.24-.604.303-1.086.061-.24.182-.363.301-.363.182 0 .24.062.24.182 0 .484 0 1.146-.059 1.93.059.969.059 1.752.059 2.113 0 .242-.059.363-.24.363-.119 0-.24-.121-.301-.363-.121-.904-.361-1.326-.725-1.447-.664-.123-1.568-.182-2.834-.182-.424 0-.844 0-.967.059-.061.062-.121.303-.121.666v4.041c0 .664.061 1.146.244 1.449.24.303.541.48.844.543.361.059.963.121 1.688.121.844 0 1.449-.062 1.871-.121.482 0 .844-.24 1.207-.543.361-.303.664-.725.965-1.387 0-.062.061-.244.061-.303.061-.182.061-.242.182-.363.059-.059.119-.18.178-.18.184 0 .244.18.244.301 0 .061 0 .301-.061.545l-.361 2.473c0 .061-.121.119-.242.119h-10.317c-.242 0-.424-.059-.424-.301 0-.121.242-.24.605-.24.48 0 .844-.062.965-.121.24-.062.422-.303.48-.543 0-.303.062-.666.062-1.268v-9.17c0-.543-.062-.906-.062-1.207-.059-.242-.24-.361-.48-.541-.121-.062-.484-.121-.965-.121-.363 0-.605-.123-.605-.242 0-.242.182-.303.424-.303h10.074c.182 0 .242.061.242.182.061.121.061.363.061.664v1.93c0 .301-.061.424-.121.424-.182 0-.303-.123-.361-.424l-.422-.664c-.121-.422-.363-.662-.545-.844-.18-.242-.482-.361-.846-.543-.541-.121-1.326-.18-2.533-.18-.904 0-1.508.059-1.688.121-.182.059-.303.18-.303.299-.062.181-.062.484-.062.724zM16.761 109.723l.062-.121c-3.199-1.086-5.672-2.895-7.42-5.371-1.63-2.473-2.534-5.49-2.534-9.047 0-2.414.481-4.707 1.508-6.939a16.876 16.876 0 0 1 4.162-5.731l-.059-.182c-2.232 1.569-3.863 3.56-5.129 5.854-1.206 2.292-1.81 4.826-1.81 7.6 0 3.68 1.026 6.819 2.956 9.292 1.99 2.473 4.765 3.981 8.264 4.645zm9.051-27.271l-.12.243c1.024.663 1.81 1.387 2.593 2.171.725.844 1.449 1.75 1.931 2.835l.242-.182c-.123-1.387-.544-2.534-1.208-3.197-.664-.724-1.81-1.387-3.438-1.87zm-6.276-3.137c2.654 0 5.429.725 8.327 2.292.663.302 1.085.545 1.206.545.363 0 .604-.243.786-.725.24-.423.481-.663.724-.663.481 0 .725.481.725 1.508v.422c.059 1.387.24 2.836.422 4.403.179 1.569.24 2.475.24 2.654 0 .243 0 .425-.061.545-.121.121-.241.18-.542.18-.302 0-.725-.423-1.027-1.147-.481-.964-1.085-1.868-1.566-2.654a14.124 14.124 0 0 0-4.285-3.98c-1.749-.906-3.558-1.449-5.37-1.449-2.534 0-4.705 1.085-6.395 3.317-1.63 2.234-2.534 5.009-2.534 8.447 0 4.044 1.026 7.541 3.197 10.255 2.052 2.717 4.707 4.104 7.784 4.104 1.449 0 2.834-.361 4.223-.906 1.388-.602 2.714-1.326 3.86-2.41.302-.303.844-.787 1.328-1.391.481-.662.904-.904 1.206-.904.182 0 .361 0 .422.182.06.061.06.242.06.424 0 .359-.241.902-.723 1.627-.483.725-1.208 1.449-2.053 2.293-1.446 1.326-3.015 2.412-4.825 3.078-1.81.602-3.801.965-6.033.965-4.224 0-7.543-1.328-10.197-4.043-2.532-2.654-3.86-6.154-3.86-10.499 0-4.644 1.449-8.567 4.283-11.703 2.835-3.198 6.456-4.767 10.678-4.767zm24.011 7.06v17.132c0 1.207.243 2.23.604 2.836.422.785.965 1.207 1.689 1.328.302.18.784.24 1.326.422.906.18 1.449.602 1.449.965 0 .361-.182.604-.361.664-.181.182-.483.24-.906.24-.182 0-.904-.059-2.232-.121a43.701 43.701 0 0 0-3.801-.18c-.904 0-1.93.061-3.077.18-1.146.062-1.93.121-2.232.121-.363 0-.604-.059-.725-.121-.181-.18-.302-.422-.302-.662 0-.422.422-.846 1.329-1.146.361-.182.662-.361.844-.424.481-.24.845-.721 1.085-1.387.241-.783.363-1.568.363-2.594V86.797c0-1.631-.062-2.716-.243-3.199-.121-.602-.482-1.024-.906-1.326-.361-.363-1.206-.604-2.171-.665-1.085-.18-1.569-.42-1.569-.904a.78.78 0 0 1 .243-.604c.241-.059.481-.121.784-.121h.604c1.326.121 2.473.241 3.559.241 2.534 0 4.888-.12 7.059-.241h.422c.241 0 .483 0 .663.121.121.12.243.243.243.542 0 .302-.422.604-1.146.786-.666.241-1.268.481-1.508.845-.302.241-.665.725-.845 1.326a15.146 15.146 0 0 0-.242 2.777zm-5.971-5.129l-.122.182c.785.361 1.328.845 1.691 1.508.302.663.481 1.569.481 2.716v16.712c0 1.689-.121 3.016-.423 3.738-.24.787-.724 1.449-1.387 1.992l.061.18c.904-.422 1.569-1.023 1.931-1.748.302-.725.481-2.232.481-4.283V85.891c0-1.328-.18-2.414-.602-3.138-.422-.663-1.146-1.146-2.111-1.507zm33.905.181v.241c1.026 0 1.871.241 2.596.604.663.302 1.326.904 1.929 1.81h.062c0-1.026-.243-1.63-.666-2.053-.481-.422-1.146-.602-2.112-.602h-1.809zm-10.315.18l-.182.182c.302.12.542.363.663.663.182.243.243.483.243.724v20.332c0 1.025-.123 2.053-.363 2.715-.241.725-.604 1.209-1.026 1.387l.122.182c.723-.182 1.206-.662 1.446-1.328.364-.725.484-1.93.484-3.438V85.771c0-1.51-.12-2.595-.302-3.077-.241-.542-.604-.905-1.085-1.087zm-10.439 3.018h.182a4.371 4.371 0 0 1 1.206-1.871c.604-.481 1.387-.904 2.534-1.206v-.12h-.241c-.363-.061-.663-.061-.724-.061-.966 0-1.811.241-2.232.724-.483.483-.725 1.328-.725 2.293v.241zm7.301-4.344h9.833a65.17 65.17 0 0 0 4.646-.182c1.689-.121 2.654-.121 2.895-.121.724 0 1.146.062 1.328.121.18.182.241.542.302 1.026l.362 4.162v.363c0 .422 0 .725-.062.725-.12.059-.3.179-.543.179-.481 0-.904-.361-1.024-1.024a9.273 9.273 0 0 0-.422-1.026c-.363-.845-.906-1.449-1.751-1.75-.724-.302-2.05-.481-3.859-.481h-.725c-1.51 0-2.414.18-2.654.302-.303.241-.483.845-.483 1.749v19.006c0 1.205.181 2.232.483 2.895.361.666.904 1.146 1.748 1.449.241.119.666.24 1.208.361 1.024.119 1.508.482 1.508.965 0 .363-.12.604-.241.725-.182.182-.422.24-.844.24-.182 0-.906-.059-2.235-.121a26.962 26.962 0 0 0-3.678-.24c-1.088 0-2.414.061-3.862.24-1.569.062-2.473.121-2.834.121-.363 0-.725-.059-.906-.121-.121-.18-.302-.422-.302-.783 0-.363.483-.785 1.329-.965.542-.182.965-.303 1.206-.422.845-.303 1.508-.783 1.81-1.449.423-.662.663-1.689.663-2.715V84.141c0-.784-.179-1.387-.481-1.567-.241-.243-1.085-.302-2.293-.302-2.051 0-3.559.18-4.464.481-.904.302-1.449.906-1.872 1.75-.24.481-.481 1.206-.663 1.93-.241.906-.663 1.448-1.147 1.448-.24 0-.422-.12-.481-.302-.121-.062-.182-.302-.182-.604 0 0 .061-.302.061-.602.362-1.569.482-3.2.663-4.769 0-.723.182-1.265.241-1.388.182-.179.422-.241.845-.241.24 0 1.206 0 2.716.121 1.568.123 2.955.185 4.161.185zm39.941 27.571l.059.061c.604-.303 1.025-.725 1.268-1.146.24-.422.359-.965.359-1.568 0-.361-.059-.785-.119-1.268-.121-.543-.24-1.023-.361-1.326l-7.06-16.651a1.15 1.15 0 0 0-.241-.483c-.061-.062-.182-.062-.241-.062-.182 0-.363.062-.422.123-.062.121-.182.241-.182.422 0 .18.182.481.361.845.061.18.12.241.12.3l6.757 16.049c.182.422.363.906.422 1.326.062.424.182.846.182 1.266 0 .363-.119.906-.182 1.209-.177.301-.421.66-.72.903zm-16.533-3.799c-.663 1.508-1.147 2.592-1.569 3.135a5.954 5.954 0 0 1-1.508 1.508l.121.123c1.026-.061 1.81-.484 2.294-1.146.483-.725.724-1.811.724-3.199v-.301l-.062-.12zm9.713-15.929a5.066 5.066 0 0 0-.363-.604c-.059-.059-.241-.179-.3-.179-.121 0-.243.12-.363.179-.059.062-.121.243-.241.423l-3.197 7.481c-.061.241-.182.422-.182.604-.059.121-.059.303-.059.481 0 .243.059.423.3.483.242.062.785.062 1.568.062H93.2c.422 0 .724 0 .965-.062.242-.061.363-.24.363-.422 0-.062 0-.24-.121-.484-.061-.24-.181-.48-.242-.724l-3.016-7.238zm1.81-8.084l10.74 25.097c.361.846.783 1.508 1.086 1.811.422.303.844.604 1.387.725.182.119.422.24.783.422.543.24.906.664.906 1.268 0 .24-.121.48-.182.543-.121.059-.361.059-.664.059-.24 0-1.086-.059-2.293-.121a36.819 36.819 0 0 0-3.316-.18c-1.811 0-3.561.061-5.25.301h-.481c-.182 0-.364-.059-.422-.24-.182-.121-.241-.303-.241-.664 0-.24.543-.604 1.567-1.146.964-.48 1.449-1.205 1.449-2.174 0-.299 0-.602-.059-.902-.123-.363-.184-.664-.363-1.027l-1.147-2.895c-.302-.725-.663-1.205-.965-1.449-.361-.24-1.085-.422-2.173-.422H87.59c-1.206 0-2.05.182-2.414.422-.361.244-.602.725-.904 1.449l-1.146 3.258c-.059.301-.241.664-.241.783-.062.242-.062.484-.062.783 0 .545.243 1.15.663 1.449.483.422 1.208.725 2.234.965h.121c1.024.303 1.507.666 1.507 1.209 0 .24-.059.361-.179.48a2.218 2.218 0 0 1-.724.121c-.062 0-.845-.059-2.053-.121a33.034 33.034 0 0 0-3.379-.18c-.845 0-1.628.061-2.412.18-.786.062-1.208.121-1.269.121-.3 0-.543-.059-.663-.121-.18-.119-.302-.24-.302-.48 0-.424.363-.787.965-1.027.363-.182.604-.301.906-.422a6.044 6.044 0 0 0 1.146-1.268c.302-.543.784-1.508 1.388-2.895L91.45 79.86v-.061c.182-.361.422-.482.663-.482.182 0 .302.059.422.121.183.18.303.359.424.602zm18.582 1.81v.179c.725.302 1.207.725 1.57 1.39.299.543.48 1.447.48 2.654v16.833c0 1.387-.061 2.473-.422 3.195a3.992 3.992 0 0 1-1.328 1.992v.18c.906-.422 1.568-1.023 1.932-1.748.301-.725.482-2.232.482-4.283V86.314c0-1.329-.182-2.414-.602-3.077-.483-.724-1.145-1.147-2.112-1.387zm14.238-.604v.302c2.594.904 4.705 2.593 6.215 5.068 1.568 2.473 2.412 5.429 2.412 8.747 0 2.476-.422 4.587-1.328 6.577-.902 1.869-2.232 3.439-3.92 4.705l.119.121c2.174-1.205 3.801-2.775 4.887-4.766 1.088-1.871 1.568-4.283 1.568-6.999 0-3.438-.902-6.395-2.713-8.929-1.808-2.474-4.285-4.163-7.24-4.826zm-13.152 22.744V86.555c0-1.327-.182-2.293-.422-2.896-.24-.604-.846-1.085-1.508-1.387-.422-.243-.965-.422-1.811-.483-.785-.182-1.207-.422-1.207-.904 0-.243.061-.542.301-.665.242-.179.484-.241.906-.241.121 0 .664 0 1.689.121.904.12 1.811.182 2.715.182 1.205 0 2.836-.062 4.766-.182 1.93-.121 3.379-.121 3.982-.121 5.549 0 9.713 1.147 12.609 3.44 2.955 2.353 4.344 5.731 4.344 10.014 0 4.767-1.508 8.687-4.768 11.886-3.195 3.137-7.299 4.645-12.186 4.645-.543 0-1.387-.059-2.596-.121-1.268-.119-2.232-.18-2.895-.18-2.352 0-4.525.061-6.336.301h-.301c-.24 0-.543-.059-.664-.121-.182-.18-.24-.361-.24-.602 0-.422.361-.785 1.205-1.207.363-.121.605-.242.725-.361.604-.303 1.027-.725 1.268-1.328.242-.544.424-1.39.424-2.355zm4.887-2.172c0 2.654.422 4.283 1.086 5.07.662.721 1.932 1.145 3.742 1.145 3.316 0 5.971-1.145 8.021-3.5 2.053-2.291 3.078-5.309 3.078-9.171 0-3.98-1.088-7.178-3.318-9.711-2.113-2.475-5.008-3.742-8.568-3.742-1.568 0-2.592.182-3.195.665-.484.423-.846 1.567-.846 3.136v16.108zm26.425-20.391a3.665 3.665 0 0 1 1.568 1.628c.361.786.482 1.69.482 2.716v16.592c0 1.689-.062 2.955-.361 3.678a4.558 4.558 0 0 1-1.449 2.053c.906-.182 1.568-.725 1.992-1.568.361-.787.48-2.295.48-4.344v-16.05c0-1.387-.119-2.473-.543-3.197-.42-.663-1.143-1.267-2.169-1.508zm11.764 26.725l.121.182c.061 0 .24.121.363.121h1.086c1.387 0 2.533-.303 3.438-.904.904-.604 1.568-1.51 1.99-2.715l-.182-.303c-.725 1.027-1.689 1.811-2.773 2.414-1.086.604-2.353.965-4.043 1.205zm-.422-14.477l.121.361c.301.061.723.182 1.084.302.244.12.543.361.787.481h.18l-.18-2.534-.184.12c-.301.302-.541.604-.783.786-.363.241-.661.423-1.025.484zm1.508-12.429l.061.182c1.146.18 2.172.481 2.713.725.605.361 1.09.783 1.449 1.446h.24c-.119-.904-.359-1.569-.783-1.93-.359-.302-1.025-.481-2.111-.481h-.725c-.24-.001-.543.058-.844.058zm-6.816 2.895v6.819c0 .663.182 1.147.422 1.446.303.243.783.363 1.387.363h1.389c.906 0 1.627-.062 2.232-.302.541-.241 1.084-.663 1.387-1.146.24-.241.484-.663.725-1.268.361-.783.844-1.205 1.328-1.205.24 0 .42.061.48.24.182.182.24.422.24.663 0 0-.059.302-.119.967a9.965 9.965 0 0 0-.182 1.931c0 1.689.061 3.5.242 5.308.059.361.059.604.059.664 0 .242-.059.482-.119.604a.769.769 0 0 1-.602.24c-.484 0-.846-.422-.906-1.146-.061-.602-.24-1.023-.303-1.326-.359-.844-.844-1.387-1.445-1.75-.543-.302-1.51-.481-2.836-.481h-1.57c-.664 0-1.146.18-1.387.481-.24.243-.422.907-.422 1.932v6.576c0 1.689.24 2.895.662 3.258.482.424 1.387.664 2.775.664 1.387 0 2.777-.24 4.104-.664 1.387-.482 2.596-1.025 3.379-1.811.604-.482 1.146-1.207 1.627-1.932.424-.844.846-1.146 1.088-1.146.18 0 .361.062.422.244.059.119.18.299.18.543 0 .602-.18 1.324-.48 2.23-.363.965-.785 1.811-1.209 2.473-.543.846-1.387 1.389-2.291 1.811-.906.422-2.053.543-3.379.543-.543 0-1.689-.059-3.439-.121-1.748-.119-3.256-.18-4.465-.18-1.387 0-2.773.061-4.223.18-1.508.062-2.232.121-2.352.121a2.21 2.21 0 0 1-.725-.121c-.182-.18-.24-.361-.24-.662 0-.361.301-.664.965-1.027a3.265 3.265 0 0 0 1.025-.48c.543-.303.965-.783 1.205-1.449.242-.662.424-1.508.424-2.654v-16.53c0-1.508-.061-2.655-.242-3.197a3.372 3.372 0 0 0-.904-1.569c-.482-.422-1.268-.665-2.232-.725-1.086-.181-1.57-.422-1.57-.844 0-.241.121-.422.244-.604.24-.059.48-.121.842-.121h.484c2.414.121 4.947.302 7.66.302 2.053 0 4.285-.062 6.758-.182 2.475-.121 3.922-.121 4.404-.121.783 0 1.268.062 1.449.241.121.123.301.545.301 1.208V85.954c0 .361-.061.602-.18.722-.062.123-.244.181-.484.181-.422 0-.662-.422-.725-1.085 0-.725-.178-1.267-.361-1.63-.359-.784-1.146-1.387-2.17-1.689-1.088-.361-2.715-.543-4.889-.543-1.205 0-2.111.182-2.654.543-.484.3-.784.904-.784 1.688zm30.828 24.011l.119.182c.365.121.666.121.906.121.242 0 .482.061.664.061a5.933 5.933 0 0 0 3.258-.965c.904-.604 1.57-1.568 1.992-2.715l-.121-.121c-.785.904-1.871 1.629-2.957 2.232-1.025.604-2.353.965-3.861 1.205zm-5.731-21.777v17.554c0 1.809.24 2.777.725 3.199.422.303 1.326.543 2.652.543 1.449 0 2.838-.24 4.283-.664 1.268-.363 2.475-1.025 3.379-1.811.543-.482 1.146-1.145 1.51-1.932.42-.783.783-1.146 1.086-1.146.18 0 .361.062.422.244.059.119.18.299.18.543 0 .602-.18 1.324-.482 2.23-.301.965-.664 1.811-1.205 2.473-.545.846-1.27 1.389-2.172 1.811-.846.422-1.992.543-3.318.543-.543 0-1.812-.059-3.561-.121a64.76 64.76 0 0 0-4.344-.18c-1.449 0-2.955.061-4.404.18-1.508.062-2.232.121-2.354.121-.301 0-.543-.059-.723-.24-.182-.121-.242-.361-.242-.725 0-.303.303-.543.965-.846.424-.119.783-.361 1.027-.48.543-.303.965-.783 1.205-1.449.24-.604.422-1.508.422-2.594V86.797c0-1.328-.059-2.293-.24-2.897-.182-.663-.482-1.206-.965-1.628-.543-.363-1.266-.483-2.232-.604-1.025-.061-1.51-.422-1.51-.724s.123-.602.244-.725c.18-.179.48-.241.844-.241 0 0 .723 0 1.988.121 1.209.12 2.477.182 3.623.182 1.627 0 3.438-.182 5.309-.302h.783c.242 0 .482.062.543.241.182.123.242.422.242.725 0 .243-.303.483-.967.663-.662.182-1.145.422-1.508.665a2.568 2.568 0 0 0-.904 1.205c-.119.483-.301 1.507-.301 2.897zm-5.914-4.948l-.18.18c.723.302 1.326.724 1.629 1.39.361.663.48 1.507.48 2.654v16.712c0 1.627-.059 2.955-.301 3.678-.361.725-.846 1.51-1.387 2.053v.059c.904-.361 1.568-.965 1.871-1.689.359-.844.482-2.232.482-4.281V85.891c0-1.328-.123-2.293-.545-3.076-.42-.663-1.143-1.147-2.049-1.388z\" fillRule=\"evenodd\" clipRule=\"evenodd\" fill=\"#6d6e70\"/><path fill=\"#6d6e70\" d=\"M189.6 114.57H4.216v-1.92H189.6v1.92zM189.6 141.676H4.216v-1.918H189.6v1.918zM121.621 76.622H72.264V74.32h49.357v2.302z\"/><path fillRule=\"evenodd\" clipRule=\"evenodd\" fill=\"#6d6e70\" d=\"M102.518 37.119H90.694l-.595-3.046h13.024l-.605 3.046zM103.99 39.115l-4.545 17.799h-5.742l-4.469-17.799h-.816l5.241 20.568h6.056l5.33-20.568h-1.055z\"/><path d=\"M88.733 36.934h16.005l-.059.23-5.055 19.795-.034.141H93.558l-.035-.14-4.969-19.795-.058-.23h.237v-.001zm15.529.37H88.97l4.877 19.425h5.454l4.961-19.425z\" fill=\"#6d6e70\"/></svg>\n);\n\nexport default IconCitadel;\n","import React from \"react\";\nconst IconPalantir = () => (\n  <svg\n    width=\"100\"\n    height=\"25\"\n    viewBox=\"0 0 100 25\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M24.4,3h6.2c2.3,0,3.8,0.1,5.1,1.5c0.9,1,1.4,2.2,1.4,3.6c0,1.4-0.5,2.6-1.5,3.6c-1,1-2.3,1.6-5.6,1.6h-3 v8.3h-2.6V3z M27,11.2H30c1.7,0,4.3-0.1,4.3-3.2c0-2.9-2.4-2.9-3.8-2.9H27V11.2z M45.4,21.6c-0.2-0.6-0.2-1.3-0.2-1.9 c-1.2,2.1-2.9,2.3-4,2.3c-3,0-4.6-1.7-4.6-3.8c0-1,0.4-2.7,2.3-3.8c1.4-0.8,3.4-0.8,4.5-0.8c0.6,0,1,0,1.7,0.1c0-1.6,0-2.3-0.5-2.9 c-0.5-0.6-1.5-0.8-2.2-0.8c-2.4,0-2.6,1.7-2.6,2.2h-2.4c0.1-0.7,0.2-1.6,0.9-2.4c1-1.1,2.8-1.4,4.2-1.4c1.9,0,3.9,0.6,4.6,1.9 c0.4,0.8,0.4,1.4,0.4,2l-0.1,6.2c0,0.2,0,1.9,0.2,3.2H45.4z M43.7,15.2c-1,0-4.7,0-4.7,2.6c0,0.8,0.5,2.2,2.7,2.2 c1.2,0,2.2-0.5,2.8-1.4c0.5-0.9,0.6-1.6,0.6-3.4C44.7,15.3,44.3,15.2,43.7,15.2z M49.6,3H52v18.6h-2.4V3z M62.4,21.6 c-0.2-0.6-0.2-1.3-0.2-1.9c-1.2,2.1-2.9,2.3-4,2.3c-3,0-4.6-1.7-4.6-3.8c0-1,0.4-2.7,2.3-3.8c1.4-0.8,3.4-0.8,4.5-0.8 c0.6,0,1,0,1.7,0.1c0-1.6,0-2.3-0.5-2.9c-0.5-0.6-1.5-0.8-2.2-0.8c-2.4,0-2.6,1.7-2.6,2.2h-2.4c0.1-0.7,0.2-1.6,0.9-2.4 c1-1.1,2.8-1.4,4.2-1.4c1.9,0,3.9,0.6,4.6,1.9c0.4,0.8,0.4,1.4,0.4,2l-0.1,6.2c0,0.2,0,1.9,0.2,3.2H62.4z M60.8,15.2 c-1,0-4.7,0-4.7,2.6c0,0.8,0.5,2.2,2.7,2.2c1.2,0,2.2-0.5,2.8-1.4c0.5-0.9,0.6-1.6,0.6-3.4C61.7,15.3,61.4,15.2,60.8,15.2z M66.7,10.2l0-1.5h2.4l0,2.1c0.3-0.5,1.2-2.3,4.1-2.3c1.2,0,4.7,0.4,4.7,4.4v8.8h-2.5v-8.2c0-0.8-0.1-1.6-0.7-2.2 c-0.6-0.6-1.5-0.9-2.3-0.9c-1.8,0-3.4,1.3-3.4,3.9v7.4h-2.4V10.2z M78.7,8.7H81V5.9l2.4-0.8v3.5h2.9v1.8h-2.9v7.7 c0,0.6,0,1.7,1.7,1.7c0.5,0,1-0.1,1.2-0.1v1.9c-0.4,0.1-1.1,0.2-2,0.2C82,21.8,81,21.1,81,19v-8.6h-2.3V8.7z M88,3h2.9v2.7H88V3z M88.2,8.7h2.4v12.9h-2.4V8.7z M92.9,11.3c0-0.9-0.1-1.8-0.1-2.6h2.4l0.1,2.5c0.5-1.8,2-2.4,3.1-2.5c0.7-0.1,1.3-0.1,1.7-0.1v2.4 c-0.1,0-0.3-0.1-0.5-0.1c-0.2,0-0.4,0-0.7,0c-2.9,0-3.5,1.7-3.5,3.9v6.9h-2.4V11.3z M9.5,0.5c-5,0-9.1,4.1-9.1,9.1s4.1,9.1,9.1,9.1 c5,0,9.1-4.1,9.1-9.1S14.5,0.5,9.5,0.5z M9.5,15.9c-3.5,0-6.3-2.8-6.3-6.3c0-3.5,2.8-6.3,6.3-6.3c3.5,0,6.3,2.8,6.3,6.3 C15.7,13.1,12.9,15.9,9.5,15.9z M17.6,17.9l-8.1,3.5l-8.1-3.5L0,20.4l9.5,4l9.5-4L17.6,17.9z\"></path>\n  </svg>\n);\n\nexport default IconPalantir;\n","\nimport React from \"react\";\nconst IconAtlassian = () => (\n  <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 32 32\" width=\"512px\" height=\"512px\"><path d=\"M 15.931641 4 C 15.717641 4 15.497516 4.1192813 15.353516 4.3632812 C 10.126516 12.978281 14.981734 20.023953 18.177734 26.626953 C 18.288734 26.847953 18.511719 27 18.761719 27 L 26.351562 27 C 26.834563 27 27.150734 26.472484 26.927734 26.021484 C 26.927734 26.021484 16.71975 4.8805156 16.46875 4.3535156 C 16.35275 4.1195156 16.144641 4 15.931641 4 z M 15.882812 7.7441406 C 18.002812 12.138141 22.311891 21.064 24.212891 25 L 19.607422 25 C 19.317422 24.419 19.018797 23.835047 18.716797 23.248047 C 16.118797 18.188047 13.647812 13.376141 15.882812 7.7441406 z M 10.316406 14 C 10.089406 14 9.8740469 14.125672 9.7480469 14.388672 L 4.0703125 26.003906 C 3.8493125 26.467906 4.1867344 27 4.6777344 27 L 12.576172 27 L 12.599609 27 C 12.849609 27 13.070828 26.844234 13.173828 26.615234 C 14.886828 23.013234 13.857234 17.537719 10.865234 14.261719 C 10.706234 14.089719 10.507406 14 10.316406 14 z M 10.570312 17.259766 C 11.908312 19.633766 12.36825 22.695 11.65625 25 L 6.7871094 25 L 10.570312 17.259766 z\"/></svg>\n);\n\nexport default IconAtlassian;\n","\nimport React from \"react\";\nconst IconWalmart = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"480px\" height=\"480px\"><path fill=\"#fbc02d\" d=\"M27 6c0-1.105-1.343-2-3-2s-3 .895-3 2c0 .927 1 9.112 1 9.667C22 16.403 22.895 17 24 17s2-.597 2-1.333C26 15.112 27 6.927 27 6zM21 42c0 1.105 1.343 2 3 2s3-.895 3-2c0-.927-1-9.112-1-9.667C26 31.597 25.105 31 24 31s-2 .597-2 1.333C22 32.888 21 41.073 21 42zM9.791 12.187c-.957-.552-2.404.163-3.232 1.598s-.725 3.046.232 3.598c.803.464 8.391 3.69 8.872 3.967.638.368 1.602-.109 2.155-1.065.552-.957.483-2.031-.155-2.399C17.182 17.608 10.595 12.65 9.791 12.187zM38.209 35.813c.957.552 2.404-.163 3.232-1.598s.725-3.046-.232-3.598c-.803-.464-8.391-3.69-8.872-3.967-.638-.368-1.602.109-2.155 1.065-.552.957-.483 2.031.155 2.399C30.818 30.392 37.405 35.35 38.209 35.813zM38.209 12.187c.957-.552 2.404.163 3.232 1.598s.725 3.046-.232 3.598c-.803.464-8.391 3.69-8.872 3.967-.638.368-1.602-.109-2.155-1.065-.552-.957-.483-2.031.155-2.399C30.818 17.608 37.405 12.65 38.209 12.187zM9.791 35.813c-.957.552-2.404-.163-3.232-1.598s-.725-3.046.232-3.598c.803-.464 8.391-3.69 8.872-3.967.638-.368 1.602.109 2.155 1.065.552.957.483 2.031-.155 2.399C17.182 30.392 10.595 35.35 9.791 35.813z\"/></svg>\n);\n\nexport default IconWalmart;\n","\nimport React from \"react\";\nconst IconSAP = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"480px\" height=\"480px\"><path fill=\"#1976d2\" d=\"M0,12v24h25l23-24H0z\"/><path fill=\"#fff\" d=\"M27.5,18H23v7v2v0.5L19.2,18h-3.5l-3.088,7.883c-0.405-1.752-2.259-2.417-3.412-2.683C6.2,22.4,6,22,6,21.4c0-1.5,4-0.8,5-0.4c0.3-0.8,0.9-2.3,0.9-2.3S10.8,18,7.4,18C4,18,3,20.1,3,21.4c0,1.3,0.7,2.8,2.6,3.4c2,0.6,3.5,0.7,3.5,1.7s-3.4,1.2-5.3,0L3,29.1c0,0,1.1,0.9,4.4,0.9c1.781,0,3.167-0.503,4.08-1.226L11,30h3.5l0.6-1.8c0.7,0.3,1.5,0.5,2.4,0.5s1.7-0.2,2.4-0.5l0.6,1.8H23h1h2v-3h1.5c2.5,0,4.5-2,4.5-4.5S30,18,27.5,18z M17.5,26.1c-0.6,0-1.1-0.1-1.5-0.4l1.5-4.3l1.5,4.3C18.6,26,18.1,26.1,17.5,26.1z M27.5,24H26v-3h1.5c0.8,0,1.5,0.7,1.5,1.5S28.3,24,27.5,24z\"/></svg>\n);\n\nexport default IconSAP;\n","import React from \"react\";\r\nconst IconIdea = () => (\r\n  <svg\r\n    fill=\"#000000\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    height=\"24px\"\r\n  >\r\n    <path d=\"M 11 0 L 11 3 L 13 3 L 13 0 L 11 0 z M 4.2226562 2.8085938 L 2.8085938 4.2226562 L 4.9296875 6.34375 L 6.34375 4.9296875 L 4.2226562 2.8085938 z M 19.777344 2.8085938 L 17.65625 4.9296875 L 19.070312 6.34375 L 21.191406 4.2226562 L 19.777344 2.8085938 z M 12 5 C 8.1456661 5 5 8.1456661 5 12 C 5 14.767788 6.6561188 17.102239 9 18.234375 L 9 21 C 9 22.093063 9.9069372 23 11 23 L 13 23 C 14.093063 23 15 22.093063 15 21 L 15 18.234375 C 17.343881 17.102239 19 14.767788 19 12 C 19 8.1456661 15.854334 5 12 5 z M 12 7 C 14.773666 7 17 9.2263339 17 12 C 17 14.184344 15.605334 16.022854 13.666016 16.708984 L 13 16.943359 L 13 21 L 11 21 L 11 16.943359 L 10.333984 16.708984 C 8.3946664 16.022854 7 14.184344 7 12 C 7 9.2263339 9.2263339 7 12 7 z M 0 11 L 0 13 L 3 13 L 3 11 L 0 11 z M 21 11 L 21 13 L 24 13 L 24 11 L 21 11 z M 4.9296875 17.65625 L 2.8085938 19.777344 L 4.2226562 21.191406 L 6.34375 19.070312 L 4.9296875 17.65625 z M 19.070312 17.65625 L 17.65625 19.070312 L 19.777344 21.191406 L 21.191406 19.777344 L 19.070312 17.65625 z\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconIdea;\r\n","import React from \"react\";\r\n\r\nconst IconHome = () => (\r\n  <svg\r\n    fill=\"#000000\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    height=\"24px\"\r\n  >\r\n    <path d=\"M 12 2.0996094 L 1 12 L 4 12 L 4 21 L 11 21 L 11 15 L 13 15 L 13 21 L 20 21 L 20 12 L 23 12 L 12 2.0996094 z M 12 4.7910156 L 18 10.191406 L 18 11 L 18 19 L 15 19 L 15 13 L 9 13 L 9 19 L 6 19 L 6 10.191406 L 12 4.7910156 z\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconHome;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport anime from 'animejs';\r\nimport styled from 'styled-components';\r\nimport { IconLoader } from '../icons'\r\nconst StyledLoader = styled.div`\r\n  ${({ theme }) => theme.mixins.flexCenter};\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: var(--dark-navy);\r\n  z-index: 99;\r\n\r\n  .logo-wrapper {\r\n    width: max-content;\r\n    /* max-width: 400px; */\r\n    padding: 100px;\r\n    transition: var(--transition);\r\n    opacity: ${props => (props.isMounted ? 1 : 0)};\r\n    svg {\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n      margin: 0 auto;\r\n      fill: none;\r\n      user-select: none;\r\n      #B {\r\n        opacity: 0;\r\n      }\r\n    }\r\n  }\r\n  \r\nsvg {\r\n\twidth: 100%; height: 100%;\r\n}\r\nsvg text {\r\n\ttext-transform: uppercase;\r\n\tanimation: stroke 4s;\r\n\tstroke-width: 2;\r\n\tstroke: var(--green);\r\n\tfont-size: 140px;\r\n}\r\n@keyframes stroke {\r\n\t0%   {\r\n\t\tfill: rgba(100,255,218,0); stroke: rgba(116,255,222);\r\n\t\tstroke-dashoffset: 25%; stroke-dasharray: 0 50%; stroke-width: 2;\r\n\t}\r\n\t70%  {fill: rgba(90,230,196,0); stroke: rgba(54,95,160,1); }\r\n\t80%  {fill: rgba(72,138,20,0); stroke: rgba(100,255,218,1); stroke-width: 3; }\r\n\t100% {\r\n\t\tfill: rgba(72,138,204,1); stroke: var(--green); \r\n\t\tstroke-dashoffset: -25%; stroke-dasharray: 50% 0; stroke-width: 0;\r\n\t}\r\n}\r\n`;\r\n\r\nconst Loader = ({ finishLoading }) => {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  const animate = () => {\r\n    // setTimeout(() => { finishLoading(); },3000)\r\n    const loader = anime.timeline({\r\n      complete: () => finishLoading(),\r\n    });\r\n\r\n    loader\r\n      .add({\r\n        targets: '#logo path',\r\n        delay: 300,\r\n        duration: 2500,\r\n        easing: 'easeInOutQuart',\r\n        strokeDashoffset: [anime.setDashoffset, 0],\r\n      })\r\n      .add({\r\n        targets: '#logo #B',\r\n        duration: 700,\r\n        easing: 'easeInOutQuart',\r\n        opacity: 1,\r\n      })\r\n      .add({\r\n        targets: '#logo',\r\n        delay: 500,\r\n        duration: 500,\r\n        easing: 'easeInOutQuart',\r\n        opacity: 0,\r\n        scale: 0.1,\r\n      })\r\n      .add({\r\n        targets: '.loader',\r\n        duration: 500,\r\n        easing: 'easeInOutQuart',\r\n        opacity: 0,\r\n        zIndex: -1,\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => setIsMounted(true), 10);\r\n    animate();\r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  return (\r\n    <StyledLoader className=\"loader\" isMounted={isMounted}>\r\n      <Helmet bodyAttributes={{ class: `hidden` }} />\r\n      <div className=\"logo-wrapper\">\r\n         <IconLoader />\r\n      </div>\r\n    </StyledLoader>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  finishLoading: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Loader;\r\n","import { css } from 'styled-components';\r\n\r\nconst button = css`\r\n  color: var(--green);\r\n  background-color: transparent;\r\n  border: 1px solid var(--green);\r\n  border-radius: var(--border-radius);\r\n  font-size: var(--fz-xs);\r\n  font-family: var(--font-mono);\r\n  line-height: 1;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  transition: var(--transition);\r\n  padding: 1.25rem 1.75rem;\r\n\r\n  &:hover,\r\n  &:focus,\r\n  &:active {\r\n    background-color: var(--green-tint);\r\n    outline: none;\r\n  }\r\n  &:after {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nconst mixins = {\r\n  flexCenter: css`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  `,\r\n\r\n  flexBetween: css`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  `,\r\n\r\n  link: css`\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    text-decoration-skip-ink: auto;\r\n    color: inherit;\r\n    position: relative;\r\n    transition: var(--transition);\r\n    &:hover,\r\n    &:active,\r\n    &:focus {\r\n      color: var(--green);\r\n      outline: 0;\r\n    }\r\n  `,\r\n\r\n  inlineLink: css`\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    text-decoration-skip-ink: auto;\r\n    position: relative;\r\n    transition: var(--transition);\r\n    color: var(--green);\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      color: var(--green);\r\n      outline: 0;\r\n      &:after {\r\n        width: 100%;\r\n      }\r\n      & > * {\r\n        color: var(--green) !important;\r\n        transition: var(--transition);\r\n      }\r\n    }\r\n    &:after {\r\n      content: '';\r\n      display: block;\r\n      width: 0;\r\n      height: 1px;\r\n      position: relative;\r\n      bottom: 0.37em;\r\n      background-color: var(--green);\r\n      transition: var(--transition);\r\n      opacity: 0.5;\r\n    }\r\n  `,\r\n\r\n  button,\r\n\r\n  smallButton: css`\r\n    color: var(--green);\r\n    background-color: transparent;\r\n    border: 1px solid var(--green);\r\n    border-radius: var(--border-radius);\r\n    padding: 0.75rem 1rem;\r\n    font-size: var(--fz-xs);\r\n    font-family: var(--font-mono);\r\n    line-height: 1;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    transition: var(--transition);\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      background-color: var(--green-tint);\r\n      outline: none;\r\n    }\r\n    &:after {\r\n      display: none !important;\r\n    }\r\n  `,\r\n\r\n  bigButton: css`\r\n    color: var(--green);\r\n    background-color: transparent;\r\n    border: 1px solid var(--green);\r\n    border-radius: var(--border-radius);\r\n    padding: 1.25rem 1.75rem;\r\n    font-size: var(--fz-sm);\r\n    font-family: var(--font-mono);\r\n    line-height: 1;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    transition: var(--transition);\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      background-color: var(--green-tint);\r\n      outline: none;\r\n    }\r\n    &:after {\r\n      display: none !important;\r\n    }\r\n  `,\r\n\r\n  boxShadow: css`\r\n    box-shadow: 0 10px 30px -15px var(--navy-shadow);\r\n    transition: var(--transition);\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0 20px 30px -15px var(--navy-shadow);\r\n    }\r\n  `,\r\n\r\n  fancyList: css`\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style: none;\r\n    font-size: var(--fz-lg);\r\n    li {\r\n      position: relative;\r\n      padding-left: 30px;\r\n      margin-bottom: 10px;\r\n      &:before {\r\n        content: '▹';\r\n        position: absolute;\r\n        left: 0;\r\n        color: var(--green);\r\n      }\r\n    }\r\n  `,\r\n\r\n  resetList: css`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  `,\r\n};\r\n\r\nexport default mixins;\r\n","import mixins from './mixins';\r\n\r\nconst theme = {\r\n  bp: {\r\n    mobileS: `max-width: 330px`,\r\n    mobileM: `max-width: 400px`,\r\n    mobileL: `max-width: 480px`,\r\n    tabletS: `max-width: 600px`,\r\n    tabletL: `max-width: 768px`,\r\n    desktopXS: `max-width: 900px`,\r\n    desktopS: `max-width: 1080px`,\r\n    desktopM: `max-width: 1200px`,\r\n    desktopL: `max-width: 1400px`,\r\n  },\r\n\r\n  mixins,\r\n};\r\n\r\nexport default theme;\r\n","import { css } from 'styled-components';\r\n\r\nimport CalibreRegularWoff from '../Assets/fonts//Calibre/Calibre-Regular.woff';\r\nimport CalibreRegularWoff2 from '../Assets/fonts//Calibre/Calibre-Regular.woff2';\r\nimport CalibreMediumWoff from '../Assets/fonts//Calibre/Calibre-Medium.woff';\r\nimport CalibreMediumWoff2 from '../Assets/fonts//Calibre/Calibre-Medium.woff2';\r\nimport CalibreSemiboldWoff from '../Assets/fonts//Calibre/Calibre-Semibold.woff';\r\nimport CalibreSemiboldWoff2 from '../Assets/fonts//Calibre/Calibre-Semibold.woff2';\r\n\r\nimport CalibreRegularItalicWoff from '../Assets/fonts//Calibre/Calibre-RegularItalic.woff';\r\nimport CalibreRegularItalicWoff2 from '../Assets/fonts//Calibre/Calibre-RegularItalic.woff2';\r\nimport CalibreMediumItalicWoff from '../Assets/fonts//Calibre/Calibre-MediumItalic.woff';\r\nimport CalibreMediumItalicWoff2 from '../Assets/fonts//Calibre/Calibre-MediumItalic.woff2';\r\nimport CalibreSemiboldItalicWoff from '../Assets/fonts//Calibre/Calibre-SemiboldItalic.woff';\r\nimport CalibreSemiboldItalicWoff2 from '../Assets/fonts//Calibre/Calibre-SemiboldItalic.woff2';\r\n\r\nimport SFMonoRegularWoff from '../Assets/fonts//SFMono/SFMono-Regular.woff';\r\nimport SFMonoRegularWoff2 from '../Assets/fonts//SFMono/SFMono-Regular.woff2';\r\nimport SFMonoSemiboldWoff from '../Assets/fonts//SFMono/SFMono-Semibold.woff';\r\nimport SFMonoSemiboldWoff2 from '../Assets/fonts//SFMono/SFMono-Semibold.woff2';\r\n\r\nimport SFMonoRegularItalicWoff from '../Assets/fonts//SFMono/SFMono-RegularItalic.woff';\r\nimport SFMonoRegularItalicWoff2 from '../Assets/fonts//SFMono/SFMono-RegularItalic.woff2';\r\nimport SFMonoSemiboldItalicWoff from '../Assets/fonts//SFMono/SFMono-SemiboldItalic.woff';\r\nimport SFMonoSemiboldItalicWoff2 from '../Assets/fonts//SFMono/SFMono-SemiboldItalic.woff2';\r\n\r\nconst calibreNormalWeights = {\r\n  400: [CalibreRegularWoff, CalibreRegularWoff2],\r\n  500: [CalibreMediumWoff, CalibreMediumWoff2],\r\n  600: [CalibreSemiboldWoff, CalibreSemiboldWoff2],\r\n};\r\n\r\nconst calibreItalicWeights = {\r\n  400: [CalibreRegularItalicWoff, CalibreRegularItalicWoff2],\r\n  500: [CalibreMediumItalicWoff, CalibreMediumItalicWoff2],\r\n  600: [CalibreSemiboldItalicWoff, CalibreSemiboldItalicWoff2],\r\n};\r\n\r\nconst sfMonoNormalWeights = {\r\n  400: [SFMonoRegularWoff, SFMonoRegularWoff2],\r\n  600: [SFMonoSemiboldWoff, SFMonoSemiboldWoff2],\r\n};\r\n\r\nconst sfMonoItalicWeights = {\r\n  400: [SFMonoRegularItalicWoff, SFMonoRegularItalicWoff2],\r\n  600: [SFMonoSemiboldItalicWoff, SFMonoSemiboldItalicWoff2],\r\n};\r\n\r\nconst calibre = {\r\n  name: 'Calibre',\r\n  normal: calibreNormalWeights,\r\n  italic: calibreItalicWeights,\r\n};\r\n\r\nconst sfMono = {\r\n  name: 'SF Mono',\r\n  normal: sfMonoNormalWeights,\r\n  italic: sfMonoItalicWeights,\r\n};\r\n\r\nconst createFontFaces = (family, style = 'normal') => {\r\n  let styles = '';\r\n\r\n  for (const [weight, formats] of Object.entries(family[style])) {\r\n    const woff = formats[0];\r\n    const woff2 = formats[1];\r\n\r\n    styles += `\r\n      @font-face {\r\n        font-family: '${family.name}';\r\n        src: url(${woff2}) format('woff2'),\r\n            url(${woff}) format('woff');\r\n        font-weight: ${weight};\r\n        font-style: ${style};\r\n        font-display: auto;\r\n      }\r\n    `;\r\n  }\r\n\r\n  return styles;\r\n};\r\n\r\nconst calibreNormal = createFontFaces(calibre);\r\nconst calibreItalic = createFontFaces(calibre, 'italic');\r\n\r\nconst sfMonoNormal = createFontFaces(sfMono);\r\nconst sfMonoItalic = createFontFaces(sfMono, 'italic');\r\n\r\nconst Fonts = css`\r\n  ${calibreNormal + calibreItalic + sfMonoNormal + sfMonoItalic}\r\n`;\r\n\r\nexport default Fonts;\r\n","export default __webpack_public_path__ + \"static/media/Calibre-Regular.98526589.woff\";","export default __webpack_public_path__ + \"static/media/Calibre-Regular.b0d4cbb1.woff2\";","export default __webpack_public_path__ + \"static/media/Calibre-Medium.46693d9b.woff\";","export default __webpack_public_path__ + \"static/media/Calibre-Medium.568dce56.woff2\";","export default __webpack_public_path__ + \"static/media/Calibre-Semibold.6972688a.woff\";","export default __webpack_public_path__ + \"static/media/Calibre-Semibold.94fc7385.woff2\";","export default __webpack_public_path__ + \"static/media/Calibre-RegularItalic.57371b9e.woff\";","export default __webpack_public_path__ + \"static/media/Calibre-RegularItalic.5f875bd7.woff2\";","export default __webpack_public_path__ + \"static/media/Calibre-MediumItalic.aa285f95.woff\";","export default __webpack_public_path__ + \"static/media/Calibre-MediumItalic.7aa14057.woff2\";","export default __webpack_public_path__ + \"static/media/Calibre-SemiboldItalic.ad4bd95a.woff\";","export default __webpack_public_path__ + \"static/media/Calibre-SemiboldItalic.5f04bffe.woff2\";","export default __webpack_public_path__ + \"static/media/SFMono-Regular.e36fa525.woff\";","export default __webpack_public_path__ + \"static/media/SFMono-Regular.8799e638.woff2\";","export default __webpack_public_path__ + \"static/media/SFMono-Semibold.ee054046.woff\";","export default __webpack_public_path__ + \"static/media/SFMono-Semibold.6e6f6c93.woff2\";","export default __webpack_public_path__ + \"static/media/SFMono-RegularItalic.3a20a00d.woff\";","export default __webpack_public_path__ + \"static/media/SFMono-RegularItalic.a596917f.woff2\";","export default __webpack_public_path__ + \"static/media/SFMono-SemiboldItalic.10eb596e.woff\";","export default __webpack_public_path__ + \"static/media/SFMono-SemiboldItalic.9a0ae638.woff2\";","import { css } from 'styled-components';\r\n\r\nconst variables = css`\r\n  :root {\r\n    --dark-navy: #020c1b;\r\n    --navy: #0a192f;\r\n    --light-navy: #112240;\r\n    --lightest-navy: #233554;\r\n    --navy-shadow: rgba(2, 12, 27, 0.7);\r\n    --dark-slate: #495670;\r\n    --slate: #8892b0;\r\n    --light-slate: #a8b2d1;\r\n    --lightest-slate: #ccd6f6;\r\n    --white: #e6f1ff;\r\n    --green: #ffbc1e; //#64ffda;\r\n    --green-tint: rgba(100, 255, 218, 0.1);\r\n    --light-green:#62c51e;\r\n    --font-sans: 'Calibre', 'San Francisco', 'SF Pro Text', -apple-system, system-ui, sans-serif;\r\n    --font-mono: 'SF Mono', 'Fira Code', 'Fira Mono', 'Roboto Mono', monospace;\r\n\r\n    --fz-xxs: 12px;\r\n    --fz-xs: 13px;\r\n    --fz-sm: 14px;\r\n    --fz-md: 16px;\r\n    --fz-lg: 18px;\r\n    --fz-xl: 20px;\r\n    --fz-xxl: 22px;\r\n    --fz-heading: 32px;\r\n\r\n    --border-radius: 4px;\r\n    --nav-height: 100px;\r\n    --nav-scroll-height: 70px;\r\n\r\n    --tab-height: 42px;\r\n    --tab-width: 120px;\r\n\r\n    --easing: cubic-bezier(0.645, 0.045, 0.355, 1);\r\n    --transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n\r\n    --hamburger-width: 30px;\r\n\r\n    --ham-before: top 0.1s ease-in 0.25s, opacity 0.1s ease-in;\r\n    --ham-before-active: top 0.1s ease-out, opacity 0.1s ease-out 0.12s;\r\n    --ham-after: bottom 0.1s ease-in 0.25s, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);\r\n    --ham-after-active: bottom 0.1s ease-out,\r\n      transform 0.22s cubic-bezier(0.215, 0.61, 0.355, 1) 0.12s;\r\n  }\r\n`;\r\n\r\nexport default variables;\r\n","import { css } from 'styled-components';\r\n\r\n// https://reactcommunity.org/react-transition-group/css-transition\r\n\r\nconst TransitionStyles = css`\r\n  /* Fade up */\r\n  .fadeup-enter {\r\n    opacity: 0.01;\r\n    transform: translateY(20px);\r\n    transition: opacity 300ms var(--easing), transform 300ms var(--easing);\r\n  }\r\n\r\n  .fadeup-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0px);\r\n    transition: opacity 300ms var(--easing), transform 300ms var(--easing);\r\n  }\r\n\r\n  /* Fade down */\r\n  .fadedown-enter {\r\n    opacity: 0.01;\r\n    transform: translateY(-20px);\r\n    transition: opacity 300ms var(--easing), transform 300ms var(--easing);\r\n  }\r\n\r\n  .fadedown-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0px);\r\n    transition: opacity 300ms var(--easing), transform 300ms var(--easing);\r\n  }\r\n\r\n  /* Fade */\r\n  .fade-enter {\r\n    opacity: 0;\r\n  }\r\n  .fade-enter-active {\r\n    opacity: 1;\r\n    transition: opacity 300ms var(--easing);\r\n  }\r\n  .fade-exit {\r\n    opacity: 1;\r\n  }\r\n  .fade-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 300ms var(--easing);\r\n  }\r\n`;\r\n\r\nexport default TransitionStyles;\r\n","import { css } from 'styled-components';\r\n\r\nconst prismColors = {\r\n  bg: `#112340`,\r\n  lineHighlight: `#1d2d50`,\r\n  blue: `#5ccfe6`,\r\n  purple: `#c3a6ff`,\r\n  green: `#bae67e`,\r\n  yellow: `#ffd580`,\r\n  orange: `#ffae57`,\r\n  red: `#ef6b73`,\r\n  grey: `#a2aabc`,\r\n  comment: `#8695b799`,\r\n};\r\n\r\n// https://www.gatsbyjs.org/packages/gatsby-remark-prismjs\r\n\r\nconst PrismStyles = css`\r\n  /**\r\n  * Add back the container background-color, border-radius, padding, margin\r\n  * and overflow that we removed from <pre>.\r\n  */\r\n  .gatsby-highlight {\r\n    background-color: ${prismColors.bg};\r\n    color: ${prismColors.variable};\r\n    border-radius: var(--border-radius);\r\n    margin: 2em 0;\r\n    padding: 1.25em;\r\n    overflow: auto;\r\n    position: relative;\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-md);\r\n  }\r\n\r\n  .gatsby-highlight code[class*='language-'],\r\n  .gatsby-highlight pre[class*='language-'] {\r\n    height: auto !important;\r\n    font-size: var(--fz-sm);\r\n    line-height: 1.5;\r\n    white-space: pre;\r\n    word-spacing: normal;\r\n    word-break: normal;\r\n    word-wrap: normal;\r\n    tab-size: 2;\r\n    hyphens: none;\r\n  }\r\n\r\n  /**\r\n  * Remove the default PrismJS theme background-color, border-radius, margin,\r\n  * padding and overflow.\r\n  * 1. Make the element just wide enough to fit its content.\r\n  * 2. Always fill the visible space in .gatsby-highlight.\r\n  * 3. Adjust the position of the line numbers\r\n  */\r\n  .gatsby-highlight pre[class*='language-'] {\r\n    background-color: transparent;\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow: initial;\r\n    float: left; /* 1 */\r\n    min-width: 100%; /* 2 */\r\n    padding-top: 2em;\r\n  }\r\n\r\n  /* File names */\r\n  .gatsby-code-title {\r\n    padding: 1em 1.5em;\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-xs);\r\n    background-color: ${prismColors.bg};\r\n    color: ${prismColors.grey};\r\n    border-top-left-radius: var(--border-radius);\r\n    border-top-right-radius: var(--border-radius);\r\n    border-bottom: 1px solid ${prismColors.lineHighlight};\r\n\r\n    & + .gatsby-highlight {\r\n      margin-top: 0;\r\n      border-top-left-radius: 0;\r\n      border-top-right-radius: 0;\r\n    }\r\n  }\r\n\r\n  /* Line highlighting */\r\n  .gatsby-highlight-code-line {\r\n    display: block;\r\n    background-color: ${prismColors.lineHighlight};\r\n    border-left: 2px solid var(--green);\r\n    padding-left: calc(1em + 2px);\r\n    padding-right: 1em;\r\n    margin-right: -1.35em;\r\n    margin-left: -1.35em;\r\n  }\r\n\r\n  /* Language badges */\r\n  .gatsby-highlight pre[class*='language-']::before {\r\n    background: var(--lightest-navy);\r\n    color: var(--white);\r\n    font-size: var(--fz-xxs);\r\n    font-family: var(--font-mono);\r\n    line-height: 1.5;\r\n    letter-spacing: 0.1em;\r\n    text-transform: uppercase;\r\n    border-radius: 0 0 3px 3px;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 1.25rem;\r\n    padding: 0.25rem 0.5rem;\r\n  }\r\n  .gatsby-highlight pre[class='language-javascript']::before {\r\n    content: 'js';\r\n  }\r\n  .gatsby-highlight pre[class='language-js']::before {\r\n    content: 'js';\r\n  }\r\n  .gatsby-highlight pre[class='language-jsx']::before {\r\n    content: 'jsx';\r\n  }\r\n  .gatsby-highlight pre[class='language-graphql']::before {\r\n    content: 'GraphQL';\r\n  }\r\n  .gatsby-highlight pre[class='language-html']::before {\r\n    content: 'html';\r\n  }\r\n  .gatsby-highlight pre[class='language-css']::before {\r\n    content: 'css';\r\n  }\r\n  .gatsby-highlight pre[class='language-mdx']::before {\r\n    content: 'mdx';\r\n  }\r\n  .gatsby-highlight pre[class='language-shell']::before {\r\n    content: 'shell';\r\n  }\r\n  .gatsby-highlight pre[class='language-sh']::before {\r\n    content: 'sh';\r\n  }\r\n  .gatsby-highlight pre[class='language-bash']::before {\r\n    content: 'bash';\r\n  }\r\n  .gatsby-highlight pre[class='language-yaml']::before {\r\n    content: 'yaml';\r\n  }\r\n  .gatsby-highlight pre[class='language-markdown']::before {\r\n    content: 'md';\r\n  }\r\n  .gatsby-highlight pre[class='language-json']::before,\r\n  .gatsby-highlight pre[class='language-json5']::before {\r\n    content: 'json';\r\n  }\r\n  .gatsby-highlight pre[class='language-diff']::before {\r\n    content: 'diff';\r\n  }\r\n  .gatsby-highlight pre[class='language-text']::before {\r\n    content: 'text';\r\n  }\r\n  .gatsby-highlight pre[class='language-flow']::before {\r\n    content: 'flow';\r\n  }\r\n\r\n  /* Prism Styles */\r\n  .token {\r\n    display: inline;\r\n  }\r\n  .token.comment,\r\n  .token.block-comment,\r\n  .token.prolog,\r\n  .token.doctype,\r\n  .token.cdata {\r\n    color: ${prismColors.comment};\r\n  }\r\n  .token.punctuation {\r\n    color: ${prismColors.grey};\r\n  }\r\n  .token.namespace,\r\n  .token.deleted {\r\n    color: ${prismColors.red};\r\n  }\r\n  .token.function-name,\r\n  .token.function,\r\n  .token.class-name,\r\n  .token.constant,\r\n  .token.symbol {\r\n    color: ${prismColors.yellow};\r\n  }\r\n  .token.attr-name,\r\n  .token.operator,\r\n  .token.rule {\r\n    color: ${prismColors.orange};\r\n  }\r\n  .token.keyword,\r\n  .token.boolean,\r\n  .token.number,\r\n  .token.property {\r\n    color: ${prismColors.purple};\r\n  }\r\n  .token.tag,\r\n  .token.selector,\r\n  .token.important,\r\n  .token.atrule,\r\n  .token.builtin,\r\n  .token.entity,\r\n  .token.url {\r\n    color: ${prismColors.blue};\r\n  }\r\n  .token.string,\r\n  .token.char,\r\n  .token.attr-value,\r\n  .token.regex,\r\n  .token.variable,\r\n  .token.inserted {\r\n    color: ${prismColors.green};\r\n  }\r\n  .token.important,\r\n  .token.bold {\r\n    font-weight: 600;\r\n  }\r\n  .token.italic {\r\n    font-style: italic;\r\n  }\r\n  .token.entity {\r\n    cursor: help;\r\n  }\r\n  .namespace {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport default PrismStyles;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport fonts from './fonts';\r\nimport variables from './variables';\r\nimport TransitionStyles from './TransitionStyles';\r\nimport PrismStyles from './PrismStyles';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${fonts};\r\n  ${variables};\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n  }\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  ::selection {\r\n    background-color: var(--lightest-navy);\r\n    color: var(--lightest-slate);\r\n  }\r\n\r\n  :focus {\r\n    outline: 2px dashed var(--green);\r\n    outline-offset: 3px;\r\n  }\r\n\r\n  /* Scrollbar Styles */\r\n  html {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: var(--dark-slate) var(--navy);\r\n  }\r\n  body::-webkit-scrollbar {\r\n    width: 12px;\r\n  }\r\n  body::-webkit-scrollbar-track {\r\n    background: var(--navy);\r\n  }\r\n  body::-webkit-scrollbar-thumb {\r\n    background-color: var(--dark-slate);\r\n    border: 3px solid var(--navy);\r\n    border-radius: 10px;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    width: 100%;\r\n    min-height: 100%;\r\n    overflow-x: hidden;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-font-smoothing: antialiased;\r\n    background-color: var(--navy);\r\n    color: var(--slate);\r\n    font-family: var(--font-sans);\r\n    font-size: var(--fz-xl);\r\n    line-height: 1.3;\r\n\r\n    @media (max-width: 480px) {\r\n      font-size: var(--fz-lg);\r\n    }\r\n\r\n    &.hidden {\r\n      overflow: hidden;\r\n    }\r\n\r\n    &.blur {\r\n      overflow: hidden;\r\n\r\n      header {\r\n        background-color: transparent;\r\n      }\r\n\r\n      #content > * {\r\n        filter: blur(5px) brightness(0.7);\r\n        transition: var(--transition);\r\n        pointer-events: none;\r\n        user-select: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  #root {\r\n    min-height: 100vh;\r\n    display: grid;\r\n    grid-template-rows: 1fr auto;\r\n    grid-template-columns: 100%;\r\n  }\r\n\r\n  main {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    max-width: 1600px;\r\n    min-height: 100vh;\r\n    padding: 200px 150px;\r\n\r\n    @media (max-width: 1080px) {\r\n      padding: 200px 100px;\r\n    }\r\n    @media (max-width: 768px) {\r\n      padding: 150px 50px;\r\n    }\r\n    @media (max-width: 480px) {\r\n      padding: 125px 25px;\r\n    }\r\n\r\n    &.fillHeight {\r\n      padding: 0 150px;\r\n\r\n      @media (max-width: 1080px) {\r\n        padding: 0 100px;\r\n      }\r\n      @media (max-width: 768px) {\r\n        padding: 0 50px;\r\n      }\r\n      @media (max-width: 480px) {\r\n        padding: 0 25px;\r\n      }\r\n    }\r\n  }\r\n\r\n  section {\r\n    margin: 0 auto;\r\n    padding: 100px 0;\r\n    max-width: 1000px;\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 80px 0;\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n      padding: 60px 0;\r\n    }\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 0 0 10px 0;\r\n    font-weight: 600;\r\n    color: var(--lightest-slate);\r\n    line-height: 1.1;\r\n  }\r\n\r\n  .big-heading {\r\n    margin: 0;\r\n    font-size: clamp(40px, 8vw, 80px);\r\n  }\r\n\r\n  .medium-heading {\r\n    margin: 0;\r\n    font-size: clamp(40px, 8vw, 60px);\r\n  }\r\n\r\n  .numbered-heading {\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    margin: 10px 0 40px;\r\n    width: 100%;\r\n    font-size: clamp(26px, 5vw, var(--fz-heading));\r\n    white-space: nowrap;\r\n\r\n    &:before {\r\n      position: relative;\r\n      bottom: 4px;\r\n      counter-increment: section;\r\n      content: '0' counter(section) '.';\r\n      margin-right: 10px;\r\n      color: var(--green);\r\n      font-family: var(--font-mono);\r\n      font-size: clamp(var(--fz-md), 3vw, var(--fz-xl));\r\n      font-weight: 400;\r\n\r\n      @media (max-width: 480px) {\r\n        margin-bottom: -3px;\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n\r\n    &:after {\r\n      content: '';\r\n      display: block;\r\n      position: relative;\r\n      top: -5px;\r\n      width: 300px;\r\n      height: 1px;\r\n      margin-left: 20px;\r\n      background-color: var(--lightest-navy);\r\n\r\n      @media (max-width: 1080px) {\r\n        width: 200px;\r\n      }\r\n      @media (max-width: 768px) {\r\n        width: 100%;\r\n      }\r\n      @media (max-width: 600px) {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n  }\r\n\r\n  img,\r\n  svg,\r\n  .gatsby-image-wrapper {\r\n    /* width: 100%; */\r\n    max-width: 100%;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  img[alt=\"\"],\r\n  img:not([alt]) {\r\n    filter: blur(5px);\r\n  }\r\n\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n    fill: currentColor;\r\n    vertical-align: middle;\r\n\r\n    &.feather {\r\n      fill: none;\r\n    }\r\n  }\r\n\r\n  a {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    text-decoration-skip-ink: auto;\r\n    color: inherit;\r\n    position: relative;\r\n    transition: var(--transition);\r\n\r\n    &:hover,\r\n    &:focus {\r\n      color: var(--green);\r\n    }\r\n\r\n    &.inline-link {\r\n      ${({ theme }) => theme.mixins.inlineLink};\r\n    }\r\n\r\n    &[target='_blank'] {\r\n      cursor: ne-resize;\r\n    }\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n    border: 0;\r\n    border-radius: 0;\r\n  }\r\n\r\n  input, textarea {\r\n    border-radius: 0;\r\n    outline: 0;\r\n\r\n    &:focus {\r\n      outline: 0;\r\n    }\r\n    &:focus,\r\n    &:active {\r\n      &::placeholder {\r\n        opacity: 0.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  p {\r\n    margin: 0 0 15px 0;\r\n\r\n    &:last-child,\r\n    &:last-of-type {\r\n      margin: 0;\r\n    }\r\n\r\n    & > a {\r\n      ${({ theme }) => theme.mixins.inlineLink};\r\n    }\r\n\r\n    & > code {\r\n      background-color: var(--light-navy);\r\n      color: var(--white);\r\n      font-size: var(--fz-sm);\r\n      border-radius: var(--border-radius);\r\n      padding: 0.3em 0.5em;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    &.fancy-list {\r\n      padding: 0;\r\n      margin: 0;\r\n      list-style: none;\r\n      font-size: var(--fz-lg);\r\n      li {\r\n        position: relative;\r\n        padding-left: 30px;\r\n        margin-bottom: 10px;\r\n        &:before {\r\n          content: '▹';\r\n          position: absolute;\r\n          left: 0;\r\n          color: var(--green);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  blockquote {\r\n    border-left-color: var(--green);\r\n    border-left-style: solid;\r\n    border-left-width: 1px;\r\n    margin-left: 0px;\r\n    margin-right: 0px;\r\n    padding-left: 1.5rem;\r\n\r\n    p {\r\n      font-style: italic;\r\n      font-size: 24px;\r\n    }\r\n  }\r\n\r\n  hr {\r\n    background-color: var(--lightest-navy);\r\n    height: 1px;\r\n    border-width: 0px;\r\n    border-style: initial;\r\n    border-color: initial;\r\n    border-image: initial;\r\n    margin: 1rem;\r\n  }\r\n\r\n  code {\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-md);\r\n  }\r\n\r\n  .skip-to-content {\r\n    ${({ theme }) => theme.mixins.button};\r\n    position: absolute;\r\n    top: auto;\r\n    left: -999px;\r\n    width: 1px;\r\n    height: 1px;\r\n    overflow: hidden;\r\n    z-index: -99;\r\n\r\n    &:focus,\r\n    &:active {\r\n      background-color: var(--green);\r\n      color: var(--navy);\r\n      top: 0;\r\n      left: 0;\r\n      width: auto;\r\n      height: auto;\r\n      overflow: auto;\r\n      z-index: 99;\r\n    }\r\n  }\r\n\r\n  #logo {\r\n    color: var(--green);\r\n  }\r\n\r\n  .overline {\r\n    color: var(--green);\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-md);\r\n    font-weight: 400;\r\n  }\r\n\r\n  .subtitle {\r\n    color: var(--green);\r\n    margin: 0 0 20px 0;\r\n    font-size: var(--fz-md);\r\n    font-family: var(--font-mono);\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    @media (max-width: 1080px) {\r\n      font-size: var(--fz-sm);\r\n    }\r\n    @media (max-width: 768px) {\r\n      font-size: var(--fz-xs);\r\n    }\r\n\r\n    a {\r\n      ${({ theme }) => theme.mixins.inlineLink};\r\n      line-height: 1.5;\r\n    }\r\n  }\r\n\r\n  .breadcrumb {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 50px;\r\n    color: var(--green);\r\n\r\n    .arrow {\r\n      display: block;\r\n      margin-right: 10px;\r\n      padding-top: 4px;\r\n    }\r\n\r\n    a {\r\n      ${({ theme }) => theme.mixins.inlineLink};\r\n      font-family: var(--font-mono);\r\n      font-size: var(--fz-sm);\r\n      font-weight: 600;\r\n      line-height: 1.5;\r\n      text-transform: uppercase;\r\n      letter-spacing: 0.1em;\r\n    }\r\n  }\r\n\r\n  .gatsby-image-outer-wrapper {\r\n    height: 100%;\r\n  }\r\n\r\n  ${TransitionStyles};\r\n\r\n  ${PrismStyles};\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const navLinks = [\r\n  { url: \"/dashboard\", name: \"Home\", icon:\"HOME\" },\r\n  { url: \"/tips\", name: \"Tips\" , icon: \"IDEA\"},\r\n  // { url: \"/frontend\", name: \"FrontEnd\",icon: \"x\" },\r\n  { url: \"/credits\", name: \"credits\",icon : \"Star\" },\r\n];\r\nexport const loaderDelay = 2000;\r\n\r\nexport const KEY_CODES = {\r\n  ARROW_LEFT: 'ArrowLeft',\r\n  ARROW_LEFT_IE11: 'Left',\r\n  ARROW_RIGHT: 'ArrowRight',\r\n  ARROW_RIGHT_IE11: 'Right',\r\n  ARROW_UP: 'ArrowUp',\r\n  ARROW_UP_IE11: 'Up',\r\n  ARROW_DOWN: 'ArrowDown',\r\n  ARROW_DOWN_IE11: 'Down',\r\n  ESCAPE: 'Escape',\r\n  ESCAPE_IE11: 'Esc',\r\n  TAB: 'Tab',\r\n  SPACE: ' ',\r\n  SPACE_IE11: 'Spacebar',\r\n  ENTER: 'Enter',\r\n};","import { useState, useEffect } from 'react';\r\n\r\n\r\nconst SCROLL_UP = 'up';\r\nconst SCROLL_DOWN = 'down';\r\n\r\n\r\nexport const useScrollDirection = ({ initialDirection, thresholdPixels, off } = {}) => {\r\n  const [scrollDir, setScrollDir] = useState(initialDirection);\r\n\r\n  useEffect(() => {\r\n    const threshold = thresholdPixels || 0;\r\n    let lastScrollY = window.pageYOffset;\r\n    let ticking = false;\r\n\r\n    const updateScrollDir = () => {\r\n      const scrollY = window.pageYOffset;\r\n\r\n      if (Math.abs(scrollY - lastScrollY) < threshold) {\r\n        // We haven't exceeded the threshold\r\n        ticking = false;\r\n        return;\r\n      }\r\n\r\n      setScrollDir(scrollY > lastScrollY ? SCROLL_DOWN : SCROLL_UP);\r\n      lastScrollY = scrollY > 0 ? scrollY : 0;\r\n      ticking = false;\r\n    };\r\n\r\n    const onScroll = () => {\r\n      if (!ticking) {\r\n        window.requestAnimationFrame(updateScrollDir);\r\n        ticking = true;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Bind the scroll handler if `off` is set to false.\r\n     * If `off` is set to true reset the scroll direction.\r\n     */\r\n    !off ? window.addEventListener('scroll', onScroll) : setScrollDir(initialDirection);\r\n\r\n    return () => window.removeEventListener('scroll', onScroll);\r\n  }, [initialDirection, thresholdPixels, off]);\r\n\r\n  return scrollDir;\r\n};\r\n\r\nexport default useScrollDirection;\r\n","/**\r\n * https://www.joshwcomeau.com/snippets/react-hooks/use-prefers-reduced-motion/\r\n */\r\n\r\n import { useState, useEffect } from 'react';\r\n const QUERY = '(prefers-reduced-motion: no-preference)';\r\n const isRenderingOnServer = typeof window === 'undefined';\r\n \r\n const getInitialState = () =>\r\n   // For our initial server render, we won't know if the user\r\n   // prefers reduced motion, but it doesn't matter. This value\r\n   // will be overwritten on the client, before any animations\r\n   // occur.\r\n   isRenderingOnServer ? true : !window.matchMedia(QUERY).matches;\r\n export function usePrefersReducedMotion() {\r\n   const [prefersReducedMotion, setPrefersReducedMotion] = useState(getInitialState);\r\n   useEffect(() => {\r\n     const mediaQueryList = window.matchMedia(QUERY);\r\n     const listener = event => {\r\n       setPrefersReducedMotion(!event.matches);\r\n     };\r\n     mediaQueryList.addListener(listener);\r\n     return () => {\r\n       mediaQueryList.removeListener(listener);\r\n     };\r\n   }, []);\r\n   return prefersReducedMotion;\r\n }\r\n \r\n//  export  usePrefersReducedMotion;\r\n ","import { useEffect } from 'react';\r\n\r\n// https://usehooks.com/useOnClickOutside/\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(\r\n    () => {\r\n      const listener = event => {\r\n        // Do nothing if clicking ref's element or descendent elements\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return;\r\n        }\r\n\r\n        handler(event);\r\n      };\r\n\r\n      document.addEventListener('mousedown', listener);\r\n      document.addEventListener('touchstart', listener);\r\n\r\n      return () => {\r\n        document.removeEventListener('mousedown', listener);\r\n        document.removeEventListener('touchstart', listener);\r\n      };\r\n    },\r\n    // Add ref and handler to effect dependencies\r\n    // It's worth noting that because passed in handler is a new ...\r\n    // ... function on every render that will cause this effect ...\r\n    // ... callback/cleanup to run every render. It's not a big deal ...\r\n    // ... but to optimize you can wrap handler in useCallback before ...\r\n    // ... passing it into this hook.\r\n    [ref, handler],\r\n  );\r\n};\r\n\r\nexport default useOnClickOutside;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { navLinks, KEY_CODES } from \"../core/constants\";\r\nimport { useOnClickOutside } from \"../hooks/useOnClickOutside\";\r\nimport { Icon } from \"../Components/icons\";\r\n\r\nconst StyledMenu = styled.div`\r\n  display: none;\r\n\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst StyledHamburgerButton = styled.button`\r\n  display: none;\r\n\r\n  @media (max-width: 768px) {\r\n    ${({ theme }) => theme.mixins.flexCenter};\r\n    position: relative;\r\n    z-index: 10;\r\n    margin-right: -15px;\r\n    padding: 15px;\r\n    border: 0;\r\n    background-color: transparent;\r\n    color: inherit;\r\n    text-transform: none;\r\n    transition-timing-function: linear;\r\n    transition-duration: 0.15s;\r\n    transition-property: opacity, filter;\r\n  }\r\n\r\n  .ham-box {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: var(--hamburger-width);\r\n    height: 24px;\r\n  }\r\n\r\n  .ham-box-inner {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 0;\r\n    width: var(--hamburger-width);\r\n    height: 2px;\r\n    border-radius: var(--border-radius);\r\n    background-color: var(--lightest-slate);\r\n    transition-duration: 0.22s;\r\n    transition-property: transform;\r\n    transition-delay: ${(props) => (props.menuOpen ? `0.12s` : `0s`)};\r\n    transform: rotate(${(props) => (props.menuOpen ? `225deg` : `0deg`)});\r\n    transition-timing-function: cubic-bezier(\r\n      ${(props) =>\r\n        props.menuOpen ? `0.215, 0.61, 0.355, 1` : `0.55, 0.055, 0.675, 0.19`}\r\n    );\r\n    &:before,\r\n    &:after {\r\n      content: \"\";\r\n      display: block;\r\n      position: absolute;\r\n      left: auto;\r\n      right: 0;\r\n      width: var(--hamburger-width);\r\n      height: 2px;\r\n      border-radius: 4px;\r\n      background-color: var(--lightest-slate);\r\n      transition-timing-function: ease;\r\n      transition-duration: 0.15s;\r\n      transition-property: transform;\r\n    }\r\n    &:before {\r\n      width: ${(props) => (props.menuOpen ? `100%` : `100%`)};\r\n      top: ${(props) => (props.menuOpen ? `0` : `-10px`)};\r\n      opacity: ${(props) => (props.menuOpen ? 0 : 1)};\r\n      transition: ${({ menuOpen }) =>\r\n        menuOpen ? \"var(--ham-before-active)\" : \"var(--ham-before)\"};\r\n    }\r\n    &:after {\r\n      width: ${(props) => (props.menuOpen ? `100%` : `100%`)};\r\n      bottom: ${(props) => (props.menuOpen ? `0` : `-10px`)};\r\n      transform: rotate(${(props) => (props.menuOpen ? `-90deg` : `0`)});\r\n      transition: ${({ menuOpen }) =>\r\n        menuOpen ? \"var(--ham-after-active)\" : \"var(--ham-after)\"};\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledSidebar = styled.aside`\r\n  display: none;\r\n\r\n  @media (max-width: 768px) {\r\n    ${({ theme }) => theme.mixins.flexCenter};\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    padding: 50px 10px;\r\n    width: min(75vw, 400px);\r\n    height: 100vh;\r\n    outline: 0;\r\n    background-color: var(--light-navy);\r\n    box-shadow: -10px 0px 30px -15px var(--navy-shadow);\r\n    z-index: 9;\r\n    transform: translateX(${(props) => (props.menuOpen ? 0 : 100)}vw);\r\n    visibility: ${(props) => (props.menuOpen ? \"visible\" : \"hidden\")};\r\n    transition: var(--transition);\r\n  }\r\n\r\n  nav {\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    width: 100%;\r\n    flex-direction: column;\r\n    color: var(--lightest-slate);\r\n    font-family: var(--font-mono);\r\n    text-align: center;\r\n  }\r\n\r\n  ol {\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style: none;\r\n    width: 100%;\r\n\r\n    li {\r\n      position: relative;\r\n      margin: 0 auto 20px;\r\n      /* counter-increment: item 1; */\r\n      font-size: clamp(var(--fz-sm), 4vw, var(--fz-lg));\r\n\r\n      @media (max-width: 600px) {\r\n        margin: 0 auto 10px;\r\n      }\r\n\r\n      &:before {\r\n        /* content: '0' counter(item) '.'; */\r\n        display: block;\r\n        margin-bottom: 5px;\r\n        color: var(--lightest-slate);\r\n        font-size: var(--fz-sm);\r\n      }\r\n    }\r\n\r\n    a {\r\n      ${({ theme }) => theme.mixins.link};\r\n      width: 100%;\r\n      padding: 3px 20px 20px;\r\n    }\r\n  }\r\n\r\n  .resume-button {\r\n    ${({ theme }) => theme.mixins.bigButton};\r\n    padding: 18px 50px;\r\n    margin: 10% auto 0;\r\n    width: max-content;\r\n    /* ${({ theme }) => theme.mixins.smallButton} */\r\n    /* margin-left: 15px; */\r\n    /* font-size: var(--fz-xs); */\r\n    border-radius:0;\r\n    color: var(--lightest-slate);\r\n    border-color: var(--lightest-slate);\r\n  }\r\n  .nav-icon svg{\r\n    width:auto !important;\r\n  }\r\n  .link{\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    gap: 10px;\r\n    svg{\r\n        height: 15px;\r\n    }\r\n    .name{\r\n      margin-top:3px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => setMenuOpen(!menuOpen);\r\n\r\n  const buttonRef = useRef(null);\r\n  const navRef = useRef(null);\r\n\r\n  let menuFocusables;\r\n  let firstFocusableEl;\r\n  let lastFocusableEl;\r\n\r\n  const setFocusables = () => {\r\n    menuFocusables = [\r\n      buttonRef.current,\r\n      ...Array.from(navRef.current.querySelectorAll(\"a\")),\r\n    ];\r\n    firstFocusableEl = menuFocusables[0];\r\n    lastFocusableEl = menuFocusables[menuFocusables.length - 1];\r\n  };\r\n\r\n  const handleBackwardTab = (e) => {\r\n    if (document.activeElement === firstFocusableEl) {\r\n      e.preventDefault();\r\n      lastFocusableEl.focus();\r\n    }\r\n  };\r\n\r\n  const handleForwardTab = (e) => {\r\n    if (document.activeElement === lastFocusableEl) {\r\n      e.preventDefault();\r\n      firstFocusableEl.focus();\r\n    }\r\n  };\r\n\r\n  const onKeyDown = (e) => {\r\n    switch (e.key) {\r\n      case KEY_CODES.ESCAPE:\r\n      case KEY_CODES.ESCAPE_IE11: {\r\n        setMenuOpen(false);\r\n        break;\r\n      }\r\n\r\n      case KEY_CODES.TAB: {\r\n        if (menuFocusables && menuFocusables.length === 1) {\r\n          e.preventDefault();\r\n          break;\r\n        }\r\n        if (e.shiftKey) {\r\n          handleBackwardTab(e);\r\n        } else {\r\n          handleForwardTab(e);\r\n        }\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onResize = (e) => {\r\n    if (e.currentTarget.innerWidth > 768) {\r\n      setMenuOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", onKeyDown);\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    setFocusables();\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyDown);\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n\r\n  const wrapperRef = useRef();\r\n  useOnClickOutside(wrapperRef, () => setMenuOpen(false));\r\n\r\n  return (\r\n    <StyledMenu>\r\n      <Helmet>\r\n        <body className={menuOpen ? \"blur\" : \"\"} />\r\n      </Helmet>\r\n\r\n      <div ref={wrapperRef}>\r\n        <StyledHamburgerButton\r\n          onClick={toggleMenu}\r\n          menuOpen={menuOpen}\r\n          ref={buttonRef}\r\n          aria-label=\"Menu\"\r\n        >\r\n          <div className=\"ham-box\">\r\n            <div className=\"ham-box-inner\" />\r\n          </div>\r\n        </StyledHamburgerButton>\r\n\r\n        <StyledSidebar\r\n          menuOpen={menuOpen}\r\n          aria-hidden={!menuOpen}\r\n          tabIndex={menuOpen ? 1 : -1}\r\n        >\r\n          <nav ref={navRef}>\r\n            {navLinks && (\r\n              <ol>\r\n                {navLinks.map(({ url, name,icon }, i) => (\r\n                  <li key={i}>\r\n                    <NavLink to={url} className=\"link\" onClick={() => setMenuOpen(false)}>\r\n                      <span className=\"nav-icon\">\r\n                        <Icon name={icon} />\r\n                      </span>\r\n                      <span className=\"name\">{name} </span>\r\n                    </NavLink>\r\n                  </li>\r\n                ))}\r\n              </ol>\r\n            )}\r\n             <NavLink className=\"resume-button\" to=\"/contribute\" onClick={() => setMenuOpen(false)}>Contribute</NavLink>\r\n          </nav>\r\n        </StyledSidebar>\r\n      </div>\r\n    </StyledMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { Link } from 'gatsby';\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { loaderDelay } from \"../core/constants\";\r\nimport { useScrollDirection } from \"../hooks/useScrollDirection\";\r\nimport { usePrefersReducedMotion } from \"../hooks/usePrefersReducedMotion\";\r\n\r\nimport Menu from \"../Components/Menu\";\r\nimport { IconLogo, IconIdea } from \"../Components/icons\";\r\nimport { Icon } from \"../Components/icons\";\r\nimport { navLinks } from \"../core/constants\";\r\nconst StyledHeader = styled.header`\r\n  ${({ theme }) => theme.mixins.flexBetween};\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 11;\r\n  padding: 0px 50px;\r\n  width: 100%;\r\n  height: var(--nav-height);\r\n  background-color: rgba(10, 25, 47, 0.85);\r\n  filter: none !important;\r\n  pointer-events: auto !important;\r\n  user-select: auto !important;\r\n  backdrop-filter: blur(10px);\r\n  transition: var(--transition);\r\n\r\n  @media (max-width: 1080px) {\r\n    padding: 0 40px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    padding: 0 25px;\r\n  }\r\n\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    ${(props) =>\r\n      props.scrollDirection === \"up\" &&\r\n      !props.scrolledToTop &&\r\n      css`\r\n        height: var(--nav-scroll-height);\r\n        transform: translateY(0px);\r\n        background-color: rgba(10, 25, 47, 0.85);\r\n        box-shadow: 0 10px 30px -10px var(--navy-shadow);\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.scrollDirection === \"down\" &&\r\n      !props.scrolledToTop &&\r\n      css`\r\n        height: var(--nav-scroll-height);\r\n        transform: translateY(calc(var(--nav-scroll-height) * -1));\r\n        box-shadow: 0 10px 30px -10px var(--navy-shadow);\r\n      `};\r\n  }\r\n  .active {\r\n    color: var(--green);\r\n  }\r\n`;\r\n\r\nconst StyledNav = styled.nav`\r\n  ${({ theme }) => theme.mixins.flexBetween};\r\n  position: relative;\r\n  width: 100%;\r\n  color: var(--lightest-slate);\r\n  font-family: var(--font-mono);\r\n  counter-reset: item 0;\r\n  z-index: 12;\r\n\r\n  .logo {\r\n    ${({ theme }) => theme.mixins.flexCenter};\r\n\r\n    a {\r\n      /* color: var(--green); */\r\n      width: 42px;\r\n      height: 42px;\r\n\r\n      &:hover,\r\n      &:focus {\r\n        svg {\r\n          fill: var(--green-tint);\r\n        }\r\n      }\r\n\r\n      svg {\r\n        fill: none;\r\n        transition: var(--transition);\r\n        user-select: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLinks = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n\r\n  ol {\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style: none;\r\n\r\n    li {\r\n      margin: 0 5px;\r\n      position: relative;\r\n      /* counter-increment: item 1; */\r\n      font-size: var(--fz-xs);\r\n\r\n      a {\r\n        padding: 10px;\r\n\r\n        &:before {\r\n          /* content: \"0\" counter(item) \".\"; */\r\n          margin-right: 5px;\r\n          /* color: var(--green); */\r\n          font-size: var(--fz-xxs);\r\n          text-align: right;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .resume-button {\r\n    ${({ theme }) => theme.mixins.smallButton};\r\n    margin-left: 15px;\r\n    font-size: var(--fz-xs);\r\n    border-radius: 0;\r\n    color: var(--lightest-slate);\r\n    border-color: var(--lightest-slate);\r\n  }\r\n  .nav-icon svg {\r\n    width: auto !important;\r\n  }\r\n  .link {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 10px;\r\n    svg {\r\n      height: 15px;\r\n    }\r\n    .name {\r\n      margin-top: 3px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Nav = ({ isHome }) => {\r\n  const [isMounted, setIsMounted] = useState(isHome);\r\n  const scrollDirection = useScrollDirection(\"down\");\r\n  const [scrolledToTop, setScrolledToTop] = useState(true);\r\n  const prefersReducedMotion = usePrefersReducedMotion();\r\n\r\n  const handleScroll = () => {\r\n    setScrolledToTop(window.pageYOffset < 50);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (prefersReducedMotion) {\r\n      return;\r\n    }\r\n\r\n    const timeout = setTimeout(() => {\r\n      setIsMounted(true);\r\n    }, 100);\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const timeout = isHome ? loaderDelay : 0;\r\n  const fadeClass = isHome ? \"fade\" : \"\";\r\n  const fadeDownClass = isHome ? \"fadedown\" : \"\";\r\n\r\n  const Logo = (\r\n    <div className=\"logo\" tabIndex=\"-1\">\r\n      {isHome ? (\r\n        <a href=\"/\" aria-label=\"home\">\r\n          Nail DSA\r\n        </a>\r\n      ) : (\r\n        <a to=\"/\" aria-label=\"home\">\r\n          {/* <IconLogo /> */}\r\n          Nail DSA\r\n        </a>\r\n        // <Link to=\"/\" aria-label=\"home\">\r\n        //   <IconLogo />\r\n        // </NavLink>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const ResumeLink = (\r\n    <NavLink className=\"resume-button\" to=\"/contribute\">\r\n      Contribute\r\n    </NavLink>\r\n    // <a className=\"resume-button\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n    //   <NavLink to=\"/contribute\">Contribute</NavLink>\r\n    // </a>\r\n  );\r\n\r\n  return (\r\n    <StyledHeader\r\n      scrollDirection={scrollDirection}\r\n      scrolledToTop={scrolledToTop}\r\n    >\r\n      <StyledNav>\r\n        {prefersReducedMotion ? (\r\n          <>\r\n            {Logo}\r\n\r\n            <StyledLinks>\r\n              <ol>\r\n                {navLinks &&\r\n                  navLinks.map(({ url, name }, i) => (\r\n                    <li key={i}>\r\n                      <NavLink to={url}>\r\n                        <i className=\"fa fa-home\"></i>\r\n                        {name}\r\n                      </NavLink>\r\n                    </li>\r\n                  ))}\r\n              </ol>\r\n              <div>{ResumeLink}</div>\r\n            </StyledLinks>\r\n\r\n            <Menu />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <TransitionGroup component={null}>\r\n              {isMounted && (\r\n                <CSSTransition classNames={fadeClass} timeout={timeout}>\r\n                  <>{Logo}</>\r\n                </CSSTransition>\r\n              )}\r\n            </TransitionGroup>\r\n\r\n            <StyledLinks>\r\n              <ol>\r\n                <TransitionGroup component={null}>\r\n                  {isMounted &&\r\n                    navLinks &&\r\n                    navLinks.map(({ url, name, icon }, i) => (\r\n                      <CSSTransition\r\n                        key={i}\r\n                        classNames={fadeDownClass}\r\n                        timeout={timeout}\r\n                      >\r\n                        <li\r\n                          key={i}\r\n                          style={{\r\n                            transitionDelay: `${isHome ? i * 100 : 0}ms`,\r\n                          }}\r\n                        >\r\n                          <NavLink to={url} className=\"link\">\r\n                            <span className=\"nav-icon\">\r\n                              {\" \"}\r\n                              <Icon name={icon} />{\" \"}\r\n                            </span>\r\n                            <span className=\"name\">{name} </span>\r\n                          </NavLink>\r\n                        </li>\r\n                      </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n              </ol>\r\n\r\n              <TransitionGroup component={null}>\r\n                {isMounted && (\r\n                  <CSSTransition classNames={fadeDownClass} timeout={timeout}>\r\n                    <div\r\n                      style={{\r\n                        transitionDelay: `${\r\n                          isHome ? navLinks.length * 100 : 0\r\n                        }ms`,\r\n                      }}\r\n                    >\r\n                      {ResumeLink}\r\n                    </div>\r\n                  </CSSTransition>\r\n                )}\r\n              </TransitionGroup>\r\n            </StyledLinks>\r\n\r\n            <TransitionGroup component={null}>\r\n              {isMounted && (\r\n                <CSSTransition classNames={fadeClass} timeout={timeout}>\r\n                  <Menu />\r\n                </CSSTransition>\r\n              )}\r\n            </TransitionGroup>\r\n          </>\r\n        )}\r\n      </StyledNav>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\n// Nav.propTypes = {\r\n//   isHome: PropTypes.bool,\r\n// };\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useLocation } from 'react-router-dom'\r\nimport Loader from '../Components/Loader'\r\n// import { Head, Loader, Nav, Social, Email, Footer } from '@components';\r\nimport { GlobalStyle, theme } from '../styles';\r\nimport Nav from '../Components/Nav';\r\n// https://medium.com/@chrisfitkin/how-to-smooth-scroll-links-in-gatsby-3dc445299558\r\nif (typeof window !== 'undefined') {\r\n  // eslint-disable-next-line global-require\r\n//   require('smooth-scroll')('a[href*=\"#\"]');\r\n}\r\n\r\nconst StyledContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n  const { pathname:location } = useLocation();\r\n  const isHome = location === '/dashboard';\r\n  const [isLoading, setIsLoading] = useState(isHome);\r\n\r\n  // Sets target=\"_blank\" rel=\"noopener noreferrer\" on external links\r\n  const handleExternalLinks = () => {\r\n    const allLinks = Array.from(document.querySelectorAll('a'));\r\n    if (allLinks.length > 0) {\r\n      allLinks.forEach(link => {\r\n        if (link.host !== window.location.host) {\r\n          link.setAttribute('rel', 'noopener noreferrer');\r\n          link.setAttribute('target', '_blank');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      return;\r\n    }\r\n\r\n    if (location) {\r\n      const id = location.substring(1); // location.hash without the '#'\r\n      setTimeout(() => {\r\n        const el = document.getElementById(id);\r\n        if (el) {\r\n          el.scrollIntoView();\r\n          el.focus();\r\n        }\r\n      }, 0);\r\n    }\r\n\r\n    handleExternalLinks();\r\n  }, [isLoading]);\r\n\r\n  return (\r\n      <div>\r\n          <a className=\"skip-to-content\" href=\"#content\">\r\n            Skip to Content\r\n          </a>\r\n\r\n              {isLoading && isHome ? (\r\n            <Loader finishLoading={() => setIsLoading(false)} />\r\n          ) : (\r\n            <StyledContent>\r\n              <Nav isHome={isHome} />\r\n              <div id=\"content\" className=\"content\">\r\n                {children}\r\n                {/* <Footer /> */}\r\n              </div>\r\n            </StyledContent>\r\n          )}\r\n      </div>\r\n  );\r\n};\r\n\r\n// Layout.propTypes = {\r\n//   children: PropTypes.node.isRequired,\r\n//   location: PropTypes.object.isRequired,\r\n// };\r\n\r\nexport default Layout;\r\n","import ScrollReveal from 'scrollreveal';\r\n\r\nconst isSSR = typeof window === 'undefined';\r\nconst sr = isSSR ? null : ScrollReveal();\r\n\r\nexport default sr;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst StyledCheck = styled.div`\r\n #checklist {\r\n    --background: #ffffff;\r\n    --text: var(--slate);\r\n    --check: var(--dark-navy);\r\n    --disabled: #C3C8DE;\r\n    --width: 100px;\r\n    --height: 140px;\r\n    --border-radius: 10px;\r\n    background: transparent;\r\n    /* width: var(--width); */\r\n    /* height: var(--height); */\r\n    border-radius: var(--border-radius);\r\n    position: relative;\r\n    box-shadow: 0 10px 30px rgba(#414856,0.05);\r\n    /* padding: 30px 45px; */\r\n    display: grid;\r\n    grid-template-columns: 30px auto;\r\n    -webkit-align-items: center;\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    align-items: center;\r\n  label {\r\n    color: var(--text);\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: grid;\r\n    align-items: center;\r\n    width: fit-content;\r\n    transition: color .3s ease;\r\n    &::before,\r\n    &::after {\r\n      content:\"\";\r\n      position: absolute;\r\n    }\r\n    &::before {\r\n      /* height: 2px; */\r\n      /* width: 8px; */\r\n      left: -27px;\r\n      /* background: var(--check); */\r\n      border-radius: 2px;\r\n      transition: background .3s ease; \r\n    }\r\n    &:after {\r\n      height: 4px;\r\n      width: 4px;\r\n      top: 8px;\r\n      left: -25px;\r\n      border-radius: 50%;\r\n    }\r\n  }\r\n  input[type=\"checkbox\"] {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    position: relative;\r\n    height: 15px;\r\n    width: 15px;\r\n    outline: none;\r\n    border: 0;\r\n    margin: 0 15px 0 0;\r\n    cursor: pointer;\r\n    background: #fff;\r\n    display: grid;\r\n    align-items: center;\r\n    /* border: 2px solid var(--lightest-slate); */\r\n    border-radius:2px;\r\n    &::before,\r\n    &::after {\r\n      content:\"\";\r\n      position: absolute;\r\n      height: 2px;\r\n      top: auto;\r\n      background: var(--check);\r\n      border-radius: 2px;\r\n    }\r\n    &::before {\r\n      width: 0px;\r\n      right: 60%;\r\n      transform-origin: right bottom;\r\n    }\r\n    &::after {\r\n      width: 0px;\r\n      left: 40%;\r\n      transform-origin: left bottom;\r\n    }\r\n    &:checked {\r\n      &::before {\r\n        animation: check-01 .4s ease forwards;\r\n      }\r\n      &::after {\r\n        animation: check-02 .4s ease forwards;\r\n      }\r\n      + label {\r\n        color: var(--disabled);\r\n        animation: move .3s ease .1s forwards;\r\n        &::before {\r\n          background: var(--disabled);\r\n          animation: slice .4s ease forwards;\r\n        }\r\n        &::after {\r\n          animation: firework 1s ease forwards .1s;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes move {\r\n  50% {\r\n    padding-left: 8px;\r\n    padding-right: 0px;\r\n  }\r\n  100% {\r\n    padding-right: 4px;\r\n  }\r\n}\r\n@keyframes slice {\r\n  60% {\r\n    width: 100%;\r\n    left: 4px;\r\n  }\r\n  100% {\r\n    width: 100%;\r\n    left: -2px;\r\n    padding-left: 0;\r\n  }\r\n}\r\n@keyframes check-01 {\r\n  0% {\r\n    width: 4px;\r\n    top: auto;\r\n    transform: rotate(0);\r\n  }\r\n  50% {\r\n    width: 0px;\r\n    top: auto;\r\n    transform: rotate(0);\r\n  }\r\n  51% {\r\n    width: 0px;\r\n    top: 8px;\r\n    transform: rotate(45deg);\r\n  }\r\n  100% {\r\n    width: 5px;\r\n    top: 8px;\r\n    transform: rotate(45deg);\r\n  }\r\n}\r\n@keyframes check-02 {\r\n  0% {\r\n    width: 4px;\r\n    top: auto;\r\n    transform: rotate(0);\r\n  }\r\n  50% {\r\n    width: 0px;\r\n    top: auto;\r\n    transform: rotate(0);\r\n  }\r\n  51% {\r\n    width: 0px;\r\n    top: 8px;\r\n    transform: rotate(-45deg);\r\n  }\r\n  100% {\r\n    width: 10px;\r\n    top: 8px;\r\n    transform: rotate(-45deg);\r\n  }\r\n}\r\n@keyframes firework {\r\n  0% {\r\n    opacity: 1;\r\n    box-shadow: 0 0 0 -2px var(--green), 0 0 0 -2px var(--green), 0 0 0 -2px var(--green), 0 0 0 -2px var(--green), 0 0 0 -2px var(--green), 0 0 0 -2px var(--green);\r\n  }\r\n  30% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    box-shadow: 0 -15px 0 0px var(--green), 14px -8px 0 0px var(--green), 14px 8px 0 0px var(--green), 0 15px 0 0px var(--green), -14px 8px 0 0px var(--green), -14px -8px 0 0px var(--green);\r\n  }\r\n}\r\n`;\r\nconst checkbox = (props) => {\r\n  return (\r\n    <StyledCheck>\r\n      <div id=\"checklist\">\r\n        <input id=\"01\" type=\"checkbox\" name=\"r\" checked={props.checked} value={props.checked} onChange={props.onCheck} />\r\n        <label htmlFor=\"01\"></label>\r\n      </div>\r\n    </StyledCheck>\r\n  );\r\n};\r\n\r\nexport default checkbox;\r\n","import React, { useRef, useEffect } from \"react\";\r\n// import { Helmet } from 'react-helmet';\r\nimport styled from \"styled-components\";\r\nimport { srConfig } from \"../../config\";\r\nimport sr from \"../../util/sr\";\r\n// import { Icon } from '@components/icons';\r\n// import { usePrefersReducedMotion } from '@hooks';\r\nimport { Icon } from \"../icons\";\r\nimport Checkbox from \"../Checkbox\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst StyledTableContainer = styled.div`\r\n  margin: 50px -20px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 50px -10px;\r\n  }\r\n\r\n  .company-icon {\r\n    /* height:20px !important; */\r\n    /* width: 20px !important; */\r\n    padding: 5px;\r\n  }\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n\r\n    .hide-on-mobile {\r\n      @media (max-width: 768px) {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    tbody tr {\r\n      &:hover,\r\n      &:focus {\r\n        background-color: var(--light-navy);\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      padding: 10px;\r\n      text-align: left;\r\n\r\n      &:first-child {\r\n        padding-left: 20px;\r\n\r\n        @media (max-width: 768px) {\r\n          padding-left: 10px;\r\n        }\r\n      }\r\n      &:last-child {\r\n        padding-right: 20px;\r\n\r\n        @media (max-width: 768px) {\r\n          padding-right: 10px;\r\n        }\r\n      }\r\n\r\n      svg {\r\n        width: 20px;\r\n        height: 20px;\r\n      }\r\n    }\r\n\r\n    tr {\r\n      cursor: default;\r\n\r\n      td:first-child {\r\n        border-top-left-radius: var(--border-radius);\r\n        border-bottom-left-radius: var(--border-radius);\r\n      }\r\n      td:last-child {\r\n        border-top-right-radius: var(--border-radius);\r\n        border-bottom-right-radius: var(--border-radius);\r\n      }\r\n    }\r\n\r\n    td {\r\n      &.checkbox {\r\n        padding-right: 20px;\r\n\r\n        @media (max-width: 768px) {\r\n          padding-right: 10px;\r\n          font-size: var(--fz-sm);\r\n        }\r\n      }\r\n\r\n      &.title {\r\n        padding-top: 15px;\r\n        padding-right: 20px;\r\n        color: var(--lightest-slate);\r\n        font-size: var(--fz-xl);\r\n        font-weight: 600;\r\n        line-height: 1.25;\r\n        @media (max-width: 768px) {\r\n            font-size: var(--fz-xs)\r\n        }\r\n      }\r\n\r\n      &.difficulty {\r\n        font-size: var(--fz-lg);\r\n        white-space: nowrap;\r\n        @media (max-width: 768px) {\r\n            font-size: var(--fz-xs)\r\n        }\r\n      }\r\n\r\n      &.pattern {\r\n        font-size: var(--fz-xxs);\r\n        font-family: var(--font-mono);\r\n        line-height: 1.5;\r\n        .separator {\r\n          margin: 0 5px;\r\n        }\r\n        span {\r\n          display: inline-block;\r\n        }\r\n      }\r\n\r\n      &.links {\r\n        min-width: 100px;\r\n\r\n        div {\r\n          display: flex;\r\n          align-items: center;\r\n\r\n          a {\r\n            ${({ theme }) => theme.mixins.flexCenter};\r\n            flex-shrink: 0;\r\n          }\r\n\r\n          a + a {\r\n            margin-left: 10px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Table = (props) => {\r\n  const { questions:projects } = props;\r\n  const revealTitle = useRef(null);\r\n  const revealTable = useRef(null);\r\n  const revealProjects = useRef([]);\r\n  const prefersReducedMotion = false; //usePrefersReducedMotion();\r\n  useEffect(() => {\r\n    if (prefersReducedMotion) {\r\n      return;\r\n    }\r\n\r\n    sr.reveal(revealTitle.current, srConfig());\r\n    sr.reveal(revealTable.current, srConfig(200, 0));\r\n    revealProjects.current.forEach((ref, i) =>\r\n      sr.reveal(ref, srConfig(i * 10))\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <StyledTableContainer ref={revealTable}>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>Question</th>\r\n            <th>Difficulty</th>\r\n            {/* <th className=\"hide-on-mobile\">Pattern</th> */}\r\n            <th className=\"hide-on-mobile\">Solution</th>\r\n            <th className=\"hide-on-mobile\">Asked In</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.length > 0 &&\r\n            projects.map((node, i) => {\r\n              const {\r\n                url,\r\n                premium,\r\n                id,\r\n                name,\r\n                companies,\r\n                difficulty,\r\n                checked,\r\n                pattern,\r\n              } = node;\r\n              return (\r\n                <tr key={i} ref={(el) => (revealProjects.current[i] = el)}>\r\n                  <td className=\"overline checkbox\">\r\n                    <Checkbox\r\n                      checked={checked}\r\n                      onCheck={(e) => props.toggleCheck(id)}\r\n                    />\r\n                  </td>\r\n\r\n                  <td className=\"title\">\r\n                    <a href={url}>\r\n                      {name} <Icon name=\"LeetCode\" />{\" \"}\r\n                    </a>\r\n                  </td>\r\n                  <td className=\"difficulty\">\r\n                    {difficulty ? <span>{difficulty}</span> : <span>—</span>}\r\n                  </td>\r\n                  {/* <td className=\"pattern hide-on-mobile\">\r\n                    {pattern.length > 0 &&\r\n                      pattern.map((item, i) => (\r\n                        <span key={i}>\r\n                          { 1>2? item: `${new Array(item.length).fill('*').join('')}` }\r\n                          {\"\"}\r\n                          {i !== pattern.length - 1 && (\r\n                            <span className=\"separator\">&middot;</span>\r\n                          )}\r\n                        </span>\r\n                      ))}\r\n                  </td> */}\r\n                  <td className=\"links hide-on-mobile\">\r\n                    <div>\r\n                      {url && (\r\n                        <a\r\n                          href={\r\n                            url + \"discuss/?currentPage=1&orderBy=most_votes\"\r\n                          }\r\n                          // aria-label=\"External Link\"\r\n                          className=\"company-icon\"\r\n                          data-for=\"main\"\r\n                          data-tip=\"LeetCode discussions\"\r\n                          data-iscapture=\"true\"\r\n                        >\r\n                          <Icon name=\"External\"  />\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n\r\n                  <td className=\"pattern hide-on-mobile\">\r\n                    {companies.length > 0 &&\r\n                      companies.map((item, i) => (\r\n                        <span\r\n                          key={i}\r\n                          className=\"company-icon\"\r\n                          data-for=\"main\"\r\n                          data-tip={item}\r\n                          data-iscapture=\"true\"\r\n                        >\r\n                          <Icon key={i} name={`${item}`} />\r\n                        </span>\r\n                      ))}\r\n                    <ReactTooltip\r\n                      id=\"main\"\r\n                      place={\"top\"}\r\n                      type={\"dark\"}\r\n                      effect={\"float\"}\r\n                      multiline={true}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </StyledTableContainer>\r\n  );\r\n};\r\n// ArchivePage.propTypes = {\r\n//   location: PropTypes.object.isRequired,\r\n//   data: PropTypes.object.isRequired,\r\n// };\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nclass ChangingProgressProvider extends React.Component {\r\n  static defaultProps = {\r\n    interval: 1000,\r\n  };\r\n\r\n  state = {\r\n    valuesIndex: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      this.setState({\r\n        valuesIndex: (this.state.valuesIndex + 1) % this.props.values.length,\r\n      });\r\n    }, this.props.interval);\r\n  }\r\n\r\n  render() {\r\n    return this.props.children(this.props.values[this.state.valuesIndex]);\r\n  }\r\n}\r\n\r\nexport default ChangingProgressProvider;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport styled from \"styled-components\";\r\n// import { srConfig } from '@config';\r\n// import sr from '@utils/sr';\r\n// import { Icon } from '@components/icons';\r\n// import { usePrefersReducedMotion } from '@hooks';\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport Table from \"../Table/Table\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport ChangingProgressProvider from \"../shared/progressProvider\";\r\nimport Switch from \"react-switch\";\r\n\r\nconst StyledProjectsSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  h2 {\r\n    font-size: clamp(24px, 5vw, 32px);\r\n  }\r\n\r\n  .archive-link {\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-sm);\r\n    &:after {\r\n      bottom: 0.1em;\r\n    }\r\n  }\r\n\r\n  .projects-grid {\r\n    ${({ theme }) => theme.mixins.resetList};\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(1000px, 1fr));\r\n    grid-gap: 15px;\r\n    position: relative;\r\n    margin-top: 50px;\r\n\r\n    @media (max-width: 1080px) {\r\n      grid-template-columns: repeat(auto-fill, minmax(1fr));\r\n    }\r\n  }\r\n\r\n  .more-button {\r\n    ${({ theme }) => theme.button};\r\n    margin: 80px auto 0;\r\n  }\r\n`;\r\n\r\nconst StyledProject = styled.div`\r\n  margin: 20px;\r\n  width: 70%;\r\n  position: relative;\r\n  cursor: default;\r\n  /* justify-content:center; */\r\n  transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n  list-style-type: none;\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    &:hover,\r\n    &:focus-within {\r\n      .project-inner {\r\n        /* transform: translateY(-7px); */\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 95%;\r\n    margin: 10px;\r\n  }\r\n  .hide-on-mobile {\r\n    @media (max-width: 768px) {\r\n      display: none;\r\n    }\r\n  }\r\n  a {\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n  .chart-helper {\r\n    text-align: center;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .project-inner {\r\n    ${({ theme }) => theme.mixins.boxShadow};\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    flex-direction: row;\r\n    align-items: center;\r\n    position: relative;\r\n    height: 100%;\r\n    padding: 2rem 1.75rem;\r\n    border-radius: 4px;\r\n    background-color: #112240;\r\n    transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n    width: 100%;\r\n    justify-content: space-around;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .project-top {\r\n    ${({ theme }) => theme.mixins.flexBetween};\r\n    margin-bottom: 35px;\r\n\r\n    .folder {\r\n      color: var(--green);\r\n      svg {\r\n        width: 40px;\r\n        height: 40px;\r\n      }\r\n    }\r\n\r\n    .project-links {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-right: -10px;\r\n      color: #a8b2d1;\r\n\r\n      a {\r\n        ${({ theme }) => theme.mixins.flexCenter};\r\n        padding: 5px 7px;\r\n\r\n        &.external {\r\n          svg {\r\n            width: 22px;\r\n            height: 22px;\r\n            margin-top: -4px;\r\n          }\r\n        }\r\n\r\n        svg {\r\n          width: 20px;\r\n          height: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .project-title {\r\n    margin: 0 0 10px;\r\n    color: #ccd6f6;\r\n    font-size: 22px;\r\n\r\n    a {\r\n      position: static;\r\n\r\n      &:before {\r\n        content: \"\";\r\n        display: block;\r\n        position: absolute;\r\n        z-index: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n    }\r\n  }\r\n  .question-section {\r\n    background: #192946;\r\n    /* height: 200px; */\r\n    /* border-radius: 4px; */\r\n    padding-left: 25px;\r\n    padding-right: 25px;\r\n    padding-top: 20px;\r\n    z-index: -1;\r\n    /* margin-top: -100px; */\r\n    -webkit-animation: slide-down 3s ease-out;\r\n    -moz-animation: slide-down 3s ease-out;\r\n    animation: slide-down 0.5s ease-out;\r\n  }\r\n  .card-label{\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 0.3em;\r\n    margin-left: 1em;\r\n  }\r\n  @-webkit-keyframes slide-down {\r\n    0% {\r\n      opacity: 0;\r\n      -webkit-transform: translateY(-100%);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      -webkit-transform: translateY(0);\r\n    }\r\n  }\r\n  @-moz-keyframes slide-down {\r\n    0% {\r\n      opacity: 0;\r\n      -moz-transform: translateY(-100%);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      -moz-transform: translateY(0);\r\n    }\r\n  }\r\n  @keyframes slide-down {\r\n    0% {\r\n      opacity: 0;\r\n      -moz-transform: translateY(-100%);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      -moz-transform: translateY(0);\r\n    }\r\n  }\r\n  .project-description {\r\n    color: #a8b2d1;\r\n    font-size: 17px;\r\n\r\n    a {\r\n      ${({ theme }) => theme.mixins.inlineLink};\r\n    }\r\n  }\r\n\r\n  .project-tech-list {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    flex-grow: 1;\r\n    flex-wrap: wrap;\r\n    padding: 0;\r\n    margin: 20px 0 0 0;\r\n    list-style: none;\r\n\r\n    li {\r\n      font-size: 12px;\r\n      line-height: 1.75;\r\n\r\n      &:not(:last-of-type) {\r\n        margin-right: 15px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Card = (props) => {\r\n  const [showQuestions, setShowQuestions] = useState(false);\r\n  const { questionList, meta } = props;\r\n  const [questionInfo, setQuestionInfo] = useState({});\r\n  const [solveCount, setSolveCount] = useState(0);\r\n  const [questionsList, setQuestionsList] = useState([]);\r\n  const [hideSolved, setHideSolved] = useState(false);\r\n  const [viewAbleQuestions, setViewAbleQuestions] = useState(false);\r\n  useEffect(() => {}, []);\r\n  useEffect(() => {\r\n    const hideAnswered = window.localStorage.getItem(\"hide\" + meta.category);\r\n    console.log(\"answered : \", hideAnswered);\r\n    if (hideAnswered === null) {\r\n      window.localStorage.setItem(\"hide\" + meta.category, \"false\");\r\n      setHideSolved(false);\r\n    }\r\n    const questionCheckedList =\r\n      window.localStorage.getItem(\"iut2jkqwpxww\") || \"{}\"; //btoa(JSON.stringify({}));\r\n    console.log(\"********\", questionCheckedList);\r\n    // console.log(atob(questionCheckedList));\r\n    const revisedCheckList = [];\r\n    const decidedCheckList = JSON.parse(questionCheckedList); //JSON.parse(atob(questionCheckedList));\r\n    const tempList = [...questionList];\r\n    const tempQuestionInfo = {};\r\n    let tempSolveCount = 0;\r\n    console.log();\r\n    questionList.forEach((element) => {\r\n      const item = tempQuestionInfo[element.difficulty];\r\n      if (item) {\r\n        tempQuestionInfo[element.difficulty] = item + 1;\r\n      } else {\r\n        tempQuestionInfo[element.difficulty] = 1;\r\n      }\r\n    });\r\n    // console.log(\"Questions : \", questionInfo);\r\n    const viewAbleQuestions = [];\r\n    questionList.forEach((project, i) => {\r\n      if (!decidedCheckList[project.id]) {\r\n        decidedCheckList[project.id] = { checked: false };\r\n        tempList[i].checked = false;\r\n      } else {\r\n        // revisedCheckList.push({ id: project.id, checked: true });\r\n        const checked = decidedCheckList[project.id].checked;\r\n        tempList[i].checked = checked;\r\n        if (checked) tempSolveCount++;\r\n      }\r\n      if (hideAnswered == \"true\") {\r\n        if (!tempList[i].checked) viewAbleQuestions.push(tempList[i]);\r\n      } else {\r\n        viewAbleQuestions.push(tempList[i]);\r\n      }\r\n    });\r\n    // console.log(\"******** reviesd list\", decidedCheckList);\r\n    setViewAbleQuestions(viewAbleQuestions);\r\n    setHideSolved(hideAnswered == \"true\" ? true : false);\r\n    setQuestionsList(tempList);\r\n    setSolveCount(tempSolveCount);\r\n    setQuestionInfo(tempQuestionInfo);\r\n    window.localStorage.setItem(\r\n      \"iut2jkqwpxww\",\r\n      JSON.stringify(decidedCheckList)\r\n      //btoa(JSON.stringify(revisedCheckList))\r\n    );\r\n    // return () => {\r\n    //   window.localStorage.setItem('iut2jkqwpxww', JSON.stringify(questionsList));\r\n    // }\r\n  }, []);\r\n  const toggleCheck = (id) => {\r\n    const item = JSON.parse(window.localStorage.getItem(\"iut2jkqwpxww\"));\r\n    console.log(\"toggle check\", id);\r\n    const tempList = [...viewAbleQuestions];\r\n    const checkedRowIndex = tempList.findIndex((item) => item.id === id);\r\n    const value = tempList[checkedRowIndex].checked;\r\n    console.log(\"toggle check value\", value);\r\n    tempList[checkedRowIndex] = {\r\n      ...tempList[checkedRowIndex],\r\n      checked: !value,\r\n    };\r\n    item[id] = { checked: !value };\r\n    const tempCount = !value ? solveCount + 1 : solveCount - 1;\r\n    if (hideSolved) {\r\n      const newArr = tempList.filter(\r\n        (item, index) => index !== checkedRowIndex\r\n      );\r\n      setViewAbleQuestions(newArr);\r\n    } else {\r\n      setViewAbleQuestions(tempList);\r\n    }\r\n    setQuestionsList(tempList);\r\n    setSolveCount(tempCount);\r\n\r\n    window.localStorage.setItem(\"iut2jkqwpxww\", JSON.stringify(item));\r\n  };\r\n  const toggleShow = (e) => {\r\n    setShowQuestions(!showQuestions);\r\n  };\r\n  const toggleAnswer = () => {\r\n    console.log(\"clicked\");\r\n    if (hideSolved) {\r\n      window.localStorage.setItem(\"hide\" + meta.category, \"false\");\r\n      setViewAbleQuestions(questionsList);\r\n      setHideSolved(false);\r\n    } else {\r\n      window.localStorage.setItem(\"hide\" + meta.category, \"true\");\r\n      let tempQues = questionsList.filter((q) => !q.checked);\r\n      setHideSolved(true);\r\n      setViewAbleQuestions(tempQues);\r\n    }\r\n  };\r\n  return (\r\n    <StyledProject>\r\n      <div className=\"project-inner\" onClick={toggleShow}>\r\n        <header style={{ width: \"33%\" }}>\r\n          <div className=\"project-top\">\r\n            {/* <div className=\"folder\">\r\n                  icon\r\n                </div> */}\r\n            <div className=\"project-links\">\r\n              {1 > 2 && (\r\n                <a\r\n                  href={\"\"}\r\n                  aria-label=\"GitHub Link\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                ></a>\r\n              )}\r\n              {2 > 3 && (\r\n                <a\r\n                  href={\"\"}\r\n                  aria-label=\"External Link\"\r\n                  className=\"external\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                ></a>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <h3 className=\"project-title\">{meta.category}</h3>\r\n          {/* <div className=\"project-description\"> Backtracking </div> */}\r\n        </header>\r\n        <div\r\n          className=\"hide-on-mobile problems-dist\"\r\n          style={{ width: \"100px\", height: \"70px\", width: \"33%\" }}\r\n          data-for=\"mains\"\r\n          data-tip={`You've solved ${solveCount} problems out of ${questionsList.length}`}\r\n          data-iscapture=\"true\"\r\n        >\r\n          <PieChart\r\n            lineWidth={20}\r\n            rounded\r\n            animate={true}\r\n            data={[\r\n              {\r\n                title: `Easy-${questionInfo.Easy ? questionInfo.Easy : \"0\"}`,\r\n                value: questionInfo.Easy ? questionInfo.Easy : 0,\r\n                color: \"var(--light-green)\",\r\n              },\r\n              {\r\n                title: `Medium-${\r\n                  questionInfo.Medium ? questionInfo.Medium : \"0\"\r\n                }`,\r\n                value: questionInfo.Medium ? questionInfo.Medium : 0,\r\n                color: \"#f19e06\",\r\n              },\r\n              {\r\n                title: `Hard-${questionInfo.Hard ? questionInfo.Hard : \"0\"}`,\r\n                value: questionInfo.Hard ? questionInfo.Hard : 0,\r\n                color: \"#f51212\",\r\n              },\r\n            ]}\r\n          />\r\n          <h5 className=\"chart-helper\">Problems</h5>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"100px\",\r\n            height: \"70px\",\r\n            alignSelf: \"flex-start\",\r\n            width: \"33%\",\r\n          }}\r\n          className=\"problems-solved\"\r\n        >\r\n          <CircularProgressbar\r\n            value={`${Math.round((solveCount * 100) / questionsList.length)}`}\r\n            text={`${solveCount} / ${questionsList.length}`}\r\n            styles={buildStyles({\r\n              textColor: \"var(--lightest-slate)\",\r\n              pathColor: \"var(--light-green)\",\r\n            })}\r\n          />\r\n          <h5 data-tip={`you have solved ${solveCount} problems`} className=\"chart-helper\">\r\n            Solved\r\n          </h5>\r\n          <ReactTooltip place=\"left\" type=\"dark\" effect=\"float\" />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"question-section\"\r\n        style={{ display: showQuestions ? \"\" : \"none\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {/* <button type=\"checkbox\" className=\"resume-button\" onClick={toggleAnswer}> Hide Answered </button> */}\r\n          <label className=\"card-label\">\r\n            <span style={{fontSize:'14px',fontWeight:'500',marginRight:'5px',marginTop:'5px',color:'var(--lightest-slate)'}}>hide answered</span>\r\n            <Switch\r\n              onChange={toggleAnswer}\r\n              checked={hideSolved}\r\n              onColor=\"#86d3ff\"\r\n              onHandleColor=\"#2693e6\"\r\n              handleDiameter={20}\r\n              uncheckedIcon={false}\r\n              checkedIcon={false}\r\n              boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n              activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n              height={14}\r\n              width={28}\r\n              className=\"react-switch\"\r\n              id=\"material-switch\"\r\n            />\r\n          </label>\r\n        </div>\r\n        {showQuestions && (\r\n          <Table questions={viewAbleQuestions} toggleCheck={toggleCheck} />\r\n        )}\r\n      </div>\r\n    </StyledProject>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export const rootPattern = ['Arrays', 'BackTracking', 'Dynamic Programming','Tree', 'Graph','Heap','Trie','Two Pointers','Fast & Slow Pointers'];\r\nconst questionss = [\r\n  {\r\n    id: 0,\r\n    name: 'Contains Duplicate',\r\n    url: 'https://leetcode.com/problems/contains-duplicate/',\r\n    pattern: ['Arrays'],\r\n    difficulty: 'Easy',\r\n    premium: false, \r\n    companies: ['Apple', 'Microsoft', 'Adobe'],\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Missing Number',\r\n    url: 'https://leetcode.com/problems/missing-number/',\r\n    pattern: ['Arrays', 'Bit Manipulation'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Capital One',\r\n      'Amazon',\r\n      'Apple',\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Goldman Sachs',\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Find All Numbers Disappeared in an Array',\r\n    url:\r\n      'https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/',\r\n    pattern: ['Arrays'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Amazon'],\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Single Number',\r\n    url: 'https://leetcode.com/problems/single-number/',\r\n    pattern: ['Arrays', 'Bit Manipulation'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Google', 'Amazon', 'Facebook'],\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Product of Array Except Self',\r\n    url: 'https://leetcode.com/problems/product-of-array-except-self/',\r\n    pattern: ['Arrays'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Apple',\r\n      'Microsoft',\r\n      'Asana',\r\n      'Lyft',\r\n      'Adobe',\r\n      'Uber',\r\n      'Oracle',\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Find the Duplicate Number',\r\n    url: 'https://leetcode.com/problems/find-the-duplicate-number/',\r\n    pattern: ['Arrays', 'Binary Search', 'Two Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Amazon', 'Apple', 'Google', 'Bloomberg'],\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Find All Duplicates in an Array',\r\n    url: 'https://leetcode.com/problems/find-all-duplicates-in-an-array/',\r\n    pattern: ['Arrays'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Microsoft', 'Facebook'],\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Set Matrix Zeroes',\r\n    url: 'https://leetcode.com/problems/set-matrix-zeroes/',\r\n    pattern: ['Arrays'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Amazon',\r\n      'Oracle',\r\n      'Goldman Sachs',\r\n      'Apple',\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Spiral Matrix',\r\n    url: 'https://leetcode.com/problems/spiral-matrix/',\r\n    pattern: ['Arrays'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Apple', 'Facebook', 'Google', 'Amazon', 'Adobe'],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Rotate Image',\r\n    url: 'https://leetcode.com/problems/rotate-image/',\r\n    pattern: ['Arrays'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Apple',\r\n      'Uber',\r\n      'Adobe',\r\n      'Google',\r\n      'Bloomberg',\r\n      'Facebook',\r\n      'Quora',\r\n    ],\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Word Search',\r\n    url: 'https://leetcode.com/problems/word-search/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Bloomberg',\r\n      'Microsoft',\r\n      'Intuit',\r\n      'Snapchat',\r\n      'Facebook',\r\n      'Apple',\r\n      'Oracle',\r\n      'Pinterest',\r\n      'Google',\r\n      'Twitter',\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 11,\r\n    name: 'First Missing Positive',\r\n    url: 'https://leetcode.com/problems/first-missing-positive/',\r\n    pattern: ['Arrays'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Microsoft',\r\n      'Facebook',\r\n      'Amazon',\r\n      'Oracle',\r\n      'Google',\r\n      'Apple',\r\n      'Adobe',\r\n      'Uber',\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Longest Consecutive Sequence',\r\n    url: 'https://leetcode.com/problems/longest-consecutive-sequence/',\r\n    pattern: ['Arrays'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Google',\r\n      'Microsoft',\r\n      'Amazon',\r\n      'Facebook',\r\n      'Twitter',\r\n      'Qualtrics',\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 13,\r\n    name: 'Letter Case Permutation',\r\n    url: 'https://leetcode.com/problems/letter-case-permutation/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Bloomberg', 'Amazon'],\r\n  },\r\n  {\r\n    id: 14,\r\n    name: 'Subsets',\r\n    url: 'https://leetcode.com/problems/subsets/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'Bloomberg', 'Uber', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 15,\r\n    name: 'Subsets II',\r\n    url: 'https://leetcode.com/problems/subsets-ii/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon'],\r\n  },\r\n  {\r\n    id: 16,\r\n    name: 'Permutations',\r\n    url: 'https://leetcode.com/problems/permutations/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Microsoft',\r\n      'LinkedIn',\r\n      'Apple',\r\n      'Oracle',\r\n    ],\r\n  },\r\n  {\r\n    id: 17,\r\n    name: 'Permutations II',\r\n    url: 'https://leetcode.com/problems/permutations-ii/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 18,\r\n    name: 'Combinations',\r\n    url: 'https://leetcode.com/problems/combinations/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'Apple'],\r\n  },\r\n  {\r\n    id: 19,\r\n    name: 'Combination Sum',\r\n    url: 'https://leetcode.com/problems/combination-sum/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Airbnb',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Amazon',\r\n      'Apple',\r\n      'Google',\r\n      'Uber',\r\n      'Adobe',\r\n    ],\r\n  },\r\n  {\r\n    id: 20,\r\n    name: 'Combination Sum II',\r\n    url: 'https://leetcode.com/problems/combination-sum-ii/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon'],\r\n  },\r\n  {\r\n    id: 21,\r\n    name: 'Combination Sum III',\r\n    url: 'https://leetcode.com/problems/combination-sum-iii/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Google', 'Amazon', 'Bloomberg'],\r\n  },\r\n  {\r\n    id: 22,\r\n    name: 'Generate Parentheses',\r\n    url: 'https://leetcode.com/problems/generate-parentheses/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Microsoft',\r\n      'Amazon',\r\n      'Facebook',\r\n      'Google',\r\n      'Bloomberg',\r\n      'Adobe',\r\n      'Apple',\r\n    ],\r\n  },\r\n  {\r\n    id: 23,\r\n    name: 'Target Sum',\r\n    url: 'https://leetcode.com/problems/target-sum/',\r\n    pattern: ['DFS', 'Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook'],\r\n  },\r\n  {\r\n    id: 24,\r\n    name: 'Palindrome Partitioning',\r\n    url: 'https://leetcode.com/problems/palindrome-partitioning/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Apple', 'Google', 'Facebook'],\r\n  },\r\n  {\r\n    id: 25,\r\n    name: 'Letter Combinations of a Phone Number',\r\n    url: 'https://leetcode.com/problems/letter-combinations-of-a-phone-number/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Facebook',\r\n      'Apple',\r\n      'Oracle',\r\n      'Google',\r\n      'Uber',\r\n      'JPMorgan',\r\n    ],\r\n  },\r\n  {\r\n    id: 26,\r\n    name: 'Generalized Abbreviation',\r\n    url: 'https://leetcode.com/problems/generalized-abbreviation/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Medium',\r\n    premium: true,\r\n    companies: ['Google'],\r\n  },\r\n  {\r\n    id: 27,\r\n    name: 'Sudoku Solver',\r\n    url: 'https://leetcode.com/problems/sudoku-solver/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Microsoft',\r\n      'Oracle',\r\n      'Facebook',\r\n      'Amazon',\r\n      'Pinterest',\r\n      'Intuit',\r\n    ],\r\n  },\r\n  {\r\n    id: 28,\r\n    name: 'N-Queens',\r\n    url: 'https://leetcode.com/problems/n-queens/',\r\n    pattern: ['Backtracking'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'Microsoft', 'Adobe'],\r\n  },\r\n  {\r\n    id: 29,\r\n    name: 'Climbing Stairs',\r\n    url: 'https://leetcode.com/problems/climbing-stairs/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Adobe',\r\n      'Amazon',\r\n      'Apple',\r\n      'Goldman Sachs',\r\n      'Uber',\r\n      'Google',\r\n      'Intuit',\r\n    ],\r\n  },\r\n  {\r\n    id: 30,\r\n    name: 'House Robber',\r\n    url: 'https://leetcode.com/problems/house-robber/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Amazon', 'Bloomberg', 'Oracle'],\r\n  },\r\n  {\r\n    id: 31,\r\n    name: 'Best Time to Buy and Sell Stock',\r\n    url: 'https://leetcode.com/problems/best-time-to-buy-and-sell-stock/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Facebook',\r\n      'Apple',\r\n      'Google',\r\n      'Adobe',\r\n      'Bloomberg',\r\n      'Goldman Sachs',\r\n      'Uber',\r\n      'Snapchat',\r\n      'Intuit',\r\n    ],\r\n  },\r\n  {\r\n    id: 32,\r\n    name: 'Maximum Subarray',\r\n    url: 'https://leetcode.com/problems/maximum-subarray/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Microsoft',\r\n      'Amazon',\r\n      'LinkedIn',\r\n      'Apple',\r\n      'Google',\r\n      'Adobe',\r\n      'Bloomberg',\r\n      'Facebook',\r\n      'Oracle',\r\n    ],\r\n  },\r\n  {\r\n    id: 33,\r\n    name: 'Range Sum Query - Immutable',\r\n    url: 'https://leetcode.com/problems/range-sum-query-immutable/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Facebook'],\r\n  },\r\n  {\r\n    id: 34,\r\n    name: 'House Robber II',\r\n    url: 'https://leetcode.com/problems/house-robber-ii/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft'],\r\n  },\r\n  {\r\n    id: 35,\r\n    name: 'Coin Change',\r\n    url: 'https://leetcode.com/problems/coin-change/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Bloomberg',\r\n      'Amazon',\r\n      'Goldman Sachs',\r\n      'Microsoft',\r\n      'Apple',\r\n      'Uber',\r\n      'Oracle',\r\n      'Facebook',\r\n      'Airbnb',\r\n      'BlackRock',\r\n    ],\r\n  },\r\n  {\r\n    id: 36,\r\n    name: 'Maximum Product Subarray',\r\n    url: 'https://leetcode.com/problems/maximum-product-subarray/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'LinkedIn',\r\n      'Amazon',\r\n      'Google',\r\n      'Facebook',\r\n      'Apple',\r\n      'Akuna Capital',\r\n    ],\r\n  },\r\n  {\r\n    id: 37,\r\n    name: 'Longest Increasing Subsequence',\r\n    url: 'https://leetcode.com/problems/longest-increasing-subsequence/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Apple',\r\n      'Amazon',\r\n      'Facebook',\r\n      'Google',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Twitter',\r\n    ],\r\n  },\r\n  {\r\n    id: 38,\r\n    name: 'Longest Palindromic Substring',\r\n    url: 'https://leetcode.com/problems/longest-palindromic-substring/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Facebook',\r\n      'Adobe',\r\n      'Google',\r\n      'Goldman Sachs',\r\n      'Oracle',\r\n      'Apple',\r\n    ],\r\n  },\r\n  {\r\n    id: 39,\r\n    name: 'Word Break',\r\n    url: 'https://leetcode.com/problems/word-break/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Qualtrics',\r\n      'Google',\r\n      'Oracle',\r\n    ],\r\n  },\r\n  {\r\n    id: 40,\r\n    name: 'Combination Sum IV',\r\n    url: 'https://leetcode.com/problems/combination-sum-iv/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Apple'],\r\n  },\r\n  {\r\n    id: 41,\r\n    name: 'Decode Ways',\r\n    url: 'https://leetcode.com/problems/decode-ways/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'JPMorgan',\r\n      'Google',\r\n      'Facebook',\r\n      'Lyft',\r\n      'Goldman Sachs',\r\n      'Microsoft',\r\n      'Apple',\r\n      'Uber',\r\n    ],\r\n  },\r\n  {\r\n    id: 42,\r\n    name: 'Unique Paths',\r\n    url: 'https://leetcode.com/problems/unique-paths/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Amazon', 'Facebook', 'Google', 'Salesforce'],\r\n  },\r\n  {\r\n    id: 43,\r\n    name: 'Jump Game',\r\n    url: 'https://leetcode.com/problems/jump-game/',\r\n    pattern: ['Dynamic Programming', 'Greedy'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Apple', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 44,\r\n    name: 'Palindromic Substrings',\r\n    url: 'https://leetcode.com/problems/palindromic-substrings/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Goldman Sachs',\r\n      'Facebook',\r\n      'Twitter',\r\n      'Google',\r\n      'Microsoft',\r\n      'Amazon',\r\n      'Bloomberg',\r\n    ],\r\n  },\r\n  {\r\n    id: 45,\r\n    name: 'Number of Longest Increasing Subsequence',\r\n    url:\r\n      'https://leetcode.com/problems/number-of-longest-increasing-subsequence/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Bloomberg', 'Facebook'],\r\n  },\r\n  {\r\n    id: 46,\r\n    name: 'Partition Equal Subset Sum',\r\n    url: 'https://leetcode.com/problems/partition-equal-subset-sum/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 47,\r\n    name: 'Partition to K Equal Sum Subsets',\r\n    url: 'https://leetcode.com/problems/partition-to-k-equal-sum-subsets/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['LinkedIn', 'Google', 'Amazon', 'Facebook', 'Adobe'],\r\n  },\r\n  {\r\n    id: 48,\r\n    name: 'Best Time to Buy and Sell Stock with Cooldown',\r\n    url:\r\n      'https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/',\r\n    pattern: ['Dynamic Programming'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook', 'Adobe', 'Goldman Sachs'],\r\n  },\r\n  {\r\n    id: 49,\r\n    name: 'Counting Bits',\r\n    url: 'https://leetcode.com/problems/counting-bits/',\r\n    pattern: ['Dynamic Programming', 'Bit Manipulation'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Amazon', 'Apple'],\r\n  },\r\n  {\r\n    id: 50,\r\n    name: 'Linked List Cycle',\r\n    url: 'https://leetcode.com/problems/linked-list-cycle/',\r\n    pattern: ['Fast & Slow Pointers'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Microsoft',\r\n      'Amazon',\r\n      'Apple',\r\n      'Goldman Sachs',\r\n      'Google',\r\n      'Bloomberg',\r\n    ],\r\n  },\r\n  {\r\n    id: 51,\r\n    name: 'Middle of the Linked List',\r\n    url: 'https://leetcode.com/problems/middle-of-the-linked-list/',\r\n    pattern: ['Fast & Slow Pointers'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Microsoft'],\r\n  },\r\n  {\r\n    id: 52,\r\n    name: 'Palindrome Linked List',\r\n    url: 'https://leetcode.com/problems/palindrome-linked-list/',\r\n    pattern: ['Fast & Slow Pointers'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Microsoft',\r\n      'Facebook',\r\n      'Amazon',\r\n      'Capital One',\r\n      'Adobe',\r\n      'Bloomberg',\r\n      'Google',\r\n      'Oracle',\r\n    ],\r\n  },\r\n  {\r\n    id: 53,\r\n    name: 'Remove Linked List Elements',\r\n    url: 'https://leetcode.com/problems/remove-linked-list-elements/',\r\n    pattern: ['Fast & Slow Pointers'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'Google', 'Microsoft', 'Apple'],\r\n  },\r\n  {\r\n    id: 54,\r\n    name: 'Remove Duplicates from Sorted List',\r\n    url: 'https://leetcode.com/problems/remove-duplicates-from-sorted-list/',\r\n    pattern: ['Fast & Slow Pointers'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Goldman Sachs', 'Adobe', 'Amazon'],\r\n  },\r\n  {\r\n    id: 55,\r\n    name: 'Linked List Cycle II',\r\n    url: 'https://leetcode.com/problems/linked-list-cycle-ii/',\r\n    pattern: ['Fast & Slow Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 56,\r\n    name: 'Add Two Numbers',\r\n    url: 'https://leetcode.com/problems/add-two-numbers/',\r\n    pattern: ['Fast & Slow Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Bloomberg',\r\n      'Microsoft',\r\n      'Google',\r\n      'Facebook',\r\n      'Apple',\r\n      'Adobe',\r\n      'Oracle',\r\n      'Uber',\r\n    ],\r\n  },\r\n  {\r\n    id: 57,\r\n    name: 'Remove Nth Node From End Of List',\r\n    url: 'https://leetcode.com/problems/remove-nth-node-from-end-of-list/',\r\n    pattern: ['Fast & Slow Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'Apple', 'Bloomberg'],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    id: 58,\r\n    name: 'Sort List',\r\n    url: 'https://leetcode.com/problems/sort-list/',\r\n    pattern: ['Fast & Slow Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Microsoft', 'Adobe'],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    id: 59,\r\n    name: 'Reorder List',\r\n    url: 'https://leetcode.com/problems/reorder-list/',\r\n    pattern: ['Fast & Slow Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook', 'Lyft'],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    id: 60,\r\n    name: 'Clone Graph',\r\n    url: 'https://leetcode.com/problems/clone-graph/',\r\n    pattern: ['BFS', 'DFS', 'Graph'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Twitter',\r\n      'Uber',\r\n      'Adobe',\r\n      'Apple',\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    id: 61,\r\n    name: 'Pacific Atlantic Water Flow',\r\n    url: 'https://leetcode.com/problems/pacific-atlantic-water-flow/',\r\n    pattern: ['BFS', 'DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Google', 'Amazon'],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    id: 62,\r\n    name: 'Number of Islands',\r\n    url: 'https://leetcode.com/problems/number-of-islands/',\r\n    pattern: ['BFS', 'DFS', 'Union Find'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Bloomberg',\r\n      'Microsoft',\r\n      'Facebook',\r\n      'Oracle',\r\n      'Apple',\r\n      'Google',\r\n      'Uber',\r\n      'Citadel',\r\n      'Qualtrics',\r\n      'Goldman Sachs',\r\n      'LinkedIn',\r\n      'Snapchat',\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    id: 63,\r\n    name: 'Graph Valid Tree',\r\n    url: 'https://leetcode.com/problems/graph-valid-tree/',\r\n    pattern: ['BFS', 'DFS', 'Graph', 'Union Find'],\r\n    difficulty: 'Medium',\r\n    premium: true,\r\n    companies: ['Amazon', 'Microsoft'],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    id: 64,\r\n    name: 'Number of Connected Components in an Undirected Graph',\r\n    url:\r\n      'https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/',\r\n    pattern: ['BFS', 'DFS', 'Graph', 'Union Find'],\r\n    difficulty: 'Medium',\r\n    premium: true,\r\n    companies: ['Amazon', 'Facebook', 'LinkedIn', 'Microsoft', 'Apple'],\r\n  },\r\n  {\r\n    id: 65,\r\n    name: 'Reverse Linked List',\r\n    url: 'https://leetcode.com/problems/reverse-linked-list/',\r\n    pattern: ['In-place reversal of a linked list'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Adobe',\r\n      'Apple',\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Uber',\r\n      'Oracle',\r\n      'Google',\r\n      'Bloomberg',\r\n      'Goldman Sachs',\r\n    ],\r\n  },\r\n  {\r\n    id: 66,\r\n    name: 'Reverse Linked List II',\r\n    url: 'https://leetcode.com/problems/reverse-linked-list-ii/',\r\n    pattern: ['In-place reversal of a linked list'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook', 'Microsoft', 'Oracle'],\r\n  },\r\n  {\r\n    id: 67,\r\n    name: 'Rotate List',\r\n    url: 'https://leetcode.com/problems/rotate-list/',\r\n    pattern: ['In-place reversal of a linked list'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Bloomberg', 'Microsoft', 'Apple'],\r\n  },\r\n  {\r\n    id: 68,\r\n    name: 'Swap Nodes in Pairs',\r\n    url: 'https://leetcode.com/problems/swap-nodes-in-pairs/',\r\n    pattern: ['In-place reversal of a linked list'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Amazon'],\r\n  },\r\n  {\r\n    id: 69,\r\n    name: 'Odd Even Linked List',\r\n    url: 'https://leetcode.com/problems/odd-even-linked-list/',\r\n    pattern: ['In-place reversal of a linked list'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Bloomberg', 'Microsoft', 'Google', 'Oracle'],\r\n  },\r\n  {\r\n    id: 70,\r\n    name: 'Reverse Nodes in k-Group',\r\n    url: 'https://leetcode.com/problems/reverse-nodes-in-k-group/',\r\n    pattern: ['In-place reversal of a linked list'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Amazon', 'Microsoft', 'Apple', 'Facebook'],\r\n  },\r\n  {\r\n    id: 71,\r\n    name: 'Merge Two Sorted Lists',\r\n    url: 'https://leetcode.com/problems/merge-two-sorted-lists/',\r\n    pattern: ['Two Pointers'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Adobe',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Facebook',\r\n      'Oracle',\r\n      'LinkedIn',\r\n      'Uber',\r\n    ],\r\n  },\r\n  {\r\n    id: 72,\r\n    name: 'Kth Smallest Element in a Sorted Matrix',\r\n    url:\r\n      'https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/',\r\n    pattern: ['Binary Search', 'Heap'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Google', 'Amazon'],\r\n  },\r\n  {\r\n    id: 73,\r\n    name: 'Find K Pairs with Smallest Sums',\r\n    url: 'https://leetcode.com/problems/find-k-pairs-with-smallest-sums/',\r\n    pattern: ['Heap'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon'],\r\n  },\r\n  {\r\n    id: 74,\r\n    name: 'Merge k Sorted Lists',\r\n    url: 'https://leetcode.com/problems/merge-k-sorted-lists/',\r\n    pattern: ['Heap'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Apple',\r\n      'Google',\r\n      'Oracle',\r\n      'Twitter',\r\n      'Goldman Sachs',\r\n      'Uber',\r\n    ],\r\n  },\r\n  {\r\n    id: 75,\r\n    name: 'Smallest Range Covering Elements from K Lists',\r\n    url:\r\n      'https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists/',\r\n    pattern: ['Heap'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Microsoft'],\r\n  },\r\n  {\r\n    id: 76,\r\n    name: 'Meeting Rooms',\r\n    url: 'https://leetcode.com/problems/meeting-rooms',\r\n    pattern: ['Intervals'],\r\n    difficulty: 'Easy',\r\n    premium: true,\r\n    companies: ['Facebook', 'Bloomberg', 'Microsoft', 'Amazon', 'Adobe'],\r\n  },\r\n  {\r\n    id: 77,\r\n    name: 'Merge Intervals',\r\n    url: 'https://leetcode.com/problems/merge-intervals/',\r\n    pattern: ['Intervals'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'JPMorgan',\r\n      'Amazon',\r\n      'Bloomberg',\r\n      'Apple',\r\n      'Google',\r\n      'Adobe',\r\n      'Microsoft',\r\n      'Uber',\r\n      'Twitter',\r\n      'Qualtrics',\r\n      'Oracle',\r\n      'Salesforce',\r\n      'Walmart'\r\n    ],\r\n  },\r\n  {\r\n    id: 78,\r\n    name: 'Interval List Intersections',\r\n    url: 'https://leetcode.com/problems/interval-list-intersections/',\r\n    pattern: ['Intervals'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Uber', 'Apple', 'Google', 'Amazon', 'Bloomberg'],\r\n  },\r\n  {\r\n    id: 79,\r\n    name: 'Non-overlapping Intervals',\r\n    url: 'https://leetcode.com/problems/non-overlapping-intervals/',\r\n    pattern: ['Intervals'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Microsoft', 'Amazon'],\r\n  },\r\n  {\r\n    id: 80,\r\n    name: 'Meeting Rooms II',\r\n    url: 'https://leetcode.com/problems/meeting-rooms-ii/',\r\n    pattern: ['Heap', 'Intervals'],\r\n    difficulty: 'Medium',\r\n    premium: true,\r\n    companies: [\r\n      'Amazon',\r\n      'Bloomberg',\r\n      'Google',\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Uber',\r\n      'Oracle',\r\n      'Twitter',\r\n      'Adobe',\r\n    ],\r\n  },\r\n  {\r\n    id: 81,\r\n    name: 'Task Scheduler',\r\n    url: 'https://leetcode.com/problems/task-scheduler/',\r\n    pattern: ['Greedy', 'Heap'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Google',\r\n      'Pinterest',\r\n      'Uber',\r\n      'Bloomberg',\r\n    ],\r\n  },\r\n  {\r\n    id: 82,\r\n    name: 'Minimum Number of Arrows to Burst Balloons',\r\n    url:\r\n      'https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/',\r\n    pattern: ['Greedy'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Google'],\r\n  },\r\n  {\r\n    id: 83,\r\n    name: 'Insert Interval',\r\n    url: 'https://leetcode.com/problems/insert-interval/',\r\n    pattern: ['Intervals'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Google', 'Twitter', 'Amazon', 'Apple', 'Facebook'],\r\n  },\r\n  {\r\n    id: 84,\r\n    name: 'Employee Free Time',\r\n    url: 'https://leetcode.com/problems/employee-free-time/',\r\n    pattern: ['Heap', 'Greedy'],\r\n    difficulty: 'Hard',\r\n    premium: true,\r\n    companies: ['Pinterest', 'Amazon', 'Intuit', 'Oracle', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 85,\r\n    name: 'Binary Search',\r\n    url: 'https://leetcode.com/problems/binary-search/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Facebook'],\r\n  },\r\n  {\r\n    id: 86,\r\n    name: 'Find Smallest Letter Greater Than Target',\r\n    url:\r\n      'https://leetcode.com/problems/find-smallest-letter-greater-than-target/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['LinkedIn'],\r\n  },\r\n  {\r\n    id: 87,\r\n    name: 'Peak Index in a Mountain Array',\r\n    url: 'https://leetcode.com/problems/peak-index-in-a-mountain-array/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Bloomberg'],\r\n  },\r\n  {\r\n    id: 88,\r\n    name: 'Find Minimum in Rotated Sorted Array',\r\n    url: 'https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Goldman Sachs',\r\n      'Microsoft',\r\n      'Amazon',\r\n      'Bloomberg',\r\n      'Apple',\r\n      'Oracle',\r\n    ],\r\n  },\r\n  {\r\n    id: 89,\r\n    name: 'Find Peak Element',\r\n    url: 'https://leetcode.com/problems/find-peak-element/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Google',\r\n      'Bloomberg',\r\n      'Quora',\r\n      'Microsoft',\r\n    ],\r\n  },\r\n  {\r\n    id: 90,\r\n    name: 'Search in Rotated Sorted Array',\r\n    url: 'https://leetcode.com/problems/search-in-rotated-sorted-array/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Facebook',\r\n      'Microsoft',\r\n      'LinkedIn',\r\n      'Oracle',\r\n      'Apple',\r\n      'Bloomberg',\r\n      'Google',\r\n      'Adobe',\r\n    ],\r\n  },\r\n  {\r\n    id: 91,\r\n    name: 'Search in Rotated Sorted Array II',\r\n    url: 'https://leetcode.com/problems/search-in-rotated-sorted-array-ii/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon'],\r\n  },\r\n  {\r\n    id: 92,\r\n    name: 'Search a 2D Matrix',\r\n    url: 'https://leetcode.com/problems/search-a-2d-matrix/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook', 'Microsoft', 'Apple'],\r\n  },\r\n  {\r\n    id: 93,\r\n    name: 'Search a 2D Matrix II',\r\n    url: 'https://leetcode.com/problems/search-a-2d-matrix-ii/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Microsoft', 'Facebook'],\r\n  },\r\n  {\r\n    id: 94,\r\n    name: 'Find K Closest Elements',\r\n    url: 'https://leetcode.com/problems/find-k-closest-elements/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Microsoft', 'Google', 'Amazon'],\r\n  },\r\n  {\r\n    id: 95,\r\n    name: 'Count of Range Sum',\r\n    url: 'https://leetcode.com/problems/count-of-range-sum/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Amazon', 'Google'],\r\n  },\r\n  {\r\n    id: 96,\r\n    name: 'Minimum Size Subarray Sum',\r\n    url: 'https://leetcode.com/problems/minimum-size-subarray-sum/',\r\n    pattern: ['Sliding Window'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Goldman Sachs',\r\n      'Amazon',\r\n      'Bloomberg',\r\n      'Facebook',\r\n      'Microsoft',\r\n    ],\r\n  },\r\n  {\r\n    id: 97,\r\n    name: 'Fruit Into Baskets',\r\n    url: 'https://leetcode.com/problems/fruit-into-baskets/',\r\n    pattern: ['Sliding Window'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Google'],\r\n  },\r\n  {\r\n    id: 98,\r\n    name: 'Permutation in String',\r\n    url: 'https://leetcode.com/problems/permutation-in-string/',\r\n    pattern: ['Sliding Window'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Microsoft', 'Adobe', 'Amazon'],\r\n  },\r\n  {\r\n    id: 99,\r\n    name: 'Longest Repeating Character Replacement',\r\n    url:\r\n      'https://leetcode.com/problems/longest-repeating-character-replacement/',\r\n    pattern: ['Sliding Window'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Google', 'Amazon'],\r\n  },\r\n  {\r\n    id: 100,\r\n    name: 'Sliding Window Maximum',\r\n    url: 'https://leetcode.com/problems/sliding-window-maximum/',\r\n    pattern: ['Sliding Window'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Google',\r\n      'Citadel',\r\n      'Facebook',\r\n      'Bloomberg',\r\n      'Akuna Capital',\r\n      'Microsoft',\r\n      'Twitter',\r\n    ],\r\n  },\r\n  {\r\n    id: 101,\r\n    name: 'Longest Substring Without Repeating Characters',\r\n    url:\r\n      'https://leetcode.com/problems/longest-substring-without-repeating-characters/',\r\n    pattern: ['Sliding Window'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Amazon',\r\n      'Facebook',\r\n      'Apple',\r\n      'Google',\r\n      'Adobe',\r\n      'Goldman Sachs',\r\n      'Uber',\r\n      'Salesforce',\r\n      'Oracle',\r\n    ],\r\n  },\r\n  {\r\n    id: 102,\r\n    name: 'Minimum Number of K Consecutive Bit Flips',\r\n    url:\r\n      'https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips/',\r\n    pattern: ['Sliding Window'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Google', 'Amazon'],\r\n  },\r\n  {\r\n    id: 103,\r\n    name: 'Count Unique Characters of All Substrings of a Given String',\r\n    url:\r\n      'https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string/',\r\n    pattern: ['Sliding Window'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Microsoft'],\r\n  },\r\n  {\r\n    id: 104,\r\n    name: 'Minimum Window Substring',\r\n    url: 'https://leetcode.com/problems/minimum-window-substring/',\r\n    pattern: ['Sliding Window'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Google',\r\n      'Apple',\r\n      'LinkedIn',\r\n      'Uber',\r\n      'Lyft',\r\n      'Adobe',\r\n    ],\r\n  },\r\n  {\r\n    id: 105,\r\n    name: 'Substring with Concatenation of All Words',\r\n    url:\r\n      'https://leetcode.com/problems/substring-with-concatenation-of-all-words/',\r\n    pattern: ['Sliding Window'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Amazon', 'Adobe'],\r\n  },\r\n  {\r\n    id: 106,\r\n    name: 'Kth Smallest Element in a BST',\r\n    url: 'https://leetcode.com/problems/kth-smallest-element-in-a-bst/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook', 'Microsoft', 'Adobe', 'Oracle'],\r\n  },\r\n  {\r\n    id: 107,\r\n    name: 'K Closest Points to Origin',\r\n    url: 'https://leetcode.com/problems/k-closest-points-to-origin/',\r\n    pattern: ['Heap'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'LinkedIn', 'Google', 'Uber', 'Asana'],\r\n  },\r\n  {\r\n    id: 108,\r\n    name: 'Top K Frequent Elements',\r\n    url: 'https://leetcode.com/problems/top-k-frequent-elements/',\r\n    pattern: ['Heap'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Apple',\r\n      'Capital One',\r\n      'Oracle',\r\n      'Google',\r\n      'Bloomberg',\r\n      'Microsoft',\r\n    ],\r\n  },\r\n  {\r\n    id: 109,\r\n    name: 'Sort Characters By Frequency',\r\n    url: 'https://leetcode.com/problems/sort-characters-by-frequency/',\r\n    pattern: ['Heap'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Bloomberg', 'Amazon', 'Facebook'],\r\n  },\r\n  {\r\n    id: 110,\r\n    name: 'Kth Largest Element in an Array',\r\n    url: 'https://leetcode.com/problems/kth-largest-element-in-an-array/',\r\n    pattern: ['Heap'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Apple',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Google',\r\n      'Goldman Sachs',\r\n      'LinkedIn',\r\n      'Adobe',\r\n    ],\r\n  },\r\n  {\r\n    id: 111,\r\n    name: 'Reorganize String',\r\n    url: 'https://leetcode.com/problems/reorganize-string/',\r\n    pattern: ['Greedy', 'Heap'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Google',\r\n      'Facebook',\r\n      'Uber',\r\n      'Goldman Sachs',\r\n    ],\r\n  },\r\n  {\r\n    id: 112,\r\n    name: 'Rearrange String k Distance Apart',\r\n    url: 'https://leetcode.com/problems/rearrange-string-k-distance-apart',\r\n    pattern: ['Greedy', 'Heap'],\r\n    difficulty: 'Hard',\r\n    premium: true,\r\n    companies: ['Microsoft', 'Facebook'],\r\n  },\r\n  {\r\n    id: 113,\r\n    name: 'Course Schedule III',\r\n    url: 'https://leetcode.com/problems/course-schedule-iii/',\r\n    pattern: ['Greedy', 'Heap'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Google'],\r\n  },\r\n  {\r\n    id: 114,\r\n    name: 'Maximum Frequency Stack',\r\n    url: 'https://leetcode.com/problems/maximum-frequency-stack/',\r\n    pattern: ['Bucket Sort', 'Heap'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Amazon', 'Bloomberg', 'Microsoft', 'Adobe'],\r\n  },\r\n  {\r\n    id: 115,\r\n    name: 'Course Schedule',\r\n    url: 'https://leetcode.com/problems/course-schedule/',\r\n    pattern: ['BFS', 'DFS', 'Graph', 'Topological Sort'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Facebook',\r\n      'Intuit',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Google',\r\n      'Uber',\r\n    ],\r\n  },\r\n  {\r\n    id: 116,\r\n    name: 'Course Schedule II',\r\n    url: 'https://leetcode.com/problems/course-schedule-ii/',\r\n    pattern: ['BFS', 'DFS', 'Graph', 'Topological Sort'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Facebook',\r\n      'Snapchat',\r\n      'Google',\r\n      'Oracle',\r\n      'Pinterest',\r\n      'Intuit',\r\n      'Bloomberg',\r\n    ],\r\n  },\r\n  {\r\n    id: 117,\r\n    name: 'Minimum Height Trees',\r\n    url: 'https://leetcode.com/problems/minimum-height-trees/',\r\n    pattern: ['BFS', 'Graph', 'Topological Sort'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook'],\r\n  },\r\n  {\r\n    id: 118,\r\n    name: 'Alien Dictionary',\r\n    url: 'https://leetcode.com/problems/alien-dictionary',\r\n    pattern: ['Graph', 'Topological Sort'],\r\n    difficulty: 'Hard',\r\n    premium: true,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Airbnb',\r\n      'Pinterest',\r\n      'Google',\r\n      'Microsoft',\r\n      'Apple',\r\n    ],\r\n  },\r\n  {\r\n    id: 119,\r\n    name: 'Sequence Reconstruction',\r\n    url: 'https://leetcode.com/problems/sequence-reconstruction',\r\n    pattern: ['Graph', 'Topological Sort'],\r\n    difficulty: 'Medium',\r\n    premium: true,\r\n    companies: ['Google'],\r\n  },\r\n  {\r\n    id: 120,\r\n    name: 'Binary Tree Level Order Traversal II',\r\n    url: 'https://leetcode.com/problems/binary-tree-level-order-traversal-ii/',\r\n    pattern: ['BFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Apple'],\r\n  },\r\n  {\r\n    id: 121,\r\n    name: 'Average of Levels in Binary Tree',\r\n    url: 'https://leetcode.com/problems/average-of-levels-in-binary-tree/',\r\n    pattern: ['BFS'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Facebook'],\r\n  },\r\n  {\r\n    id: 122,\r\n    name: 'Minimum Depth of Binary Tree',\r\n    url: 'https://leetcode.com/problems/minimum-depth-of-binary-tree/',\r\n    pattern: ['BFS', 'DFS'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook', 'Adobe'],\r\n  },\r\n  {\r\n    id: 123,\r\n    name: 'Binary Tree Level Order Traversal',\r\n    url: 'https://leetcode.com/problems/binary-tree-level-order-traversal/',\r\n    pattern: ['BFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Bloomberg',\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Amazon',\r\n      'LinkedIn',\r\n      'Adobe',\r\n      'Google',\r\n      'Uber',\r\n    ],\r\n  },\r\n  {\r\n    id: 124,\r\n    name: 'Binary Tree Zigzag Level Order Traversal',\r\n    url:\r\n      'https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/',\r\n    pattern: ['BFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Apple',\r\n      'Facebook',\r\n      'Qualtrics',\r\n      'Google',\r\n      'Goldman Sachs',\r\n      'Oracle',\r\n      'Adobe',\r\n    ],\r\n  },\r\n  {\r\n    id: 125,\r\n    name: 'Populating Next Right Pointers in Each Node',\r\n    url:\r\n      'https://leetcode.com/problems/populating-next-right-pointers-in-each-node/',\r\n    pattern: ['BFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Bloomberg', 'Facebook', 'Amazon', 'Google'],\r\n  },\r\n  {\r\n    id: 126,\r\n    name: 'Populating Next Right Pointers in Each Node II',\r\n    url:\r\n      'https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/',\r\n    pattern: ['BFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Amazon', 'Bloomberg', 'Facebook'],\r\n  },\r\n  {\r\n    id: 127,\r\n    name: 'Binary Tree Right Side View',\r\n    url: 'https://leetcode.com/problems/binary-tree-right-side-view/',\r\n    pattern: ['BFS', 'DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'Bloomberg', 'Microsoft', 'Oracle'],\r\n  },\r\n  {\r\n    id: 128,\r\n    name: 'All Nodes Distance K in Binary Tree',\r\n    url: 'https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/',\r\n    pattern: ['BFS', 'DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'Google', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 129,\r\n    name: 'Same Tree',\r\n    url: 'https://leetcode.com/problems/same-tree/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Amazon', 'Google', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 130,\r\n    name: 'Path Sum',\r\n    url: 'https://leetcode.com/problems/path-sum/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'Microsoft', 'Apple', 'Oracle'],\r\n  },\r\n  {\r\n    id: 131,\r\n    name: 'Diameter of Binary Tree',\r\n    url: 'https://leetcode.com/problems/diameter-of-binary-tree/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Amazon',\r\n      'Bloomberg',\r\n      'Oracle',\r\n      'Google',\r\n    ],\r\n  },\r\n  {\r\n    id: 132,\r\n    name: 'Merge Two Binary Trees',\r\n    url: 'https://leetcode.com/problems/merge-two-binary-trees/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook', 'Google', 'Apple'],\r\n  },\r\n  {\r\n    id: 133,\r\n    name: 'Maximum Depth of Binary Tree',\r\n    url: 'https://leetcode.com/problems/maximum-depth-of-binary-tree/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['LinkedIn', 'Amazon', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 134,\r\n    name: 'Lowest Common Ancestor of a Binary Search Tree',\r\n    url:\r\n      'https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook', 'LinkedIn', 'Oracle', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 135,\r\n    name: 'Subtree of Another Tree',\r\n    url: 'https://leetcode.com/problems/subtree-of-another-tree/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook'],\r\n  },\r\n  {\r\n    id: 136,\r\n    name: 'Invert Binary Tree',\r\n    url: 'https://leetcode.com/problems/invert-binary-tree/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Microsoft',\r\n      'Amazon',\r\n      'Google',\r\n      'Facebook',\r\n      'Bloomberg',\r\n      'Adobe',\r\n    ],\r\n  },\r\n  {\r\n    id: 137,\r\n    name: 'Path Sum II',\r\n    url: 'https://leetcode.com/problems/path-sum-ii/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 138,\r\n    name: 'Path Sum III',\r\n    url: 'https://leetcode.com/problems/path-sum-iii/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Microsoft'],\r\n  },\r\n  {\r\n    id: 139,\r\n    name: 'Lowest Common Ancestor of a Binary Tree',\r\n    url:\r\n      'https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Amazon',\r\n      'LinkedIn',\r\n      'Apple',\r\n      'Oracle',\r\n      'Adobe',\r\n      'Google',\r\n      'Uber',\r\n      'Bloomberg',\r\n      'Intuit',\r\n      'Palantir',\r\n      'Atlassian',\r\n    ],\r\n  },\r\n  {\r\n    id: 140,\r\n    name: 'Maximum Binary Tree',\r\n    url: 'https://leetcode.com/problems/maximum-binary-tree/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Google', 'Apple'],\r\n  },\r\n  {\r\n    id: 141,\r\n    name: 'Maximum Width of Binary Tree',\r\n    url: 'https://leetcode.com/problems/maximum-width-of-binary-tree/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Bloomberg'],\r\n  },\r\n  {\r\n    id: 142,\r\n    name: 'Construct Binary Tree from Preorder and Inorder Traversal',\r\n    url:\r\n      'https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Amazon', 'Microsoft', 'Facebook', 'Bloomberg', 'Citadel'],\r\n  },\r\n  {\r\n    id: 143,\r\n    name: 'Validate Binary Search Tree',\r\n    url: 'https://leetcode.com/problems/validate-binary-search-tree/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Bloomberg',\r\n      'Amazon',\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Asana',\r\n      'Apple',\r\n      'Google',\r\n      'Uber',\r\n    ],\r\n  },\r\n  {\r\n    id: 144,\r\n    name: 'Implement Trie (Prefix Tree)',\r\n    url: 'https://leetcode.com/problems/implement-trie-prefix-tree/',\r\n    pattern: ['Design', 'Trie'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Pinterest',\r\n      'Google',\r\n      'Microsoft',\r\n      'Facebook',\r\n      'Apple',\r\n      'Twitter',\r\n      'Goldman Sachs',\r\n    ],\r\n  },\r\n  {\r\n    id: 145,\r\n    name: 'Binary Tree Maximum Path Sum',\r\n    url: 'https://leetcode.com/problems/binary-tree-maximum-path-sum/',\r\n    pattern: ['DFS'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Google',\r\n      'Microsoft',\r\n      'Apple',\r\n      'Bloomberg',\r\n      'Adobe',\r\n    ],\r\n  },\r\n  {\r\n    id: 146,\r\n    name: 'Serialize and Deserialize Binary Tree',\r\n    url: 'https://leetcode.com/problems/serialize-and-deserialize-binary-tree/',\r\n    pattern: ['Design'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Amazon',\r\n      'LinkedIn',\r\n      'Uber',\r\n      'Google',\r\n      'Bloomberg',\r\n      'Quora',\r\n      'Qualtrics',\r\n      'Oracle',\r\n    ],\r\n  },\r\n  {\r\n    id: 147,\r\n    name: 'Word Search II',\r\n    url: 'https://leetcode.com/problems/word-search-ii/',\r\n    pattern: ['DFS', 'Trie'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Microsoft',\r\n      'Apple',\r\n      'Uber',\r\n      'Google',\r\n      'Twitter',\r\n      'Facebook',\r\n    ],\r\n  },\r\n  {\r\n    id: 148,\r\n    name: 'Find Median from Data Stream',\r\n    url: 'https://leetcode.com/problems/find-median-from-data-stream/',\r\n    pattern: ['Heap'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Apple',\r\n      'Google',\r\n      'Bloomberg',\r\n      'Goldman Sachs',\r\n      'Twitter',\r\n      'Adobe',\r\n      'Salesforce',\r\n      'Uber',\r\n    ],\r\n  },\r\n  {\r\n    id: 149,\r\n    name: 'Sliding Window Median',\r\n    url: 'https://leetcode.com/problems/sliding-window-median/',\r\n    pattern: ['Heap'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Facebook', 'Google', 'JPMorgan', 'Adobe'],\r\n  },\r\n  {\r\n    id: 150,\r\n    name: 'Two Sum',\r\n    url: 'https://leetcode.com/problems/two-sum/',\r\n    pattern: ['Two Pointers'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Apple',\r\n      'Google',\r\n      'Adobe',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Facebook',\r\n      'Uber',\r\n      'Oracle',\r\n      'Twitter',\r\n      'Goldman Sachs',\r\n    ],\r\n  },\r\n  {\r\n    id: 151,\r\n    name: 'Squares of a Sorted Array',\r\n    url: 'https://leetcode.com/problems/squares-of-a-sorted-array/',\r\n    pattern: ['Two Pointers'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Google',\r\n      'Apple',\r\n      'Uber',\r\n      'Bloomberg',\r\n      'Amazon',\r\n      'Microsoft',\r\n    ],\r\n  },\r\n  {\r\n    id: 152,\r\n    name: 'Backspace String Compare',\r\n    url: 'https://leetcode.com/problems/backspace-string-compare',\r\n    pattern: ['Two Pointers'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Facebook', 'Google', 'Oracle', 'Amazon'],\r\n  },\r\n  {\r\n    id: 153,\r\n    name: '3 Sum',\r\n    url: 'https://leetcode.com/problems/3sum/',\r\n    pattern: ['Two Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Apple',\r\n      'Bloomberg',\r\n      'Google',\r\n      'Goldman Sachs',\r\n      'Adobe',\r\n    ],\r\n  },\r\n  {\r\n    id: 154,\r\n    name: '3 Sum Closest',\r\n    url: 'https://leetcode.com/problems/3sum-closest/',\r\n    pattern: ['Two Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Facebook', 'Amazon', 'Apple', 'Google', 'Bloomberg'],\r\n  },\r\n  {\r\n    id: 155,\r\n    name: 'Subarrays with Product Less than K',\r\n    url: 'https://leetcode.com/problems/subarray-product-less-than-k/',\r\n    pattern: ['Two Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Bloomberg', 'LinkedIn'],\r\n  },\r\n  {\r\n    id: 156,\r\n    name: 'Sort Colours',\r\n    url: 'https://leetcode.com/problems/sort-colors/',\r\n    pattern: ['Two Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Microsoft', 'Facebook', 'Amazon', 'Oracle', 'Adobe', 'Apple'],\r\n  },\r\n  {\r\n    id: 157,\r\n    name: 'Trapping Rain Water',\r\n    url: 'https://leetcode.com/problems/trapping-rain-water/',\r\n    pattern: ['Two Pointers'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Facebook',\r\n      'Amazon',\r\n      'Goldman Sachs',\r\n      'Microsoft',\r\n      'Bloomberg',\r\n      'Apple',\r\n      'Google',\r\n      'Qualtrics',\r\n      'Oracle',\r\n    ],\r\n  },\r\n  {\r\n    id: 158,\r\n    name: 'Container With Most Water',\r\n    url: 'https://leetcode.com/problems/container-with-most-water/',\r\n    pattern: ['Two Pointers'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Google',\r\n      'Facebook',\r\n      'Goldman Sachs',\r\n      'Microsoft',\r\n      'Adobe',\r\n      'Apple',\r\n    ],\r\n  },\r\n  {\r\n    id: 159,\r\n    name: 'Longest Word in Dictionary',\r\n    url: 'https://leetcode.com/problems/longest-word-in-dictionary/',\r\n    pattern: ['Trie'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Goldman Sachs', 'Amazon'],\r\n  },\r\n  {\r\n    id: 160,\r\n    name: 'Index Pairs of a String',\r\n    url: 'https://leetcode.com/problems/index-pairs-of-a-string/',\r\n    pattern: ['Trie'],\r\n    difficulty: 'Easy',\r\n    premium: true,\r\n    companies: ['Amazon'],\r\n  },\r\n  {\r\n    id: 161,\r\n    name: 'Maximum XOR of Two Numbers in an Array',\r\n    url: 'https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array',\r\n    pattern: ['Trie'],\r\n    difficulty: 'Medium',\r\n    premium: false,\r\n    companies: ['Google'],\r\n  },\r\n  {\r\n    id: 162,\r\n    name: 'Concatenated Words',\r\n    url: 'https://leetcode.com/problems/concatenated-words/',\r\n    pattern: ['Trie'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Amazon'],\r\n  },\r\n  {\r\n    id: 163,\r\n    name: 'Prefix and Suffix Search',\r\n    url: 'https://leetcode.com/problems/prefix-and-suffix-search/',\r\n    pattern: ['Trie'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Amazon', 'Facebook'],\r\n  },\r\n  {\r\n    id: 164,\r\n    name: 'Palindrome Pairs',\r\n    url: 'https://leetcode.com/problems/palindrome-pairs/',\r\n    pattern: ['Trie'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Airbnb', 'Facebook'],\r\n  },\r\n  {\r\n    id: 165,\r\n    name: 'Design Search Autocomplete System',\r\n    url: 'https://leetcode.com/problems/design-search-autocomplete-system/',\r\n    pattern: ['Trie'],\r\n    difficulty: 'Hard',\r\n    premium: true,\r\n    companies: [\r\n      'Microsoft',\r\n      'Amazon',\r\n      'Lyft',\r\n      'Google',\r\n      'Snapchat',\r\n      'Goldman Sachs',\r\n    ],\r\n  },\r\n  {\r\n    id: 166,\r\n    name: 'Word Squares',\r\n    url: 'https://leetcode.com/problems/word-squares/',\r\n    pattern: ['Trie'],\r\n    difficulty: 'Hard',\r\n    premium: true,\r\n    companies: ['Bloomberg'],\r\n  },\r\n  {\r\n    id: 167,\r\n    name: 'Sort Items by Groups Respecting Dependencies',\r\n    url:\r\n      'https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies/',\r\n    pattern: ['DFS', 'Graph', 'Topological Sort'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: ['Google'],\r\n  },\r\n  {\r\n    id: 168,\r\n    name: 'Median of Two Sorted Arrays',\r\n    url: 'https://leetcode.com/problems/median-of-two-sorted-arrays/',\r\n    pattern: ['Binary Search'],\r\n    difficulty: 'Hard',\r\n    premium: false,\r\n    companies: [\r\n      'Amazon',\r\n      'Goldman Sachs',\r\n      'Google',\r\n      'Facebook',\r\n      'Microsoft',\r\n      'Apple',\r\n      'Adobe',\r\n      'Bloomberg',\r\n      'Uber',\r\n    ],\r\n  },\r\n  {\r\n    id: 169,\r\n    name: 'Majority Element',\r\n    url: 'https://leetcode.com/problems/majority-element/',\r\n    pattern: ['Sorting'],\r\n    difficulty: 'Easy',\r\n    premium: false,\r\n    companies: ['Amazon', 'Microsoft', 'Bloomberg', 'Apple', 'Adobe'],\r\n  },\r\n];\r\nconst questions = [\r\n  {\r\n    \"id\": 0,\r\n    \"name\": \"Contains Duplicate\",\r\n    \"url\": \"https://leetcode.com/problems/contains-duplicate/\",\r\n    \"pattern\": [\r\n      \"Arrays\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Apple\",\r\n      \"Microsoft\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 1,\r\n    \"name\": \"Missing Number\",\r\n    \"url\": \"https://leetcode.com/problems/missing-number/\",\r\n    \"pattern\": [\r\n      \"Arrays\",\r\n      \"Bit Manipulation\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Capital One\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Goldman Sachs\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Find All Numbers Disappeared in an Array\",\r\n    \"url\": \"https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/\",\r\n    \"pattern\": [\r\n      \"Arrays\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"name\": \"Single Number\",\r\n    \"url\": \"https://leetcode.com/problems/single-number/\",\r\n    \"pattern\": [\r\n      \"Arrays\",\r\n      \"Bit Manipulation\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\",\r\n      \"Amazon\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 4,\r\n    \"name\": \"Product of Array Except Self\",\r\n    \"url\": \"https://leetcode.com/problems/product-of-array-except-self/\",\r\n    \"pattern\": [\r\n      \"Arrays\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Microsoft\",\r\n      \"Asana\",\r\n      \"Lyft\",\r\n      \"Adobe\",\r\n      \"Uber\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 5,\r\n    \"name\": \"Find the Duplicate Number\",\r\n    \"url\": \"https://leetcode.com/problems/find-the-duplicate-number/\",\r\n    \"pattern\": [\r\n      \"Arrays\",\r\n      \"Binary Search\",\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 6,\r\n    \"name\": \"Find All Duplicates in an Array\",\r\n    \"url\": \"https://leetcode.com/problems/find-all-duplicates-in-an-array/\",\r\n    \"pattern\": [\r\n      \"Arrays\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 7,\r\n    \"name\": \"Set Matrix Zeroes\",\r\n    \"url\": \"https://leetcode.com/problems/set-matrix-zeroes/\",\r\n    \"pattern\": [\r\n      \"Arrays\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Oracle\",\r\n      \"Goldman Sachs\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 8,\r\n    \"name\": \"Spiral Matrix\",\r\n    \"url\": \"https://leetcode.com/problems/spiral-matrix/\",\r\n    \"pattern\": [\r\n      \"Arrays\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Facebook\",\r\n      \"Google\",\r\n      \"Amazon\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 9,\r\n    \"name\": \"Rotate Image\",\r\n    \"url\": \"https://leetcode.com/problems/rotate-image/\",\r\n    \"pattern\": [\r\n      \"Arrays\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Uber\",\r\n      \"Adobe\",\r\n      \"Google\",\r\n      \"Bloomberg\",\r\n      \"Facebook\",\r\n      \"Quora\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 10,\r\n    \"name\": \"Word Search\",\r\n    \"url\": \"https://leetcode.com/problems/word-search/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Microsoft\",\r\n      \"Intuit\",\r\n      \"Snapchat\",\r\n      \"Facebook\",\r\n      \"Apple\",\r\n      \"Oracle\",\r\n      \"Pinterest\",\r\n      \"Google\",\r\n      \"Twitter\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 11,\r\n    \"name\": \"First Missing Positive\",\r\n    \"url\": \"https://leetcode.com/problems/first-missing-positive/\",\r\n    \"pattern\": [\r\n      \"Arrays\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Oracle\",\r\n      \"Google\",\r\n      \"Apple\",\r\n      \"Adobe\",\r\n      \"Uber\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 12,\r\n    \"name\": \"Longest Consecutive Sequence\",\r\n    \"url\": \"https://leetcode.com/problems/longest-consecutive-sequence/\",\r\n    \"pattern\": [\r\n      \"Arrays\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\",\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Twitter\",\r\n      \"Qualtrics\"\r\n    ],\r\n    \"category\": \"Arrays\"\r\n  },\r\n  {\r\n    \"id\": 13,\r\n    \"name\": \"Letter Case Permutation\",\r\n    \"url\": \"https://leetcode.com/problems/letter-case-permutation/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Bloomberg\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 14,\r\n    \"name\": \"Subsets\",\r\n    \"url\": \"https://leetcode.com/problems/subsets/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Uber\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 15,\r\n    \"name\": \"Subsets II\",\r\n    \"url\": \"https://leetcode.com/problems/subsets-ii/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 16,\r\n    \"name\": \"Permutations\",\r\n    \"url\": \"https://leetcode.com/problems/permutations/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"LinkedIn\",\r\n      \"Apple\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 17,\r\n    \"name\": \"Permutations II\",\r\n    \"url\": \"https://leetcode.com/problems/permutations-ii/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 18,\r\n    \"name\": \"Combinations\",\r\n    \"url\": \"https://leetcode.com/problems/combinations/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 19,\r\n    \"name\": \"Combination Sum\",\r\n    \"url\": \"https://leetcode.com/problems/combination-sum/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Airbnb\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Uber\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 20,\r\n    \"name\": \"Combination Sum II\",\r\n    \"url\": \"https://leetcode.com/problems/combination-sum-ii/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 21,\r\n    \"name\": \"Combination Sum III\",\r\n    \"url\": \"https://leetcode.com/problems/combination-sum-iii/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\",\r\n      \"Amazon\",\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 22,\r\n    \"name\": \"Generate Parentheses\",\r\n    \"url\": \"https://leetcode.com/problems/generate-parentheses/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Google\",\r\n      \"Bloomberg\",\r\n      \"Adobe\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 23,\r\n    \"name\": \"Target Sum\",\r\n    \"url\": \"https://leetcode.com/problems/target-sum/\",\r\n    \"pattern\": [\r\n      \"DFS\",\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 24,\r\n    \"name\": \"Palindrome Partitioning\",\r\n    \"url\": \"https://leetcode.com/problems/palindrome-partitioning/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 25,\r\n    \"name\": \"Letter Combinations of a Phone Number\",\r\n    \"url\": \"https://leetcode.com/problems/letter-combinations-of-a-phone-number/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Facebook\",\r\n      \"Apple\",\r\n      \"Oracle\",\r\n      \"Google\",\r\n      \"Uber\",\r\n      \"JPMorgan\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 26,\r\n    \"name\": \"Generalized Abbreviation\",\r\n    \"url\": \"https://leetcode.com/problems/generalized-abbreviation/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Google\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 27,\r\n    \"name\": \"Sudoku Solver\",\r\n    \"url\": \"https://leetcode.com/problems/sudoku-solver/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Oracle\",\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Pinterest\",\r\n      \"Intuit\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 28,\r\n    \"name\": \"N-Queens\",\r\n    \"url\": \"https://leetcode.com/problems/n-queens/\",\r\n    \"pattern\": [\r\n      \"Backtracking\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Backtracking\"\r\n  },\r\n  {\r\n    \"id\": 29,\r\n    \"name\": \"Climbing Stairs\",\r\n    \"url\": \"https://leetcode.com/problems/climbing-stairs/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Adobe\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Goldman Sachs\",\r\n      \"Uber\",\r\n      \"Google\",\r\n      \"Intuit\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 30,\r\n    \"name\": \"House Robber\",\r\n    \"url\": \"https://leetcode.com/problems/house-robber/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 31,\r\n    \"name\": \"Best Time to Buy and Sell Stock\",\r\n    \"url\": \"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Facebook\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Adobe\",\r\n      \"Bloomberg\",\r\n      \"Goldman Sachs\",\r\n      \"Uber\",\r\n      \"Snapchat\",\r\n      \"Intuit\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 32,\r\n    \"name\": \"Maximum Subarray\",\r\n    \"url\": \"https://leetcode.com/problems/maximum-subarray/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"LinkedIn\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Adobe\",\r\n      \"Bloomberg\",\r\n      \"Facebook\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 33,\r\n    \"name\": \"Range Sum Query - Immutable\",\r\n    \"url\": \"https://leetcode.com/problems/range-sum-query-immutable/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 34,\r\n    \"name\": \"House Robber II\",\r\n    \"url\": \"https://leetcode.com/problems/house-robber-ii/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 35,\r\n    \"name\": \"Coin Change\",\r\n    \"url\": \"https://leetcode.com/problems/coin-change/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Bloomberg\",\r\n      \"Amazon\",\r\n      \"Goldman Sachs\",\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Uber\",\r\n      \"Oracle\",\r\n      \"Facebook\",\r\n      \"Airbnb\",\r\n      \"BlackRock\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 36,\r\n    \"name\": \"Maximum Product Subarray\",\r\n    \"url\": \"https://leetcode.com/problems/maximum-product-subarray/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"LinkedIn\",\r\n      \"Amazon\",\r\n      \"Google\",\r\n      \"Facebook\",\r\n      \"Apple\",\r\n      \"Akuna Capital\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 37,\r\n    \"name\": \"Longest Increasing Subsequence\",\r\n    \"url\": \"https://leetcode.com/problems/longest-increasing-subsequence/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Apple\",\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Google\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Twitter\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 38,\r\n    \"name\": \"Longest Palindromic Substring\",\r\n    \"url\": \"https://leetcode.com/problems/longest-palindromic-substring/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Facebook\",\r\n      \"Adobe\",\r\n      \"Google\",\r\n      \"Goldman Sachs\",\r\n      \"Oracle\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 39,\r\n    \"name\": \"Word Break\",\r\n    \"url\": \"https://leetcode.com/problems/word-break/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Qualtrics\",\r\n      \"Google\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 40,\r\n    \"name\": \"Combination Sum IV\",\r\n    \"url\": \"https://leetcode.com/problems/combination-sum-iv/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 41,\r\n    \"name\": \"Decode Ways\",\r\n    \"url\": \"https://leetcode.com/problems/decode-ways/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"JPMorgan\",\r\n      \"Google\",\r\n      \"Facebook\",\r\n      \"Lyft\",\r\n      \"Goldman Sachs\",\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Uber\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 42,\r\n    \"name\": \"Unique Paths\",\r\n    \"url\": \"https://leetcode.com/problems/unique-paths/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Google\",\r\n      \"Salesforce\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 43,\r\n    \"name\": \"Jump Game\",\r\n    \"url\": \"https://leetcode.com/problems/jump-game/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\",\r\n      \"Greedy\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 44,\r\n    \"name\": \"Palindromic Substrings\",\r\n    \"url\": \"https://leetcode.com/problems/palindromic-substrings/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Goldman Sachs\",\r\n      \"Facebook\",\r\n      \"Twitter\",\r\n      \"Google\",\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 45,\r\n    \"name\": \"Number of Longest Increasing Subsequence\",\r\n    \"url\": \"https://leetcode.com/problems/number-of-longest-increasing-subsequence/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Bloomberg\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 46,\r\n    \"name\": \"Partition Equal Subset Sum\",\r\n    \"url\": \"https://leetcode.com/problems/partition-equal-subset-sum/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 47,\r\n    \"name\": \"Partition to K Equal Sum Subsets\",\r\n    \"url\": \"https://leetcode.com/problems/partition-to-k-equal-sum-subsets/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"LinkedIn\",\r\n      \"Google\",\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 48,\r\n    \"name\": \"Best Time to Buy and Sell Stock with Cooldown\",\r\n    \"url\": \"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Adobe\",\r\n      \"Goldman Sachs\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 49,\r\n    \"name\": \"Counting Bits\",\r\n    \"url\": \"https://leetcode.com/problems/counting-bits/\",\r\n    \"pattern\": [\r\n      \"Dynamic Programming\",\r\n      \"Bit Manipulation\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Dynamic Programming\"\r\n  },\r\n  {\r\n    \"id\": 50,\r\n    \"name\": \"Linked List Cycle\",\r\n    \"url\": \"https://leetcode.com/problems/linked-list-cycle/\",\r\n    \"pattern\": [\r\n      \"Fast & Slow Pointers\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Goldman Sachs\",\r\n      \"Google\",\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Fast & Slow Pointers\"\r\n  },\r\n  {\r\n    \"id\": 51,\r\n    \"name\": \"Middle of the Linked List\",\r\n    \"url\": \"https://leetcode.com/problems/middle-of-the-linked-list/\",\r\n    \"pattern\": [\r\n      \"Fast & Slow Pointers\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Fast & Slow Pointers\"\r\n  },\r\n  {\r\n    \"id\": 52,\r\n    \"name\": \"Palindrome Linked List\",\r\n    \"url\": \"https://leetcode.com/problems/palindrome-linked-list/\",\r\n    \"pattern\": [\r\n      \"Fast & Slow Pointers\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Capital One\",\r\n      \"Adobe\",\r\n      \"Bloomberg\",\r\n      \"Google\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Fast & Slow Pointers\"\r\n  },\r\n  {\r\n    \"id\": 53,\r\n    \"name\": \"Remove Linked List Elements\",\r\n    \"url\": \"https://leetcode.com/problems/remove-linked-list-elements/\",\r\n    \"pattern\": [\r\n      \"Fast & Slow Pointers\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Google\",\r\n      \"Microsoft\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Fast & Slow Pointers\"\r\n  },\r\n  {\r\n    \"id\": 54,\r\n    \"name\": \"Remove Duplicates from Sorted List\",\r\n    \"url\": \"https://leetcode.com/problems/remove-duplicates-from-sorted-list/\",\r\n    \"pattern\": [\r\n      \"Fast & Slow Pointers\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Goldman Sachs\",\r\n      \"Adobe\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Fast & Slow Pointers\"\r\n  },\r\n  {\r\n    \"id\": 55,\r\n    \"name\": \"Linked List Cycle II\",\r\n    \"url\": \"https://leetcode.com/problems/linked-list-cycle-ii/\",\r\n    \"pattern\": [\r\n      \"Fast & Slow Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Fast & Slow Pointers\"\r\n  },\r\n  {\r\n    \"id\": 56,\r\n    \"name\": \"Add Two Numbers\",\r\n    \"url\": \"https://leetcode.com/problems/add-two-numbers/\",\r\n    \"pattern\": [\r\n      \"Fast & Slow Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Microsoft\",\r\n      \"Google\",\r\n      \"Facebook\",\r\n      \"Apple\",\r\n      \"Adobe\",\r\n      \"Oracle\",\r\n      \"Uber\"\r\n    ],\r\n    \"category\": \"Fast & Slow Pointers\"\r\n  },\r\n  {\r\n    \"id\": 57,\r\n    \"name\": \"Remove Nth Node From End Of List\",\r\n    \"url\": \"https://leetcode.com/problems/remove-nth-node-from-end-of-list/\",\r\n    \"pattern\": [\r\n      \"Fast & Slow Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Fast & Slow Pointers\"\r\n  },\r\n  {\r\n    \"id\": 58,\r\n    \"name\": \"Sort List\",\r\n    \"url\": \"https://leetcode.com/problems/sort-list/\",\r\n    \"pattern\": [\r\n      \"Fast & Slow Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Fast & Slow Pointers\"\r\n  },\r\n  {\r\n    \"id\": 59,\r\n    \"name\": \"Reorder List\",\r\n    \"url\": \"https://leetcode.com/problems/reorder-list/\",\r\n    \"pattern\": [\r\n      \"Fast & Slow Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Lyft\"\r\n    ],\r\n    \"category\": \"Fast & Slow Pointers\"\r\n  },\r\n  {\r\n    \"id\": 60,\r\n    \"name\": \"Clone Graph\",\r\n    \"url\": \"https://leetcode.com/problems/clone-graph/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"DFS\",\r\n      \"Graph\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Twitter\",\r\n      \"Uber\",\r\n      \"Adobe\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Graph\"\r\n  },\r\n  {\r\n    \"id\": 61,\r\n    \"name\": \"Pacific Atlantic Water Flow\",\r\n    \"url\": \"https://leetcode.com/problems/pacific-atlantic-water-flow/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 62,\r\n    \"name\": \"Number of Islands\",\r\n    \"url\": \"https://leetcode.com/problems/number-of-islands/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"DFS\",\r\n      \"Union Find\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Microsoft\",\r\n      \"Facebook\",\r\n      \"Oracle\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Uber\",\r\n      \"Citadel\",\r\n      \"Qualtrics\",\r\n      \"Goldman Sachs\",\r\n      \"LinkedIn\",\r\n      \"Snapchat\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 63,\r\n    \"name\": \"Graph Valid Tree\",\r\n    \"url\": \"https://leetcode.com/problems/graph-valid-tree/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"DFS\",\r\n      \"Graph\",\r\n      \"Union Find\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Graph\"\r\n  },\r\n  {\r\n    \"id\": 64,\r\n    \"name\": \"Number of Connected Components in an Undirected Graph\",\r\n    \"url\": \"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"DFS\",\r\n      \"Graph\",\r\n      \"Union Find\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"LinkedIn\",\r\n      \"Microsoft\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Graph\"\r\n  },\r\n  {\r\n    \"id\": 65,\r\n    \"name\": \"Reverse Linked List\",\r\n    \"url\": \"https://leetcode.com/problems/reverse-linked-list/\",\r\n    \"pattern\": [\r\n      \"In-place reversal of a linked list\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Adobe\",\r\n      \"Apple\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Uber\",\r\n      \"Oracle\",\r\n      \"Google\",\r\n      \"Bloomberg\",\r\n      \"Goldman Sachs\"\r\n    ],\r\n    \"category\": \"LinkedList\"\r\n  },\r\n  {\r\n    \"id\": 66,\r\n    \"name\": \"Reverse Linked List II\",\r\n    \"url\": \"https://leetcode.com/problems/reverse-linked-list-ii/\",\r\n    \"pattern\": [\r\n      \"In-place reversal of a linked list\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"LinkedList\"\r\n  },\r\n  {\r\n    \"id\": 67,\r\n    \"name\": \"Rotate List\",\r\n    \"url\": \"https://leetcode.com/problems/rotate-list/\",\r\n    \"pattern\": [\r\n      \"In-place reversal of a linked list\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Bloomberg\",\r\n      \"Microsoft\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"LinkedList\"\r\n  },\r\n  {\r\n    \"id\": 68,\r\n    \"name\": \"Swap Nodes in Pairs\",\r\n    \"url\": \"https://leetcode.com/problems/swap-nodes-in-pairs/\",\r\n    \"pattern\": [\r\n      \"In-place reversal of a linked list\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"LinkedList\"\r\n  },\r\n  {\r\n    \"id\": 69,\r\n    \"name\": \"Odd Even Linked List\",\r\n    \"url\": \"https://leetcode.com/problems/odd-even-linked-list/\",\r\n    \"pattern\": [\r\n      \"In-place reversal of a linked list\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Bloomberg\",\r\n      \"Microsoft\",\r\n      \"Google\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"LinkedList\"\r\n  },\r\n  {\r\n    \"id\": 70,\r\n    \"name\": \"Reverse Nodes in k-Group\",\r\n    \"url\": \"https://leetcode.com/problems/reverse-nodes-in-k-group/\",\r\n    \"pattern\": [\r\n      \"In-place reversal of a linked list\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"LinkedList\"\r\n  },\r\n  {\r\n    \"id\": 71,\r\n    \"name\": \"Merge Two Sorted Lists\",\r\n    \"url\": \"https://leetcode.com/problems/merge-two-sorted-lists/\",\r\n    \"pattern\": [\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Adobe\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Facebook\",\r\n      \"Oracle\",\r\n      \"LinkedIn\",\r\n      \"Uber\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 72,\r\n    \"name\": \"Kth Smallest Element in a Sorted Matrix\",\r\n    \"url\": \"https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/\",\r\n    \"pattern\": [\r\n      \"Binary Search\",\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Google\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 73,\r\n    \"name\": \"Find K Pairs with Smallest Sums\",\r\n    \"url\": \"https://leetcode.com/problems/find-k-pairs-with-smallest-sums/\",\r\n    \"pattern\": [\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 74,\r\n    \"name\": \"Merge k Sorted Lists\",\r\n    \"url\": \"https://leetcode.com/problems/merge-k-sorted-lists/\",\r\n    \"pattern\": [\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Oracle\",\r\n      \"Twitter\",\r\n      \"Goldman Sachs\",\r\n      \"Uber\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 75,\r\n    \"name\": \"Smallest Range Covering Elements from K Lists\",\r\n    \"url\": \"https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists/\",\r\n    \"pattern\": [\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 76,\r\n    \"name\": \"Meeting Rooms\",\r\n    \"url\": \"https://leetcode.com/problems/meeting-rooms\",\r\n    \"pattern\": [\r\n      \"Intervals\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Bloomberg\",\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Intervals\"\r\n  },\r\n  {\r\n    \"id\": 77,\r\n    \"name\": \"Merge Intervals\",\r\n    \"url\": \"https://leetcode.com/problems/merge-intervals/\",\r\n    \"pattern\": [\r\n      \"Intervals\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"JPMorgan\",\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Adobe\",\r\n      \"Microsoft\",\r\n      \"Uber\",\r\n      \"Twitter\",\r\n      \"Qualtrics\",\r\n      \"Oracle\",\r\n      \"Salesforce\",\r\n      \"Walmart\"\r\n    ],\r\n    \"category\": \"Intervals\"\r\n  },\r\n  {\r\n    \"id\": 78,\r\n    \"name\": \"Interval List Intersections\",\r\n    \"url\": \"https://leetcode.com/problems/interval-list-intersections/\",\r\n    \"pattern\": [\r\n      \"Intervals\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Uber\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Amazon\",\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Intervals\"\r\n  },\r\n  {\r\n    \"id\": 79,\r\n    \"name\": \"Non-overlapping Intervals\",\r\n    \"url\": \"https://leetcode.com/problems/non-overlapping-intervals/\",\r\n    \"pattern\": [\r\n      \"Intervals\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Intervals\"\r\n  },\r\n  {\r\n    \"id\": 80,\r\n    \"name\": \"Meeting Rooms II\",\r\n    \"url\": \"https://leetcode.com/problems/meeting-rooms-ii/\",\r\n    \"pattern\": [\r\n      \"Heap\",\r\n      \"Intervals\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Google\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Uber\",\r\n      \"Oracle\",\r\n      \"Twitter\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Intervals\"\r\n  },\r\n  {\r\n    \"id\": 81,\r\n    \"name\": \"Task Scheduler\",\r\n    \"url\": \"https://leetcode.com/problems/task-scheduler/\",\r\n    \"pattern\": [\r\n      \"Greedy\",\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Google\",\r\n      \"Pinterest\",\r\n      \"Uber\",\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 82,\r\n    \"name\": \"Minimum Number of Arrows to Burst Balloons\",\r\n    \"url\": \"https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/\",\r\n    \"pattern\": [\r\n      \"Greedy\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Google\"\r\n    ],\r\n    \"category\": \"Greedy\"\r\n  },\r\n  {\r\n    \"id\": 83,\r\n    \"name\": \"Insert Interval\",\r\n    \"url\": \"https://leetcode.com/problems/insert-interval/\",\r\n    \"pattern\": [\r\n      \"Intervals\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\",\r\n      \"Twitter\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Intervals\"\r\n  },\r\n  {\r\n    \"id\": 84,\r\n    \"name\": \"Employee Free Time\",\r\n    \"url\": \"https://leetcode.com/problems/employee-free-time/\",\r\n    \"pattern\": [\r\n      \"Heap\",\r\n      \"Greedy\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Pinterest\",\r\n      \"Amazon\",\r\n      \"Intuit\",\r\n      \"Oracle\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 85,\r\n    \"name\": \"Binary Search\",\r\n    \"url\": \"https://leetcode.com/problems/binary-search/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 86,\r\n    \"name\": \"Find Smallest Letter Greater Than Target\",\r\n    \"url\": \"https://leetcode.com/problems/find-smallest-letter-greater-than-target/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"LinkedIn\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 87,\r\n    \"name\": \"Peak Index in a Mountain Array\",\r\n    \"url\": \"https://leetcode.com/problems/peak-index-in-a-mountain-array/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 88,\r\n    \"name\": \"Find Minimum in Rotated Sorted Array\",\r\n    \"url\": \"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Goldman Sachs\",\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Apple\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 89,\r\n    \"name\": \"Find Peak Element\",\r\n    \"url\": \"https://leetcode.com/problems/find-peak-element/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Google\",\r\n      \"Bloomberg\",\r\n      \"Quora\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 90,\r\n    \"name\": \"Search in Rotated Sorted Array\",\r\n    \"url\": \"https://leetcode.com/problems/search-in-rotated-sorted-array/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"LinkedIn\",\r\n      \"Oracle\",\r\n      \"Apple\",\r\n      \"Bloomberg\",\r\n      \"Google\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 91,\r\n    \"name\": \"Search in Rotated Sorted Array II\",\r\n    \"url\": \"https://leetcode.com/problems/search-in-rotated-sorted-array-ii/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 92,\r\n    \"name\": \"Search a 2D Matrix\",\r\n    \"url\": \"https://leetcode.com/problems/search-a-2d-matrix/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 93,\r\n    \"name\": \"Search a 2D Matrix II\",\r\n    \"url\": \"https://leetcode.com/problems/search-a-2d-matrix-ii/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 94,\r\n    \"name\": \"Find K Closest Elements\",\r\n    \"url\": \"https://leetcode.com/problems/find-k-closest-elements/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Google\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 95,\r\n    \"name\": \"Count of Range Sum\",\r\n    \"url\": \"https://leetcode.com/problems/count-of-range-sum/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Google\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 96,\r\n    \"name\": \"Minimum Size Subarray Sum\",\r\n    \"url\": \"https://leetcode.com/problems/minimum-size-subarray-sum/\",\r\n    \"pattern\": [\r\n      \"Sliding Window\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Goldman Sachs\",\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Facebook\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Sliding Window\"\r\n  },\r\n  {\r\n    \"id\": 97,\r\n    \"name\": \"Fruit Into Baskets\",\r\n    \"url\": \"https://leetcode.com/problems/fruit-into-baskets/\",\r\n    \"pattern\": [\r\n      \"Sliding Window\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\"\r\n    ],\r\n    \"category\": \"Sliding Window\"\r\n  },\r\n  {\r\n    \"id\": 98,\r\n    \"name\": \"Permutation in String\",\r\n    \"url\": \"https://leetcode.com/problems/permutation-in-string/\",\r\n    \"pattern\": [\r\n      \"Sliding Window\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Adobe\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Sliding Window\"\r\n  },\r\n  {\r\n    \"id\": 99,\r\n    \"name\": \"Longest Repeating Character Replacement\",\r\n    \"url\": \"https://leetcode.com/problems/longest-repeating-character-replacement/\",\r\n    \"pattern\": [\r\n      \"Sliding Window\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Sliding Window\"\r\n  },\r\n  {\r\n    \"id\": 100,\r\n    \"name\": \"Sliding Window Maximum\",\r\n    \"url\": \"https://leetcode.com/problems/sliding-window-maximum/\",\r\n    \"pattern\": [\r\n      \"Sliding Window\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Google\",\r\n      \"Citadel\",\r\n      \"Facebook\",\r\n      \"Bloomberg\",\r\n      \"Akuna Capital\",\r\n      \"Microsoft\",\r\n      \"Twitter\"\r\n    ],\r\n    \"category\": \"Sliding Window\"\r\n  },\r\n  {\r\n    \"id\": 101,\r\n    \"name\": \"Longest Substring Without Repeating Characters\",\r\n    \"url\": \"https://leetcode.com/problems/longest-substring-without-repeating-characters/\",\r\n    \"pattern\": [\r\n      \"Sliding Window\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Adobe\",\r\n      \"Goldman Sachs\",\r\n      \"Uber\",\r\n      \"Salesforce\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Sliding Window\"\r\n  },\r\n  {\r\n    \"id\": 102,\r\n    \"name\": \"Minimum Number of K Consecutive Bit Flips\",\r\n    \"url\": \"https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips/\",\r\n    \"pattern\": [\r\n      \"Sliding Window\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Sliding Window\"\r\n  },\r\n  {\r\n    \"id\": 103,\r\n    \"name\": \"Count Unique Characters of All Substrings of a Given String\",\r\n    \"url\": \"https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string/\",\r\n    \"pattern\": [\r\n      \"Sliding Window\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Sliding Window\"\r\n  },\r\n  {\r\n    \"id\": 104,\r\n    \"name\": \"Minimum Window Substring\",\r\n    \"url\": \"https://leetcode.com/problems/minimum-window-substring/\",\r\n    \"pattern\": [\r\n      \"Sliding Window\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Google\",\r\n      \"Apple\",\r\n      \"LinkedIn\",\r\n      \"Uber\",\r\n      \"Lyft\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Sliding Window\"\r\n  },\r\n  {\r\n    \"id\": 105,\r\n    \"name\": \"Substring with Concatenation of All Words\",\r\n    \"url\": \"https://leetcode.com/problems/substring-with-concatenation-of-all-words/\",\r\n    \"pattern\": [\r\n      \"Sliding Window\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Sliding Window\"\r\n  },\r\n  {\r\n    \"id\": 106,\r\n    \"name\": \"Kth Smallest Element in a BST\",\r\n    \"url\": \"https://leetcode.com/problems/kth-smallest-element-in-a-bst/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Adobe\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 107,\r\n    \"name\": \"K Closest Points to Origin\",\r\n    \"url\": \"https://leetcode.com/problems/k-closest-points-to-origin/\",\r\n    \"pattern\": [\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"LinkedIn\",\r\n      \"Google\",\r\n      \"Uber\",\r\n      \"Asana\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 108,\r\n    \"name\": \"Top K Frequent Elements\",\r\n    \"url\": \"https://leetcode.com/problems/top-k-frequent-elements/\",\r\n    \"pattern\": [\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Capital One\",\r\n      \"Oracle\",\r\n      \"Google\",\r\n      \"Bloomberg\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 109,\r\n    \"name\": \"Sort Characters By Frequency\",\r\n    \"url\": \"https://leetcode.com/problems/sort-characters-by-frequency/\",\r\n    \"pattern\": [\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Bloomberg\",\r\n      \"Amazon\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 110,\r\n    \"name\": \"Kth Largest Element in an Array\",\r\n    \"url\": \"https://leetcode.com/problems/kth-largest-element-in-an-array/\",\r\n    \"pattern\": [\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Google\",\r\n      \"Goldman Sachs\",\r\n      \"LinkedIn\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 111,\r\n    \"name\": \"Reorganize String\",\r\n    \"url\": \"https://leetcode.com/problems/reorganize-string/\",\r\n    \"pattern\": [\r\n      \"Greedy\",\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Google\",\r\n      \"Facebook\",\r\n      \"Uber\",\r\n      \"Goldman Sachs\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 112,\r\n    \"name\": \"Rearrange String k Distance Apart\",\r\n    \"url\": \"https://leetcode.com/problems/rearrange-string-k-distance-apart\",\r\n    \"pattern\": [\r\n      \"Greedy\",\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 113,\r\n    \"name\": \"Course Schedule III\",\r\n    \"url\": \"https://leetcode.com/problems/course-schedule-iii/\",\r\n    \"pattern\": [\r\n      \"Greedy\",\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 114,\r\n    \"name\": \"Maximum Frequency Stack\",\r\n    \"url\": \"https://leetcode.com/problems/maximum-frequency-stack/\",\r\n    \"pattern\": [\r\n      \"Bucket Sort\",\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Microsoft\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 115,\r\n    \"name\": \"Course Schedule\",\r\n    \"url\": \"https://leetcode.com/problems/course-schedule/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"DFS\",\r\n      \"Graph\",\r\n      \"Topological Sort\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Intuit\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Google\",\r\n      \"Uber\"\r\n    ],\r\n    \"category\": \"Graph\"\r\n  },\r\n  {\r\n    \"id\": 116,\r\n    \"name\": \"Course Schedule II\",\r\n    \"url\": \"https://leetcode.com/problems/course-schedule-ii/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"DFS\",\r\n      \"Graph\",\r\n      \"Topological Sort\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Facebook\",\r\n      \"Snapchat\",\r\n      \"Google\",\r\n      \"Oracle\",\r\n      \"Pinterest\",\r\n      \"Intuit\",\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Graph\"\r\n  },\r\n  {\r\n    \"id\": 117,\r\n    \"name\": \"Minimum Height Trees\",\r\n    \"url\": \"https://leetcode.com/problems/minimum-height-trees/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"Graph\",\r\n      \"Topological Sort\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Graph\"\r\n  },\r\n  {\r\n    \"id\": 118,\r\n    \"name\": \"Alien Dictionary\",\r\n    \"url\": \"https://leetcode.com/problems/alien-dictionary\",\r\n    \"pattern\": [\r\n      \"Graph\",\r\n      \"Topological Sort\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Airbnb\",\r\n      \"Pinterest\",\r\n      \"Google\",\r\n      \"Microsoft\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Graph\"\r\n  },\r\n  {\r\n    \"id\": 119,\r\n    \"name\": \"Sequence Reconstruction\",\r\n    \"url\": \"https://leetcode.com/problems/sequence-reconstruction\",\r\n    \"pattern\": [\r\n      \"Graph\",\r\n      \"Topological Sort\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Google\"\r\n    ],\r\n    \"category\": \"Graph\"\r\n  },\r\n  {\r\n    \"id\": 120,\r\n    \"name\": \"Binary Tree Level Order Traversal II\",\r\n    \"url\": \"https://leetcode.com/problems/binary-tree-level-order-traversal-ii/\",\r\n    \"pattern\": [\r\n      \"BFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 121,\r\n    \"name\": \"Average of Levels in Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/average-of-levels-in-binary-tree/\",\r\n    \"pattern\": [\r\n      \"BFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 122,\r\n    \"name\": \"Minimum Depth of Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/minimum-depth-of-binary-tree/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 123,\r\n    \"name\": \"Binary Tree Level Order Traversal\",\r\n    \"url\": \"https://leetcode.com/problems/binary-tree-level-order-traversal/\",\r\n    \"pattern\": [\r\n      \"BFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Bloomberg\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"LinkedIn\",\r\n      \"Adobe\",\r\n      \"Google\",\r\n      \"Uber\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 124,\r\n    \"name\": \"Binary Tree Zigzag Level Order Traversal\",\r\n    \"url\": \"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/\",\r\n    \"pattern\": [\r\n      \"BFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Apple\",\r\n      \"Facebook\",\r\n      \"Qualtrics\",\r\n      \"Google\",\r\n      \"Goldman Sachs\",\r\n      \"Oracle\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 125,\r\n    \"name\": \"Populating Next Right Pointers in Each Node\",\r\n    \"url\": \"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/\",\r\n    \"pattern\": [\r\n      \"BFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Google\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 126,\r\n    \"name\": \"Populating Next Right Pointers in Each Node II\",\r\n    \"url\": \"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/\",\r\n    \"pattern\": [\r\n      \"BFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 127,\r\n    \"name\": \"Binary Tree Right Side View\",\r\n    \"url\": \"https://leetcode.com/problems/binary-tree-right-side-view/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Microsoft\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 128,\r\n    \"name\": \"All Nodes Distance K in Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/\",\r\n    \"pattern\": [\r\n      \"BFS\",\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Google\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 129,\r\n    \"name\": \"Same Tree\",\r\n    \"url\": \"https://leetcode.com/problems/same-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Google\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 130,\r\n    \"name\": \"Path Sum\",\r\n    \"url\": \"https://leetcode.com/problems/path-sum/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 131,\r\n    \"name\": \"Diameter of Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/diameter-of-binary-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Bloomberg\",\r\n      \"Oracle\",\r\n      \"Google\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 132,\r\n    \"name\": \"Merge Two Binary Trees\",\r\n    \"url\": \"https://leetcode.com/problems/merge-two-binary-trees/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Google\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 133,\r\n    \"name\": \"Maximum Depth of Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/maximum-depth-of-binary-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"LinkedIn\",\r\n      \"Amazon\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 134,\r\n    \"name\": \"Lowest Common Ancestor of a Binary Search Tree\",\r\n    \"url\": \"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"LinkedIn\",\r\n      \"Oracle\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 135,\r\n    \"name\": \"Subtree of Another Tree\",\r\n    \"url\": \"https://leetcode.com/problems/subtree-of-another-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 136,\r\n    \"name\": \"Invert Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/invert-binary-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Google\",\r\n      \"Facebook\",\r\n      \"Bloomberg\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 137,\r\n    \"name\": \"Path Sum II\",\r\n    \"url\": \"https://leetcode.com/problems/path-sum-ii/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 138,\r\n    \"name\": \"Path Sum III\",\r\n    \"url\": \"https://leetcode.com/problems/path-sum-iii/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 139,\r\n    \"name\": \"Lowest Common Ancestor of a Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"LinkedIn\",\r\n      \"Apple\",\r\n      \"Oracle\",\r\n      \"Adobe\",\r\n      \"Google\",\r\n      \"Uber\",\r\n      \"Bloomberg\",\r\n      \"Intuit\",\r\n      \"Palantir\",\r\n      \"Atlassian\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 140,\r\n    \"name\": \"Maximum Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/maximum-binary-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 141,\r\n    \"name\": \"Maximum Width of Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/maximum-width-of-binary-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 142,\r\n    \"name\": \"Construct Binary Tree from Preorder and Inorder Traversal\",\r\n    \"url\": \"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Facebook\",\r\n      \"Bloomberg\",\r\n      \"Citadel\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 143,\r\n    \"name\": \"Validate Binary Search Tree\",\r\n    \"url\": \"https://leetcode.com/problems/validate-binary-search-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Bloomberg\",\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Asana\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Uber\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 144,\r\n    \"name\": \"Implement Trie (Prefix Tree)\",\r\n    \"url\": \"https://leetcode.com/problems/implement-trie-prefix-tree/\",\r\n    \"pattern\": [\r\n      \"Design\",\r\n      \"Trie\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Pinterest\",\r\n      \"Google\",\r\n      \"Microsoft\",\r\n      \"Facebook\",\r\n      \"Apple\",\r\n      \"Twitter\",\r\n      \"Goldman Sachs\"\r\n    ],\r\n    \"category\": \"Trie\"\r\n  },\r\n  {\r\n    \"id\": 145,\r\n    \"name\": \"Binary Tree Maximum Path Sum\",\r\n    \"url\": \"https://leetcode.com/problems/binary-tree-maximum-path-sum/\",\r\n    \"pattern\": [\r\n      \"DFS\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Google\",\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Bloomberg\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  },\r\n  {\r\n    \"id\": 146,\r\n    \"name\": \"Serialize and Deserialize Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/serialize-and-deserialize-binary-tree/\",\r\n    \"pattern\": [\r\n      \"Design\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"LinkedIn\",\r\n      \"Uber\",\r\n      \"Google\",\r\n      \"Bloomberg\",\r\n      \"Quora\",\r\n      \"Qualtrics\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Miscellaneous\"\r\n  },\r\n  {\r\n    \"id\": 147,\r\n    \"name\": \"Word Search II\",\r\n    \"url\": \"https://leetcode.com/problems/word-search-ii/\",\r\n    \"pattern\": [\r\n      \"DFS\",\r\n      \"Trie\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Uber\",\r\n      \"Google\",\r\n      \"Twitter\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Trie\"\r\n  },\r\n  {\r\n    \"id\": 148,\r\n    \"name\": \"Find Median from Data Stream\",\r\n    \"url\": \"https://leetcode.com/problems/find-median-from-data-stream/\",\r\n    \"pattern\": [\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Bloomberg\",\r\n      \"Goldman Sachs\",\r\n      \"Twitter\",\r\n      \"Adobe\",\r\n      \"Salesforce\",\r\n      \"Uber\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 149,\r\n    \"name\": \"Sliding Window Median\",\r\n    \"url\": \"https://leetcode.com/problems/sliding-window-median/\",\r\n    \"pattern\": [\r\n      \"Heap\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Google\",\r\n      \"JPMorgan\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Heap\"\r\n  },\r\n  {\r\n    \"id\": 150,\r\n    \"name\": \"Two Sum\",\r\n    \"url\": \"https://leetcode.com/problems/two-sum/\",\r\n    \"pattern\": [\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Adobe\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Facebook\",\r\n      \"Uber\",\r\n      \"Oracle\",\r\n      \"Twitter\",\r\n      \"Goldman Sachs\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 151,\r\n    \"name\": \"Squares of a Sorted Array\",\r\n    \"url\": \"https://leetcode.com/problems/squares-of-a-sorted-array/\",\r\n    \"pattern\": [\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Google\",\r\n      \"Apple\",\r\n      \"Uber\",\r\n      \"Bloomberg\",\r\n      \"Amazon\",\r\n      \"Microsoft\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 152,\r\n    \"name\": \"Backspace String Compare\",\r\n    \"url\": \"https://leetcode.com/problems/backspace-string-compare\",\r\n    \"pattern\": [\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Google\",\r\n      \"Oracle\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 153,\r\n    \"name\": \"3 Sum\",\r\n    \"url\": \"https://leetcode.com/problems/3sum/\",\r\n    \"pattern\": [\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Bloomberg\",\r\n      \"Google\",\r\n      \"Goldman Sachs\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 154,\r\n    \"name\": \"3 Sum Closest\",\r\n    \"url\": \"https://leetcode.com/problems/3sum-closest/\",\r\n    \"pattern\": [\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 155,\r\n    \"name\": \"Subarrays with Product Less than K\",\r\n    \"url\": \"https://leetcode.com/problems/subarray-product-less-than-k/\",\r\n    \"pattern\": [\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Bloomberg\",\r\n      \"LinkedIn\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 156,\r\n    \"name\": \"Sort Colours\",\r\n    \"url\": \"https://leetcode.com/problems/sort-colors/\",\r\n    \"pattern\": [\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Oracle\",\r\n      \"Adobe\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 157,\r\n    \"name\": \"Trapping Rain Water\",\r\n    \"url\": \"https://leetcode.com/problems/trapping-rain-water/\",\r\n    \"pattern\": [\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Facebook\",\r\n      \"Amazon\",\r\n      \"Goldman Sachs\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Apple\",\r\n      \"Google\",\r\n      \"Qualtrics\",\r\n      \"Oracle\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 158,\r\n    \"name\": \"Container With Most Water\",\r\n    \"url\": \"https://leetcode.com/problems/container-with-most-water/\",\r\n    \"pattern\": [\r\n      \"Two Pointers\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Google\",\r\n      \"Facebook\",\r\n      \"Goldman Sachs\",\r\n      \"Microsoft\",\r\n      \"Adobe\",\r\n      \"Apple\"\r\n    ],\r\n    \"category\": \"Two Pointers\"\r\n  },\r\n  {\r\n    \"id\": 159,\r\n    \"name\": \"Longest Word in Dictionary\",\r\n    \"url\": \"https://leetcode.com/problems/longest-word-in-dictionary/\",\r\n    \"pattern\": [\r\n      \"Trie\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Goldman Sachs\",\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Trie\"\r\n  },\r\n  {\r\n    \"id\": 160,\r\n    \"name\": \"Index Pairs of a String\",\r\n    \"url\": \"https://leetcode.com/problems/index-pairs-of-a-string/\",\r\n    \"pattern\": [\r\n      \"Trie\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Trie\"\r\n  },\r\n  {\r\n    \"id\": 161,\r\n    \"name\": \"Maximum XOR of Two Numbers in an Array\",\r\n    \"url\": \"https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array\",\r\n    \"pattern\": [\r\n      \"Trie\"\r\n    ],\r\n    \"difficulty\": \"Medium\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\"\r\n    ],\r\n    \"category\": \"Trie\"\r\n  },\r\n  {\r\n    \"id\": 162,\r\n    \"name\": \"Concatenated Words\",\r\n    \"url\": \"https://leetcode.com/problems/concatenated-words/\",\r\n    \"pattern\": [\r\n      \"Trie\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\"\r\n    ],\r\n    \"category\": \"Trie\"\r\n  },\r\n  {\r\n    \"id\": 163,\r\n    \"name\": \"Prefix and Suffix Search\",\r\n    \"url\": \"https://leetcode.com/problems/prefix-and-suffix-search/\",\r\n    \"pattern\": [\r\n      \"Trie\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Trie\"\r\n  },\r\n  {\r\n    \"id\": 164,\r\n    \"name\": \"Palindrome Pairs\",\r\n    \"url\": \"https://leetcode.com/problems/palindrome-pairs/\",\r\n    \"pattern\": [\r\n      \"Trie\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Airbnb\",\r\n      \"Facebook\"\r\n    ],\r\n    \"category\": \"Trie\"\r\n  },\r\n  {\r\n    \"id\": 165,\r\n    \"name\": \"Design Search Autocomplete System\",\r\n    \"url\": \"https://leetcode.com/problems/design-search-autocomplete-system/\",\r\n    \"pattern\": [\r\n      \"Trie\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Microsoft\",\r\n      \"Amazon\",\r\n      \"Lyft\",\r\n      \"Google\",\r\n      \"Snapchat\",\r\n      \"Goldman Sachs\"\r\n    ],\r\n    \"category\": \"Trie\"\r\n  },\r\n  {\r\n    \"id\": 166,\r\n    \"name\": \"Word Squares\",\r\n    \"url\": \"https://leetcode.com/problems/word-squares/\",\r\n    \"pattern\": [\r\n      \"Trie\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": true,\r\n    \"companies\": [\r\n      \"Bloomberg\"\r\n    ],\r\n    \"category\": \"Trie\"\r\n  },\r\n  {\r\n    \"id\": 167,\r\n    \"name\": \"Sort Items by Groups Respecting Dependencies\",\r\n    \"url\": \"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies/\",\r\n    \"pattern\": [\r\n      \"DFS\",\r\n      \"Graph\",\r\n      \"Topological Sort\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Google\"\r\n    ],\r\n    \"category\": \"Graph\"\r\n  },\r\n  {\r\n    \"id\": 168,\r\n    \"name\": \"Median of Two Sorted Arrays\",\r\n    \"url\": \"https://leetcode.com/problems/median-of-two-sorted-arrays/\",\r\n    \"pattern\": [\r\n      \"Binary Search\"\r\n    ],\r\n    \"difficulty\": \"Hard\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Goldman Sachs\",\r\n      \"Google\",\r\n      \"Facebook\",\r\n      \"Microsoft\",\r\n      \"Apple\",\r\n      \"Adobe\",\r\n      \"Bloomberg\",\r\n      \"Uber\"\r\n    ],\r\n    \"category\": \"Binary Search\"\r\n  },\r\n  {\r\n    \"id\": 169,\r\n    \"name\": \"Majority Element\",\r\n    \"url\": \"https://leetcode.com/problems/majority-element/\",\r\n    \"pattern\": [\r\n      \"Sorting\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Amazon\",\r\n      \"Microsoft\",\r\n      \"Bloomberg\",\r\n      \"Apple\",\r\n      \"Adobe\"\r\n    ],\r\n    \"category\": \"Sorting\"\r\n  },\r\n  {\r\n    \"id\": 170,\r\n    \"name\": \"Cousins in Binary Tree\",\r\n    \"url\": \"https://leetcode.com/problems/cousins-in-binary-tree/\",\r\n    \"pattern\": [\r\n      \"DFS\",\"BFS\"\r\n    ],\r\n    \"difficulty\": \"Easy\",\r\n    \"premium\": false,\r\n    \"companies\": [\r\n      \"Oracle\",\r\n    ],\r\n    \"category\": \"Tree / Graph\"\r\n  }\r\n];\r\nconst sortBy = { Easy: 0, Medium: 1, Hard: 2 };\r\n\r\nexport default questions.sort(\r\n  (a, b) => sortBy[a.difficulty] - sortBy[b.difficulty],\r\n);\r\n","import React from \"react\";\r\nimport Card from \"../Components/Card/Card\";\r\n// import Table from \"./Components/Table/Table\";\r\nimport styled from \"styled-components\";\r\nimport questions from \"../Assets/data/data\";\r\nconst StyledDashboard = styled.div`\r\n  margin-top: 110px;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Dashboard = (props) => {\r\n    const groupedQuestions = groupBy(questions, 'category');\r\n    console.log(groupedQuestions);\r\n    const item = Object.keys(groupedQuestions).map((cat) => {\r\n      const metaInfo = {category:cat,patterns:groupedQuestions[cat][0].pattern}\r\n      return <Card key={cat} meta={metaInfo}  questionList={groupedQuestions[cat]} />;\r\n  });\r\n  return <StyledDashboard>{item}</StyledDashboard>;\r\n};\r\nexport default Dashboard;\r\n\r\n\r\nexport const groupBy = (modelConnectionNodes, key) => {\r\n    const groupedEntities = {};\r\n    modelConnectionNodes.forEach((item) => {\r\n      const keyId = item[key];\r\n      groupedEntities[keyId] = groupedEntities[keyId]\r\n        ? [...groupedEntities[keyId], item]\r\n        : [item];\r\n    });\r\n    return groupedEntities;\r\n  };","export const tips = [\r\n  {\r\n    pattern: \"If asked for all permutations/subsets\",\r\n    techniques: [\"Backtracking\"],\r\n    examples: ['https://leetcode.com/problems/combination-sum/'],\r\n  },\r\n  {\r\n    pattern: \"If given a linked list then\",\r\n    techniques: [\"Two pointers\"],\r\n    examples: [\"https://leetcode.com/problems/remove-duplicates-from-sorted-array/\"]\r\n  },\r\n  {\r\n    pattern: \"If asked for maximum/minumum subarray/subset/options\",\r\n    techniques: [\"Dynamic programming\"],\r\n    examples: [\"https://leetcode.com/problems/maximum-subarray/\"]\r\n  },\r\n  {\r\n    pattern: \"If given a tree\",\r\n    techniques: [\"DFS\", \"BFS\"],\r\n    examples: [\"https://leetcode.com/problems/minimum-depth-of-binary-tree/\"]\r\n  },\r\n  {\r\n    pattern: \"If recursion is banned\",\r\n    techniques: [\"Stack\"],\r\n    examples: ['https://leetcode.com/problems/simplify-path/'],\r\n  },\r\n  {\r\n    pattern: \"If given a graph\",\r\n    techniques: [\"DFS\", \"BFS\"],\r\n    examples: [\"https://leetcode.com/problems/clone-graph/\"]\r\n  },\r\n  {\r\n    pattern: \"If asked for top/least K items then\",\r\n    techniques: [\"Heap\"],\r\n    examples: [\"https://leetcode.com/problems/kth-largest-element-in-an-array/\"]\r\n  },\r\n  {\r\n    pattern: \"If asked for common strings then\",\r\n    techniques: [\"Map\", \"Trie\"],\r\n    examples: [\"https://leetcode.com/problems/prefix-and-suffix-search/\"]\r\n  },\r\n  {\r\n    pattern: \"If must solve in-place then\",\r\n    techniques: [\r\n      \"Swap corresponding values\",\r\n      \"Store one or more different values in the same pointer\",\r\n    ],\r\n    examples: [\"https://leetcode.com/problems/shuffle-the-array/\"]\r\n  },\r\n  {\r\n    pattern: \"If input array is sorted then\",\r\n    techniques: [\"Binary search\", \"Two pointers\"],\r\n    examples: [\"https://leetcode.com/problems/search-insert-position/\"],\r\n  },\r\n];\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { tips } from \"../Assets/data/tips\";\r\nimport { Icon } from \"../Components/icons\";\r\nconst StyledSection = styled.section`\r\n\r\n\r\n.tip-lists{\r\n list-style-type:none;\r\n}\r\n\r\n\r\n/* .tip::before{\r\n    content: '\\2022';\r\n    color: var(--green);\r\n} */\r\n\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  margin-top: 110px;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .tip-list {\r\n    list-style-type: none;\r\n    margin: 10px;\r\n    padding: 0;\r\n  }\r\n\r\n  .tip {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    min-height: 90px;\r\n    margin: 20px 0px;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    width: 100%;\r\n    background: var(--light-navy);\r\n  }\r\n\r\n  .technique {\r\n    width: 20%;\r\n  }\r\n\r\n  .pattern {\r\n    width: 60%;\r\n  }\r\n  .example {\r\n    width: 20%;\r\n    justify-self: flex-end;\r\n    a {\r\n      ${({ theme }) => theme.mixins.flexCenter};\r\n      flex-shrink: 0;\r\n    }\r\n\r\n    a + a {\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n  .p-head {\r\n    margin: 0 !important;\r\n    padding: 0 !important;\r\n  }\r\n  @media (max-width: 768px) {\r\n    .tip {\r\n      flex-flow: column wrap;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-grow: 1 1 auto;\r\n      text-align: center;\r\n    }\r\n    .pattern {\r\n      width: auto;\r\n      margin:10px;\r\n    }\r\n    .example {\r\n      width: auto;\r\n      margin:10px;\r\n\r\n    }\r\n    .technique {\r\n      width: auto;\r\n      margin:10px;\r\n\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tips = () => {\r\n  return (\r\n    <StyledDiv>\r\n      <ul className=\"tip-list\">\r\n        {tips.map((tip, index) => {\r\n          return (\r\n            <li key={index} className=\"tip\">\r\n              <div className=\"pattern\">\r\n                <h5 className=\"p-head\">{tip.pattern} </h5>\r\n              </div>\r\n              <div className=\"technique\">\r\n                <h4 className=\"p-head\">{tip.techniques.join(\" . \")}</h4>\r\n              </div>\r\n              <div className=\"example\">\r\n                <a href={tip.examples[0]} style={{ height: \"20px\" }}>\r\n                  <Icon name=\"External\" />\r\n                </a>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default Tips;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSection = styled.section`\r\n  margin-top: 120px;\r\n`;\r\n\r\nconst Credits = (props) => {\r\n  return (\r\n    <StyledSection>\r\n      <div>credit page works!</div>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","import React from \"react\";\r\nimport Dashboard from \"../Pages/Dashboard\";\r\nimport Tips from \"../Pages/Tips\";\r\nimport Credits from \"../Pages/Credits\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nconst router = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/dashboard\">\r\n        <Dashboard />\r\n      </Route>\r\n      <Route path=\"/tips\">\r\n        <Tips />\r\n      </Route>\r\n      <Route path=\"/credits\">\r\n        <Credits />\r\n      </Route>\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/dashboard\",\r\n        }}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default router;\r\n","export const isMobile = () => window.matchMedia(\"(max-width: 700px)\").matches;\r\n\r\nexport const tourSteps = [\r\n  {\r\n    selector: \".logo\",\r\n    content: () => (\r\n      <div>\r\n        <h2>Welcome!</h2>\r\n        <div color=\"#e5e5e5\">\r\n          Let's take a complete tour of the application.\r\n        </div>\r\n        <div color=\"#373737\" size=\".7em\" style={{ marginTop: \".7em\" }}>\r\n          click next to start\r\n        </div>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: true,\r\n  },\r\n  {\r\n    selector: \".project-inner\",\r\n    content: () => (\r\n      <div>\r\n        <h2> Cards </h2>\r\n        <p>\r\n          {\" \"}\r\n          Each Card consist of questions on the topic. You need to click on the\r\n          card to open the questions.{\" \"}\r\n        </p>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: true,\r\n  },\r\n  {\r\n    selector: \".project-title\",\r\n    content: () => (\r\n      <div>\r\n        <h2> Category </h2>\r\n        <p>\r\n          This is the topic name. Each question in this card will be related to\r\n          this topic.{\" \"}\r\n        </p>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: true,\r\n  },\r\n  {\r\n    selector: \".problems-dist\",\r\n    content: () => (\r\n      <div>\r\n        <h2> Problems </h2>\r\n        <p>\r\n          This Chart shows the problem distribution based on the difficulty.\r\n        </p>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: false,\r\n  },\r\n  {\r\n    selector: \".problems-solved\",\r\n    content: () => (\r\n      <div>\r\n        <h2> Solved </h2>\r\n        <p>This Chart shows the problems you have solved.</p>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: true,\r\n  },\r\n  {\r\n    selector: \".project-inner\",\r\n    content: () => (\r\n      <div>\r\n        <h2> Open the questions </h2>\r\n        <p> 🔺 Click on the highlighed Card above!</p>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: true,\r\n  },\r\n  {\r\n    selector: \".title\",\r\n    content: () => (\r\n      <div>\r\n        <h2> Problem name </h2>\r\n        <p>\r\n          This is the problem name. Clicking on this column will open this\r\n          problem in a new tab.\r\n        </p>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: true,\r\n  },\r\n  {\r\n    selector: \".overline\",\r\n    content: () => (\r\n      <div>\r\n        <h2> Check </h2>\r\n        <p>To track your progress check the questions you've completed.</p>\r\n        <p>Remember, time is the key.</p>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: true,\r\n  },\r\n  {\r\n    selector: \".links\",\r\n    content: () => (\r\n      <div>\r\n        <h2> Solution </h2>\r\n        <p>\r\n          click on this link to open the leetcode discussion tab for this\r\n          problem.\r\n        </p>\r\n        <p>Remember, take help only when you don't get the problem at all.</p>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: false,\r\n  },\r\n  {\r\n    selector: \".pattern\",\r\n    content: () => (\r\n      <div>\r\n        <h2> Asked by </h2>\r\n        <p>\r\n          This column tells if this questions was asked by companies in real\r\n          interviews.\r\n        </p>\r\n        <p>Based on Leetcode.</p>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: false,\r\n  },\r\n  {\r\n    selector: \".card-label\",\r\n    content: () => (\r\n      <div>\r\n        <h2> Hide </h2>\r\n        <p>Turn on this switch to hide the questions you've already solved.</p>\r\n        <div>\r\n          <div style={{ marginTop: \"10px\" }}>\r\n            <h5> Finished </h5>\r\n            <p> Click on Close to dismiss the tour.</p>\r\n            <p>\r\n              <input type=\"checkbox\" defaultChecked />\r\n              <span style={{ marginLeft: \"5px\" }}> Don't show again! </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ),\r\n    style: {\r\n      backgroundColor: \"var(--navy)\",\r\n      color: \"var(--slate)\",\r\n    },\r\n    showOnMobile: true,\r\n  },\r\n];\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Layout from \"./Components/Layout\";\nimport Router from \"./core/router\";\nimport Tour from \"reactour\";\nimport { isMobile, tourSteps } from \"./util/util\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst mobile = isMobile();\nconst steps = tourSteps.filter((step) => {\n  if (!(mobile && step.showOnMobile === false)) {\n    return true;\n  }\n});\n\nfunction App() {\n  const [isTourOpen, setIsTourOpen] = useState(false);\n  const [nextStep, setNextStep] = useState(undefined);\n\n  const tourClosed = (e) => {\n    window.localStorage.setItem(\"tourDone\", true);\n    setIsTourOpen(false);\n  };\n\n  useEffect(() => {\n    const isTourDone = window.localStorage.getItem(\"tourDone\");\n    setIsTourOpen(isTourDone ? false : true);\n  }, []);\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Router />\n          <Tour\n            steps={steps}\n            isOpen={isTourOpen}\n            onRequestClose={tourClosed}\n            rounded={5}\n            lastStepNextButton={<div className=\"close-btn\">Close</div>}\n            accentColor=\"var(--green)\"\n            showNumber={false}\n            className=\"modal\"\n            closeWithMask={false}\n            startAt={nextStep}\n          />\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport  { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle, theme } from \"./styles\";\n\nconst app = (\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}